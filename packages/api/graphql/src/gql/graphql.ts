/* eslint-disable */
import { DocumentTypeDecoration } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /**
   * The DateTime scalar type represents date and time as a string in RFC3339 format.
   * For example: "1985-04-12T23:20:50.52Z" represents 20 mins 50.52 secs after the 23rd hour of Apr 12th 1985 in UTC.
   */
  DateTime: { input: any; output: any; }
  /**
   * The Int64 scalar type represents a signed 64‐bit numeric non‐fractional value.
   * Int64 can represent values in range [-(2^63),(2^63 - 1)].
   */
  Int64: { input: any; output: any; }
};

export type AddAlertInput = {
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_content_s?: InputMaybe<Scalars['String']['input']>;
  details_enabled_i?: InputMaybe<Scalars['Int64']['input']>;
  details_level_n?: InputMaybe<Scalars['String']['input']>;
  details_level_s?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  notifies?: InputMaybe<Array<DocumentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddAlertPayload = {
  __typename?: 'AddAlertPayload';
  alert?: Maybe<Array<Maybe<Alert>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddAlertPayloadAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AlertOrder>;
};

export type AddAssignbadgeInput = {
  badge?: InputMaybe<Array<BadgeRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']['input']>;
  details_autoApprove_i?: InputMaybe<Scalars['Int64']['input']>;
  details_badge_c?: InputMaybe<Scalars['String']['input']>;
  details_badge_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_electionId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endTime_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startTime_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  ownedby?: InputMaybe<Array<MemberRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_category_s?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_proposer_n?: InputMaybe<Scalars['String']['input']>;
  system_selfApproved_i?: InputMaybe<Scalars['Int64']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddAssignbadgePayload = {
  __typename?: 'AddAssignbadgePayload';
  assignbadge?: Maybe<Array<Maybe<Assignbadge>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddAssignbadgePayloadAssignbadgeArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignbadgeOrder>;
};

export type AddAssignmentInput = {
  assignee?: InputMaybe<Array<DocumentRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  claimed?: InputMaybe<Array<PeriodRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  curtimeshare?: InputMaybe<Array<TimeshareRef>>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']['input']>;
  details_approvedDeferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_assignee_n?: InputMaybe<Scalars['String']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_fulltimeCapacityX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_husdSalaryPerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_hvoiceSalaryPerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_hyphaSalaryPerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_instantHusdPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']['input']>;
  details_owner_n?: InputMaybe<Scalars['String']['input']>;
  details_pegSalaryPerPeriod_a?: InputMaybe<Scalars['String']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_rewardSalaryPerPeriod_a?: InputMaybe<Scalars['String']['input']>;
  details_role_c?: InputMaybe<Scalars['String']['input']>;
  details_role_i?: InputMaybe<Scalars['Int64']['input']>;
  details_salaryBandId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_seedsEscrowSalaryPerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_seedsInstantSalaryPerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_suspensionDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  details_usdSalaryValuePerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_voiceSalaryPerPeriod_a?: InputMaybe<Scalars['String']['input']>;
  details_withdrawalDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_withdrawalNotes_s?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  initimeshare?: InputMaybe<Array<TimeshareRef>>;
  lastimeshare?: InputMaybe<Array<TimeshareRef>>;
  original?: InputMaybe<Array<AssignmentRef>>;
  ownedby?: InputMaybe<Array<DocumentRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  salaryband?: InputMaybe<Array<SalarybandRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']['input']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  timeshare?: InputMaybe<Array<TimeshareRef>>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddAssignmentPayload = {
  __typename?: 'AddAssignmentPayload';
  assignment?: Maybe<Array<Maybe<Assignment>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddAssignmentPayloadAssignmentArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignmentOrder>;
};

export type AddAttestationInput = {
  attestedby?: InputMaybe<Array<MemberRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_treasurer_n?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddAttestationPayload = {
  __typename?: 'AddAttestationPayload';
  attestation?: Maybe<Array<Maybe<Attestation>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddAttestationPayloadAttestationArgs = {
  filter?: InputMaybe<AttestationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AttestationOrder>;
};

export type AddBadgeInput = {
  assignment?: InputMaybe<Array<AssignbadgeRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String']['input'];
  copyof?: InputMaybe<Array<BadgeRef>>;
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']['input']>;
  details_badge_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_detailsPurposeS_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_husdCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_hvoiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_hyphaCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_icon_s?: InputMaybe<Scalars['String']['input']>;
  details_maxCycles_i?: InputMaybe<Scalars['Int64']['input']>;
  details_maxPeriodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  details_pegCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_purpose_s?: InputMaybe<Scalars['String']['input']>;
  details_rewardCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_seedsCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_voiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  docId: Scalars['String']['input'];
  heldby?: InputMaybe<Array<MemberRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_badgeId_i?: InputMaybe<Scalars['Int64']['input']>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_defaultAsset_i?: InputMaybe<Scalars['Int64']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_proposer_n?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddBadgePayload = {
  __typename?: 'AddBadgePayload';
  badge?: Maybe<Array<Maybe<Badge>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddBadgePayloadBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BadgeOrder>;
};

export type AddBalanceInput = {
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_quantity_a?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  owner?: InputMaybe<Array<MemberRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddBalancePayload = {
  __typename?: 'AddBalancePayload';
  balance?: Maybe<Array<Maybe<Balance>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddBalancePayloadBalanceArgs = {
  filter?: InputMaybe<BalanceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BalanceOrder>;
};

export type AddBillingInfoInput = {
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_billingDay_i?: InputMaybe<Scalars['Int64']['input']>;
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_expirationDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_isInfinite_i?: InputMaybe<Scalars['Int64']['input']>;
  details_offerDiscountPercX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_planName_s?: InputMaybe<Scalars['String']['input']>;
  details_planPrice_a?: InputMaybe<Scalars['String']['input']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_totalPaid_a?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  nextbill?: InputMaybe<Array<BillingInfoRef>>;
  priceoffer?: InputMaybe<Array<PriceOfferRef>>;
  pricingplan?: InputMaybe<Array<PricingPlanRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddBillingInfoPayload = {
  __typename?: 'AddBillingInfoPayload';
  billingInfo?: Maybe<Array<Maybe<BillingInfo>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddBillingInfoPayloadBillingInfoArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BillingInfoOrder>;
};

export type AddBudgetInput = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  circle?: InputMaybe<Array<CircleRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_circleId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_usdAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddBudgetPayload = {
  __typename?: 'AddBudgetPayload';
  budget?: Maybe<Array<Maybe<Budget>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddBudgetPayloadBudgetArgs = {
  filter?: InputMaybe<BudgetFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BudgetOrder>;
};

export type AddCalendarInput = {
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  dao?: InputMaybe<Array<DaoRef>>;
  docId: Scalars['String']['input'];
  end?: InputMaybe<Array<PeriodRef>>;
  period?: InputMaybe<Array<PeriodRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddCalendarPayload = {
  __typename?: 'AddCalendarPayload';
  calendar?: Maybe<Array<Maybe<Calendar>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddCalendarPayloadCalendarArgs = {
  filter?: InputMaybe<CalendarFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CalendarOrder>;
};

export type AddCircleInput = {
  applicant?: InputMaybe<Array<MemberRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  budget?: InputMaybe<Array<BudgetRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_autoApprove_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']['input']>;
  details_purpose_s?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  lockedby?: InputMaybe<Array<BudgetRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentcircle?: InputMaybe<Array<DocumentRef>>;
  subcircle?: InputMaybe<Array<CircleRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_selfApproved_i?: InputMaybe<Scalars['Int64']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddCirclePayload = {
  __typename?: 'AddCirclePayload';
  circle?: Maybe<Array<Maybe<Circle>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddCirclePayloadCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CircleOrder>;
};

export type AddCmntSectionInput = {
  cmntsectof?: InputMaybe<Array<DocumentRef>>;
  comment?: InputMaybe<Array<CommentRef>>;
  commentSection_likes_i?: InputMaybe<Scalars['Int64']['input']>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  docId: Scalars['String']['input'];
  likeDetails_likes_i?: InputMaybe<Scalars['Int64']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddCmntSectionPayload = {
  __typename?: 'AddCmntSectionPayload';
  cmntSection?: Maybe<Array<Maybe<CmntSection>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddCmntSectionPayloadCmntSectionArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CmntSectionOrder>;
};

export type AddCommentInput = {
  comment?: InputMaybe<Array<CommentRef>>;
  comment_author_n?: InputMaybe<Scalars['String']['input']>;
  comment_commentCount_i?: InputMaybe<Scalars['Int64']['input']>;
  comment_content_s?: InputMaybe<Scalars['String']['input']>;
  comment_deleted_i?: InputMaybe<Scalars['Int64']['input']>;
  commentof?: InputMaybe<Array<DocumentRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  docId: Scalars['String']['input'];
  likeDetails_likes_i?: InputMaybe<Scalars['Int64']['input']>;
  likes_johnnyhypha1_i?: InputMaybe<Scalars['Int64']['input']>;
  reactedby?: InputMaybe<Array<MemberRef>>;
  reaction?: InputMaybe<Array<ReactionRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddCommentPayload = {
  __typename?: 'AddCommentPayload';
  comment?: Maybe<Array<Maybe<Comment>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddCommentPayloadCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CommentOrder>;
};

export type AddCursorInput = {
  cursor: Scalars['String']['input'];
  id: Scalars['String']['input'];
};

export type AddCursorPayload = {
  __typename?: 'AddCursorPayload';
  cursor?: Maybe<Array<Maybe<Cursor>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddCursorPayloadCursorArgs = {
  filter?: InputMaybe<CursorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CursorOrder>;
};

export type AddDaoDraftInput = {
  anchorparent?: InputMaybe<Array<DaoRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_daoName_n?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  settings?: InputMaybe<Array<SettingsRef>>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddDaoDraftPayload = {
  __typename?: 'AddDaoDraftPayload';
  daoDraft?: Maybe<Array<Maybe<DaoDraft>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddDaoDraftPayloadDaoDraftArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoDraftOrder>;
};

export type AddDaoInput = {
  admin?: InputMaybe<Array<MemberRef>>;
  alert?: InputMaybe<Array<AlertRef>>;
  anchorchild?: InputMaybe<Array<DaoRef>>;
  anchorparent?: InputMaybe<Array<DaoRef>>;
  applicant?: InputMaybe<Array<MemberRef>>;
  badge?: InputMaybe<Array<BadgeRef>>;
  calendar?: InputMaybe<Array<CalendarRef>>;
  chiefdelegate?: InputMaybe<Array<MemberRef>>;
  chiefround?: InputMaybe<Array<ElectnRoundRef>>;
  childdraft?: InputMaybe<Array<DaoDraftRef>>;
  circle?: InputMaybe<Array<CircleRef>>;
  closedprops?: InputMaybe<Array<DocumentRef>>;
  commember?: InputMaybe<Array<MemberRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  current?: InputMaybe<Array<PeriodRef>>;
  delegate?: InputMaybe<Array<MemberRef>>;
  details_daoName_n: Scalars['String']['input'];
  details_daoType_s?: InputMaybe<Scalars['String']['input']>;
  details_isWaitingEcosystem_i?: InputMaybe<Scalars['Int64']['input']>;
  details_unusedField_n?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  election?: InputMaybe<Array<UpvtElectnRef>>;
  end?: InputMaybe<Array<PeriodRef>>;
  enroller?: InputMaybe<Array<MemberRef>>;
  failedprops?: InputMaybe<Array<DocumentRef>>;
  headdelegate?: InputMaybe<Array<MemberRef>>;
  headround?: InputMaybe<Array<ElectnRoundRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  northstrhold?: InputMaybe<Array<MemberRef>>;
  ongoingelct?: InputMaybe<Array<UpvtElectnRef>>;
  openmultisig?: InputMaybe<Array<MultisigRef>>;
  owner?: InputMaybe<Array<MemberRef>>;
  owns?: InputMaybe<Array<CalendarRef>>;
  passedprops?: InputMaybe<Array<DocumentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  period?: InputMaybe<Array<PeriodRef>>;
  planmanager?: InputMaybe<Array<PlanManagerRef>>;
  previouselct?: InputMaybe<Array<UpvtElectnRef>>;
  proposal?: InputMaybe<Array<DocumentRef>>;
  questcomple?: InputMaybe<Array<QuestcompleRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  round?: InputMaybe<Array<ElectnRoundRef>>;
  salaryband?: InputMaybe<Array<SalarybandRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  stagingprop?: InputMaybe<Array<DocumentRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  suspended?: InputMaybe<Array<DocumentRef>>;
  system_nodeLabel_n?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  treasury?: InputMaybe<Array<TreasuryRef>>;
  type: Scalars['String']['input'];
  ueElection?: InputMaybe<Array<UpvtElectnRef>>;
  ueOngoing?: InputMaybe<Array<UpvtElectnRef>>;
  uePrevious?: InputMaybe<Array<UpvtElectnRef>>;
  ueUpcoming?: InputMaybe<Array<UpvtElectnRef>>;
  upcomingelct?: InputMaybe<Array<UpvtElectnRef>>;
  updatedDate: Scalars['DateTime']['input'];
  votable?: InputMaybe<Array<DocumentRef>>;
  voter?: InputMaybe<Array<MemberRef>>;
};

export type AddDaoPayload = {
  __typename?: 'AddDaoPayload';
  dao?: Maybe<Array<Maybe<Dao>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddDaoPayloadDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};

export type AddDhoInput = {
  Cx3K2?: InputMaybe<Array<DaoRef>>;
  Ele2?: InputMaybe<Array<DaoRef>>;
  L2Nep42?: InputMaybe<Array<DaoRef>>;
  adminbdg?: InputMaybe<Array<BadgeRef>>;
  alert?: InputMaybe<Array<AlertRef>>;
  applicant?: InputMaybe<Array<MemberRef>>;
  badge?: InputMaybe<Array<BadgeRef>>;
  chiefdelegate?: InputMaybe<Array<BadgeRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  dao?: InputMaybe<Array<DaoRef>>;
  defbadge?: InputMaybe<Array<BadgeRef>>;
  defband?: InputMaybe<Array<SalarybandRef>>;
  defpriceplan?: InputMaybe<Array<PricingPlanRef>>;
  defrole?: InputMaybe<Array<DocumentRef>>;
  delegate?: InputMaybe<Array<BadgeRef>>;
  details_rootNode_n: Scalars['String']['input'];
  docId: Scalars['String']['input'];
  ecopriceplan?: InputMaybe<Array<PricingPlanRef>>;
  enrollerbdg?: InputMaybe<Array<BadgeRef>>;
  failedprops?: InputMaybe<Array<DocumentRef>>;
  headdelegate?: InputMaybe<Array<BadgeRef>>;
  lunar?: InputMaybe<Array<CalendarRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  passedprops?: InputMaybe<Array<DocumentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  pricingplan?: InputMaybe<Array<PricingPlanRef>>;
  proposal?: InputMaybe<Array<DocumentRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  suspended?: InputMaybe<Array<AssignmentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  weekly?: InputMaybe<Array<CalendarRef>>;
};

export type AddDhoPayload = {
  __typename?: 'AddDhoPayload';
  dho?: Maybe<Array<Maybe<Dho>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddDhoPayloadDhoArgs = {
  filter?: InputMaybe<DhoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DhoOrder>;
};

export type AddDoccacheConfigInput = {
  contract: Scalars['String']['input'];
  documentsTable: Scalars['String']['input'];
  edgesTable: Scalars['String']['input'];
  elasticApiKey: Scalars['String']['input'];
  elasticEndpoint: Scalars['String']['input'];
  eosEndpoint: Scalars['String']['input'];
  id: Scalars['String']['input'];
};

export type AddDoccacheConfigPayload = {
  __typename?: 'AddDoccacheConfigPayload';
  doccacheConfig?: Maybe<Array<Maybe<DoccacheConfig>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddDoccacheConfigPayloadDoccacheConfigArgs = {
  filter?: InputMaybe<DoccacheConfigFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DoccacheConfigOrder>;
};

export type AddEditInput = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotDescription_s?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotTitle_s?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']['input']>;
  details_originalDocument_i?: InputMaybe<Scalars['Int64']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_role_c?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  original?: InputMaybe<Array<DocumentRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddEditPayload = {
  __typename?: 'AddEditPayload';
  edit?: Maybe<Array<Maybe<Edit>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddEditPayloadEditArgs = {
  filter?: InputMaybe<EditFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<EditOrder>;
};

export type AddElectnGroupInput = {
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_memberCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_videolink_s?: InputMaybe<Scalars['String']['input']>;
  details_winner_i?: InputMaybe<Scalars['Int64']['input']>;
  docId: Scalars['String']['input'];
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  ueGroupWin?: InputMaybe<Array<MemberRef>>;
  ueRdMember?: InputMaybe<Array<MemberRef>>;
  ueVote?: InputMaybe<Array<UpvtVoteRef>>;
  updatedDate: Scalars['DateTime']['input'];
};

export type AddElectnGroupPayload = {
  __typename?: 'AddElectnGroupPayload';
  electnGroup?: Maybe<Array<Maybe<ElectnGroup>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddElectnGroupPayloadElectnGroupArgs = {
  filter?: InputMaybe<ElectnGroupFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnGroupOrder>;
};

export type AddElectnRoundInput = {
  candidate?: InputMaybe<Array<DocumentRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_delegatePower_i?: InputMaybe<Scalars['Int64']['input']>;
  details_duration_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_passingCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_roundDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_type_s?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  election?: InputMaybe<Array<UpvtElectnRef>>;
  nextround?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  ueElection?: InputMaybe<Array<UpvtElectnRef>>;
  ueGroupLnk?: InputMaybe<Array<ElectnGroupRef>>;
  ueNextrnd?: InputMaybe<Array<ElectnRoundRef>>;
  ueWinner?: InputMaybe<Array<MemberRef>>;
  updatedDate: Scalars['DateTime']['input'];
  voted?: InputMaybe<Array<MemberRef>>;
  winner?: InputMaybe<Array<DocumentRef>>;
};

export type AddElectnRoundPayload = {
  __typename?: 'AddElectnRoundPayload';
  electnRound?: Maybe<Array<Maybe<ElectnRound>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddElectnRoundPayloadElectnRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};

export type AddEventInput = {
  eventType: EventType;
  name: Scalars['String']['input'];
  notifications?: InputMaybe<Array<NotificationRef>>;
};

export type AddEventPayload = {
  __typename?: 'AddEventPayload';
  event?: Maybe<Array<Maybe<Event>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddEventPayloadEventArgs = {
  filter?: InputMaybe<EventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<EventOrder>;
};

export type AddMemberInput = {
  adminbdg?: InputMaybe<Array<AssignbadgeRef>>;
  applicantof?: InputMaybe<Array<DocumentRef>>;
  applofcirc?: InputMaybe<Array<CircleRef>>;
  approvemsig?: InputMaybe<Array<MultisigRef>>;
  assignbadge?: InputMaybe<Array<AssignbadgeRef>>;
  assigned?: InputMaybe<Array<AssignmentRef>>;
  attested?: InputMaybe<Array<AttestationRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_member_n: Scalars['String']['input'];
  docId: Scalars['String']['input'];
  elctngroup?: InputMaybe<Array<VoteGroupRef>>;
  enrollerbdg?: InputMaybe<Array<AssignbadgeRef>>;
  entrustedto?: InputMaybe<Array<QueststartRef>>;
  holdsbadge?: InputMaybe<Array<BadgeRef>>;
  memberof?: InputMaybe<Array<DocumentRef>>;
  memberofcirc?: InputMaybe<Array<CircleRef>>;
  owns?: InputMaybe<Array<DocumentRef>>;
  paid?: InputMaybe<Array<PaymentRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  questcomplet?: InputMaybe<Array<DocumentRef>>;
  reactedto?: InputMaybe<Array<CommentRef>>;
  reactionlnk?: InputMaybe<Array<ReactionRef>>;
  redeembal?: InputMaybe<Array<BalanceRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  treasurerof?: InputMaybe<Array<TreasuryRef>>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  vote?: InputMaybe<Array<VoteRef>>;
};

export type AddMemberPayload = {
  __typename?: 'AddMemberPayload';
  member?: Maybe<Array<Maybe<Member>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddMemberPayloadMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};

export type AddMemoInput = {
  assigned?: InputMaybe<Array<AssignmentRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_memo_s?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  owns?: InputMaybe<Array<DocumentRef>>;
  paid?: InputMaybe<Array<PaymentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddMemoPayload = {
  __typename?: 'AddMemoPayload';
  memo?: Maybe<Array<Maybe<Memo>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddMemoPayloadMemoArgs = {
  filter?: InputMaybe<MemoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemoOrder>;
};

export type AddMsigInfoInput = {
  approvedby?: InputMaybe<Array<MemberRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_proposalName_n?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_treasurer_n?: InputMaybe<Scalars['String']['input']>;
  details_treasuryId_i?: InputMaybe<Scalars['Int64']['input']>;
  docId: Scalars['String']['input'];
  payment?: InputMaybe<Array<TrsyPaymentRef>>;
  signer?: InputMaybe<Array<MemberRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddMsigInfoPayload = {
  __typename?: 'AddMsigInfoPayload';
  msigInfo?: Maybe<Array<Maybe<MsigInfo>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddMsigInfoPayloadMsigInfoArgs = {
  filter?: InputMaybe<MsigInfoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MsigInfoOrder>;
};

export type AddMultisigInput = {
  approvedby?: InputMaybe<Array<MemberRef>>;
  canceledby?: InputMaybe<Array<MemberRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_owner_n?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  executedby?: InputMaybe<Array<MemberRef>>;
  settings_communityVotingAlignmentPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingDurationSec_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingMethod_s?: InputMaybe<Scalars['String']['input']>;
  settings_communityVotingQuorumPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_daoTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_daoUrl_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_documentationButtonText_s?: InputMaybe<Scalars['String']['input']>;
  settings_documentationURL_s?: InputMaybe<Scalars['String']['input']>;
  settings_exploreBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_exploreParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_exploreTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_extendedLogo_s?: InputMaybe<Scalars['String']['input']>;
  settings_logo_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersApplicationEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_membersBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_msigApprovalAmount_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_multisigEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_organisationBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternBase64_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternOpacity_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_pattern_s?: InputMaybe<Scalars['String']['input']>;
  settings_primaryColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsCreationEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_proposalsParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_removableBannersEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_secondaryColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_socialChat_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_textColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_title_s?: InputMaybe<Scalars['String']['input']>;
  settings_upvoteCheifDelegateCount_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteCheifDelegateDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteHeadDelegateDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteHeadDelegateRound_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteRounds_s?: InputMaybe<Scalars['String']['input']>;
  settings_upvoteStartDateTime_s?: InputMaybe<Scalars['String']['input']>;
  settings_url_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingAlignmentPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingAlignmentX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingDurationSec_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingDurationSec_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingQuorumPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingQuorumX100_i?: InputMaybe<Scalars['Int64']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddMultisigPayload = {
  __typename?: 'AddMultisigPayload';
  multisig?: Maybe<Array<Maybe<Multisig>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddMultisigPayloadMultisigArgs = {
  filter?: InputMaybe<MultisigFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MultisigOrder>;
};

export type AddNotificationInput = {
  content: Scalars['String']['input'];
  event: EventRef;
  read: Scalars['Boolean']['input'];
  time: Scalars['DateTime']['input'];
  user: UserRef;
};

export type AddNotificationPayload = {
  __typename?: 'AddNotificationPayload';
  notification?: Maybe<Array<Maybe<Notification>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type AddNotificationPayloadNotificationArgs = {
  filter?: InputMaybe<NotificationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<NotificationOrder>;
};

export type AddPaymentInput = {
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_amount_a?: InputMaybe<Scalars['String']['input']>;
  details_assignmentHash_c?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_memo_s?: InputMaybe<Scalars['String']['input']>;
  details_paymentDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_payoutHash_c?: InputMaybe<Scalars['String']['input']>;
  details_periodHash_c?: InputMaybe<Scalars['String']['input']>;
  details_recipientHash_c?: InputMaybe<Scalars['String']['input']>;
  details_recipient_n?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddPaymentPayload = {
  __typename?: 'AddPaymentPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  payment?: Maybe<Array<Maybe<Payment>>>;
};


export type AddPaymentPayloadPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PaymentOrder>;
};

export type AddPayoutInput = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completed?: InputMaybe<Array<PayoutRef>>;
  completedby?: InputMaybe<Array<PayoutRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_bypassEscrow_i?: InputMaybe<Scalars['Int64']['input']>;
  details_content_s?: InputMaybe<Scalars['String']['input']>;
  details_contributionDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_husdAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_hvoiceAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_hyphaAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_instantHusdPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_isCustom_i?: InputMaybe<Scalars['Int64']['input']>;
  details_owner_n?: InputMaybe<Scalars['String']['input']>;
  details_paymentDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_proposalSubtype_n?: InputMaybe<Scalars['String']['input']>;
  details_proposalType_n?: InputMaybe<Scalars['String']['input']>;
  details_proposer_n?: InputMaybe<Scalars['String']['input']>;
  details_questStart_i?: InputMaybe<Scalars['Int64']['input']>;
  details_recipient_n?: InputMaybe<Scalars['String']['input']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_seedsAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_seedsEscrowAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_seedsInstantAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  details_usdAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  lockedby?: InputMaybe<Array<PayoutRef>>;
  ownedby?: InputMaybe<Array<DocumentRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  queststart?: InputMaybe<Array<PayoutRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']['input']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddPayoutPayload = {
  __typename?: 'AddPayoutPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  payout?: Maybe<Array<Maybe<Payout>>>;
};


export type AddPayoutPayloadPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PayoutOrder>;
};

export type AddPeriodInput = {
  calendar?: InputMaybe<Array<CalendarRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_label_s?: InputMaybe<Scalars['String']['input']>;
  details_startTime_t?: InputMaybe<Scalars['DateTime']['input']>;
  docId: Scalars['String']['input'];
  next?: InputMaybe<Array<PeriodRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_readableStartDate_s?: InputMaybe<Scalars['String']['input']>;
  system_readableStartTime_s?: InputMaybe<Scalars['String']['input']>;
  system_updatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddPeriodPayload = {
  __typename?: 'AddPeriodPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  period?: Maybe<Array<Maybe<Period>>>;
};


export type AddPeriodPayloadPeriodArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};

export type AddPlanManagerInput = {
  bill?: InputMaybe<Array<BillingInfoRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  currentbill?: InputMaybe<Array<BillingInfoRef>>;
  details_credit_a?: InputMaybe<Scalars['String']['input']>;
  details_type_s?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  lastbill?: InputMaybe<Array<BillingInfoRef>>;
  prevstartbil?: InputMaybe<Array<BillingInfoRef>>;
  startbill?: InputMaybe<Array<BillingInfoRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddPlanManagerPayload = {
  __typename?: 'AddPlanManagerPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  planManager?: Maybe<Array<Maybe<PlanManager>>>;
};


export type AddPlanManagerPayloadPlanManagerArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PlanManagerOrder>;
};

export type AddPolicyInput = {
  ascendant?: InputMaybe<Array<PolicyRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  dao?: InputMaybe<Array<DaoRef>>;
  descendant?: InputMaybe<Array<PolicyRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_masterPolicy_i?: InputMaybe<Scalars['Int64']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']['input']>;
  details_purpose_s?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  masterpolicy?: InputMaybe<Array<PolicyRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentcircle?: InputMaybe<Array<CircleRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddPolicyPayload = {
  __typename?: 'AddPolicyPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  policy?: Maybe<Array<Maybe<Policy>>>;
};


export type AddPolicyPayloadPolicyArgs = {
  filter?: InputMaybe<PolicyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PolicyOrder>;
};

export type AddPollInput = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_votingMethod_s?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddPollPayload = {
  __typename?: 'AddPollPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  poll?: Maybe<Array<Maybe<Poll>>>;
};


export type AddPollPayloadPollArgs = {
  filter?: InputMaybe<PollFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PollOrder>;
};

export type AddPriceOfferInput = {
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_tag_s?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddPriceOfferPayload = {
  __typename?: 'AddPriceOfferPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  priceOffer?: Maybe<Array<Maybe<PriceOffer>>>;
};


export type AddPriceOfferPayloadPriceOfferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PriceOfferOrder>;
};

export type AddPricingPlanInput = {
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_maxMemberCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  details_price_a?: InputMaybe<Scalars['String']['input']>;
  details_reactivationPeriodSec_i?: InputMaybe<Scalars['Int64']['input']>;
  docId: Scalars['String']['input'];
  priceoffer?: InputMaybe<Array<PriceOfferRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddPricingPlanPayload = {
  __typename?: 'AddPricingPlanPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  pricingPlan?: Maybe<Array<Maybe<PricingPlan>>>;
};


export type AddPricingPlanPayloadPricingPlanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PricingPlanOrder>;
};

export type AddQuestcompleInput = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_questStart_c?: InputMaybe<Scalars['String']['input']>;
  details_recipient_n?: InputMaybe<Scalars['String']['input']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  ownedby?: InputMaybe<Array<MemberRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddQuestcomplePayload = {
  __typename?: 'AddQuestcomplePayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  questcomple?: Maybe<Array<Maybe<Questcomple>>>;
};


export type AddQuestcomplePayloadQuestcompleArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QuestcompleOrder>;
};

export type AddQuestcompletInput = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completed?: InputMaybe<Array<QueststartRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_proposalSubtype_n?: InputMaybe<Scalars['String']['input']>;
  details_questStart_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  ownedby?: InputMaybe<Array<MemberRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddQuestcompletPayload = {
  __typename?: 'AddQuestcompletPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  questcomplet?: Maybe<Array<Maybe<Questcomplet>>>;
};


export type AddQuestcompletPayloadQuestcompletArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QuestcompletOrder>;
};

export type AddQueststartInput = {
  ascendant?: InputMaybe<Array<QueststartRef>>;
  assignee?: InputMaybe<Array<MemberRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  circle?: InputMaybe<Array<CircleRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completedby?: InputMaybe<Array<DocumentRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  dao?: InputMaybe<Array<DaoRef>>;
  descendant?: InputMaybe<Array<QueststartRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']['input']>;
  details_assignee_n?: InputMaybe<Scalars['String']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_circleId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_fulltimeCapacityX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']['input']>;
  details_parentQuest_i?: InputMaybe<Scalars['Int64']['input']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_pegCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_recipient_n?: InputMaybe<Scalars['String']['input']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_rewardCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  details_usdAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_voiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  docId: Scalars['String']['input'];
  failedprops?: InputMaybe<Array<QuestcompletRef>>;
  lockedby?: InputMaybe<Array<QuestcompletRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentquest?: InputMaybe<Array<QueststartRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddQueststartPayload = {
  __typename?: 'AddQueststartPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  queststart?: Maybe<Array<Maybe<Queststart>>>;
};


export type AddQueststartPayloadQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QueststartOrder>;
};

export type AddReactionInput = {
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  docId: Scalars['String']['input'];
  reaction_type_n?: InputMaybe<Scalars['String']['input']>;
  reactionlnkr?: InputMaybe<Array<MemberRef>>;
  reactionof?: InputMaybe<Array<CommentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddReactionPayload = {
  __typename?: 'AddReactionPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  reaction?: Maybe<Array<Maybe<Reaction>>>;
};


export type AddReactionPayloadReactionArgs = {
  filter?: InputMaybe<ReactionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ReactionOrder>;
};

export type AddRedemptionInput = {
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_amountPaid_a?: InputMaybe<Scalars['String']['input']>;
  details_amountRequested_a?: InputMaybe<Scalars['String']['input']>;
  details_requestor_n?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  legacy_id_i?: InputMaybe<Scalars['Int64']['input']>;
  legacy_notes_s?: InputMaybe<Scalars['String']['input']>;
  paidby?: InputMaybe<Array<TrsyPaymentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddRedemptionPayload = {
  __typename?: 'AddRedemptionPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  redemption?: Maybe<Array<Maybe<Redemption>>>;
};


export type AddRedemptionPayloadRedemptionArgs = {
  filter?: InputMaybe<RedemptionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<RedemptionOrder>;
};

export type AddRoleInput = {
  assignment?: InputMaybe<Array<AssignmentRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']['input']>;
  details_autoApprove_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_fulltimeCapacityX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_minTimeShareX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  details_originId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_owner_n?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_suspensionDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_defaultAsset_i?: InputMaybe<Scalars['Int64']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']['input']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_selfApproved_i?: InputMaybe<Scalars['Int64']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddRolePayload = {
  __typename?: 'AddRolePayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  role?: Maybe<Array<Maybe<Role>>>;
};


export type AddRolePayloadRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<RoleOrder>;
};

export type AddSalarybandInput = {
  assignment?: InputMaybe<Array<AssignmentRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  system_defaultAsset_i?: InputMaybe<Scalars['Int64']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddSalarybandPayload = {
  __typename?: 'AddSalarybandPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  salaryband?: Maybe<Array<Maybe<Salaryband>>>;
};


export type AddSalarybandPayloadSalarybandArgs = {
  filter?: InputMaybe<SalarybandFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SalarybandOrder>;
};

export type AddSettingsInput = {
  admins_account_n?: InputMaybe<Scalars['String']['input']>;
  admins_updatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  docId: Scalars['String']['input'];
  ecosystem_domain_s?: InputMaybe<Scalars['String']['input']>;
  ecosystem_logo_s?: InputMaybe<Scalars['String']['input']>;
  ecosystem_name_s?: InputMaybe<Scalars['String']['input']>;
  ecosystem_purpose_s?: InputMaybe<Scalars['String']['input']>;
  onboarders_account_n?: InputMaybe<Scalars['String']['input']>;
  onboarders_updatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  otherSettings_logo_s?: InputMaybe<Scalars['String']['input']>;
  settings_account_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_addAdminsEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_claimEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_commentsContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_commentsContract_s?: InputMaybe<Scalars['String']['input']>;
  settings_communityVotingAlignmentPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingDurationSec_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingMethod_s?: InputMaybe<Scalars['String']['input']>;
  settings_communityVotingQuorumPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityotingQuorumPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityotingQuorumPercent_s?: InputMaybe<Scalars['String']['input']>;
  settings_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  settings_contractsVersion_s?: InputMaybe<Scalars['String']['input']>;
  settings_daoDescription_s?: InputMaybe<Scalars['String']['input']>;
  settings_daoName_n?: InputMaybe<Scalars['String']['input']>;
  settings_daoSuper_s?: InputMaybe<Scalars['String']['input']>;
  settings_daoTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_daoUrl_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardOverlayColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardOverlayOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardPatternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardPatternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_discordURL_s?: InputMaybe<Scalars['String']['input']>;
  settings_discordUrl_s?: InputMaybe<Scalars['String']['input']>;
  settings_documentationButtonText_s?: InputMaybe<Scalars['String']['input']>;
  settings_documentationURL_s?: InputMaybe<Scalars['String']['input']>;
  settings_documentationUrl_s?: InputMaybe<Scalars['String']['input']>;
  settings_ecosystemChildPriceStaked_a?: InputMaybe<Scalars['String']['input']>;
  settings_ecosystemChildPrice_a?: InputMaybe<Scalars['String']['input']>;
  settings_ecosystemPriceStaked_a?: InputMaybe<Scalars['String']['input']>;
  settings_ecosystemPrice_a?: InputMaybe<Scalars['String']['input']>;
  settings_exploreBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_exploreParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_exploreTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_extendedLogo_s?: InputMaybe<Scalars['String']['input']>;
  settings_governanceTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_headerPattern_s?: InputMaybe<Scalars['String']['input']>;
  settings_homepageHeader_s?: InputMaybe<Scalars['String']['input']>;
  settings_homepageSubtitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_husdTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_hvoiceTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_hyphaCosaleContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_hyphaDeferralFactorX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_hyphaTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_hyphaUsdValue_a?: InputMaybe<Scalars['String']['input']>;
  settings_isHypha_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_logo_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersApplicationEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_membersBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersHeader_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersOverlayColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersOverlayOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersPatternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersPatternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersSubtitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_msigApprovalAmount_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_multisigEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_myOtherOtherSetting_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_myOtherSetting_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_mySetting_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_name_s?: InputMaybe<Scalars['String']['input']>;
  settings_nativeToken_a?: InputMaybe<Scalars['String']['input']>;
  settings_nextCommentSection_n?: InputMaybe<Scalars['String']['input']>;
  settings_nextProposalNameInt_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_nextScheduleId_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_nextScheduledId_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_onboarderAccount_n?: InputMaybe<Scalars['String']['input']>;
  settings_organisationBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationOverlayColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationOverlayOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationPatternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationPatternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_organizationHeader_s?: InputMaybe<Scalars['String']['input']>;
  settings_organizationSubtitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternBase64_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternOpacity_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_patternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_pattern_s?: InputMaybe<Scalars['String']['input']>;
  settings_paused_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_pegTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_pegTokenName_s?: InputMaybe<Scalars['String']['input']>;
  settings_pegToken_a?: InputMaybe<Scalars['String']['input']>;
  settings_periodDurationSec_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_periodDurationSec_s?: InputMaybe<Scalars['String']['input']>;
  settings_primaryColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsCreationEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_proposalsHeader_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsOverlayColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsOverlayOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsPatternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsPatternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsSubtitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_publisherContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_redemptionsEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_removableBannersEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_rewardToPegRatio_a?: InputMaybe<Scalars['String']['input']>;
  settings_rewardTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_rewardTokenMaxSupply_a?: InputMaybe<Scalars['String']['input']>;
  settings_rewardTokenName_s?: InputMaybe<Scalars['String']['input']>;
  settings_rewardToken_a?: InputMaybe<Scalars['String']['input']>;
  settings_rootNode_s?: InputMaybe<Scalars['String']['input']>;
  settings_saleHyphaUsdValue_a?: InputMaybe<Scalars['String']['input']>;
  settings_secondaryColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_seedsDeferralFactorX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_seedsEscrowContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_seedsTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_settingsPatternBase64S_s?: InputMaybe<Scalars['String']['input']>;
  settings_settingsVotingAlignmentX100I_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_settingsVotingQuorumX100I_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_socialChat_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashOverlayColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashOverlayOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashPatternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashPatternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_testSet_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_testSetting_a?: InputMaybe<Scalars['String']['input']>;
  settings_testSetting_s?: InputMaybe<Scalars['String']['input']>;
  settings_textColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_threshold_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_title_s?: InputMaybe<Scalars['String']['input']>;
  settings_treasuryAccount_n?: InputMaybe<Scalars['String']['input']>;
  settings_treasuryContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_treasuryTokenMultiplier_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_updatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  settings_upvoteCheifDelegateCount_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteCheifDelegateDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteChiefDelegateCount_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteHeadDelegateDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteHeadDelegateRound_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteRounds_s?: InputMaybe<Scalars['String']['input']>;
  settings_upvoteStartDateTime_s?: InputMaybe<Scalars['String']['input']>;
  settings_upvoteStartDate_s?: InputMaybe<Scalars['String']['input']>;
  settings_upvoteStartTime_s?: InputMaybe<Scalars['String']['input']>;
  settings_url_s?: InputMaybe<Scalars['String']['input']>;
  settings_usesSeeds_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_utilityTokenMultiplier_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_vOTINGDURATIONSEC_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_voiceTokenDecayPerPeriodX10M_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_voiceTokenDecayPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_voiceTokenDecayPeriod_s?: InputMaybe<Scalars['String']['input']>;
  settings_voiceTokenMultiplier_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_voiceToken_a?: InputMaybe<Scalars['String']['input']>;
  settings_votingAlignmentPercentX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingAlignmentPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingAlignmentPercent_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingAlignmentX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingAlignmentX100_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingDurationSec_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingDurationSec_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingDurationSeconds_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingMethod_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingQuorumPercentX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingQuorumPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingQuorumPercent_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingQuorumX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingQuorumX100_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  tests_testingsettings_i?: InputMaybe<Scalars['Int64']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  urls_url1Bk1Yxby2Tie_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1Fmizk1Zuyi2_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1Fvbfectvsxc_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1Mmp4Pfmrerr_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1N5Kz3Gemseg_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1Ovembm4Jczo_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1Qfetejflafl_s?: InputMaybe<Scalars['String']['input']>;
  urls_url2Q3Pz2Hn43Gq_s?: InputMaybe<Scalars['String']['input']>;
  urls_url2T3Aybfvqorw_s?: InputMaybe<Scalars['String']['input']>;
  urls_url2T4Fdni1Styb_s?: InputMaybe<Scalars['String']['input']>;
  urls_url2Xegtmj2Jdsf_s?: InputMaybe<Scalars['String']['input']>;
  urls_url2Yfg3Nvby1Zl_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3Cen4Uzdy2Es_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3G2Adxfbf4Yt_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3Lk4Nzggpubi_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3O3W1Ggvkkax_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3Qgrntosyxiz_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3Vf2X13Lcepd_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4D2V4Xmgbir2_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Ehml2Vqzp5C_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Ezfoukyd4K2_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Fewyw1Qtrek_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Jaepm23Od5W_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4K4Gcongezpv_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Qkkymwtssjj_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4U5F1Ppy4Xan_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Urhwj1Paeo5_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Uvjpanvhvtl_s?: InputMaybe<Scalars['String']['input']>;
  urls_url5Kkb3Tpwjiho_s?: InputMaybe<Scalars['String']['input']>;
  urls_url5Lsfqinc2Zyb_s?: InputMaybe<Scalars['String']['input']>;
  urls_url5Qakaspwwetv_s?: InputMaybe<Scalars['String']['input']>;
  urls_url5Vn4Ybbadgjj_s?: InputMaybe<Scalars['String']['input']>;
  urls_url5Z4Qztkwnbkk_s?: InputMaybe<Scalars['String']['input']>;
  urls_url15Mgh14Vkqke_s?: InputMaybe<Scalars['String']['input']>;
  urls_url22Vnqfsm3Q3S_s?: InputMaybe<Scalars['String']['input']>;
  urls_url25Dkrzm3Pr5R_s?: InputMaybe<Scalars['String']['input']>;
  urls_url32Xgw4Lmfaxh_s?: InputMaybe<Scalars['String']['input']>;
  urls_url34Vxjg3Npjih_s?: InputMaybe<Scalars['String']['input']>;
  urls_url35U3Jkcydkur_s?: InputMaybe<Scalars['String']['input']>;
  urls_url54Eb13Kaahtj_s?: InputMaybe<Scalars['String']['input']>;
  urls_url55Lqnw53A3V3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlA4Tm1Gd5Nb52_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAbh12Dbbhrtt_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAdhsdaccieey_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAikwmmc5Uf2X_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAjxblzgtavwl_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAn4Magusqjef_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAo4Cz1Fwtq4V_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAzpexlyerb3N_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlB1Qzplmrrhiz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlB1Z2Znjsedtr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlB14Mblffsutj_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBamamaps_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBblegacy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBbxp5Sxonbia_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBcrdm2Xqkdmb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBethenewdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBjsmt2Esdzib_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBmhh3Zcw5Xmr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBmvy1F4Jyxpk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBoevvh44Prqa_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBsdkpibjyzkg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBtchanged_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBtchangedho_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBtchangedno_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBwnmqskbvs5C_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBwr1Upma2Yjf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlC3Jxagqsq4C3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCatalyst23_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCdviq1Ltflhf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCgpvbclbywfg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlChildalphadx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlChildttrx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCjxpo4Yaulrl_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCloser_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlClubdaounive_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCpqveafwtbun_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCwiab3Vsqw5T_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCy22K5T4N2Tu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlD4Kdbzvzgrt5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDd3Ymiavtdcy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDearwisearth_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDemoeosdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDemoxdaox2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDemoxdaox_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDevatarswrld_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDhotell_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDht5Wzq2Kjyk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDjmtdxgjiorc_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDkpke5Idbkvd_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDl51Qmvjsego_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDmp5Bw4Gzxkr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDnsz1Cbwxpap_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDoqxuyw5Ciem_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDriuukputcgz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDtmiyxuodgkp_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDvqpp5Sdtrdg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDxyzf1Ukies3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlE1Esoh1Keajs_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEarthwisefut_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEdm3Mnsg1Hns_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEghlh3Znzqwr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEhgegumzynw3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEk4Lpxh2Ma4S_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEnn5C2Fkbs3W_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEoctlpr3Jd5I_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEqi5Rxrwzjbs_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEv4Hb5Obkagx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEwk4Xoaqeisc_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEz2Elj1Cje1Z_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFastdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFbbu5Diqmx5P_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFc2Fxwh43X1B_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFczw2Xsw5Eat_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFdd3Lbrpwkvj_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFew2Txlhcmrg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFincasagrada_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFjkqwlfpui2U_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFjvqqx2Ztp2C_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFkhvavzzorf1_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFrontdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFrwzlupynkxh_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFzfqmy1Ahz1A_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlG1Apwwd2Tnva_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlG1Plywuz5Ogb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGa4Pytexiwkw_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGaianet_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGaiauniondhe_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGdgcrhbar3Gn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGenesisventu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGiffj4Yhsuoq_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGkcxfa51Ytmn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGpsngzpbx4Ix_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGreeninitfo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGreenwood_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGrwaymzqcxh4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGvyzicu3Ctj1_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlH1Zrlvo24Tkz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHc3Kr2Twzk1E_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHibvjoibbfd2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHmntptjudozg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHolisticsyst_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHqooypm5Ukct_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHrgufaizyp5J_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHy1B1Bwahvfo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHy4Ojcxxjynn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHypha_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHyphademo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlI4Wrguhpfslr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlI5Nkntm5Xnav_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlI31Ggvxj54Je_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIcinet_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIdc3Uaupzw2I_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIe3Thvphmxbr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIgm5Ieu43Izx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIhy4W4Zrrmr4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIkhhrizzdmkt_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIm3Skdhoqrz5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlImcxnrjr5Te4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIntegrity_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIpbxmrsdrwsb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIunzuazm122M_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJ5Hcurppvbc2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJ25Oi2B5J21Q_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJdjqhjoyhnhy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJgp4Eyy4Ike4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJhfybqi5Jcdv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJii2Elpvl2Ai_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJobth5Uqnhar_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJoznzd5Fskk2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJupiter_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJwok2Ycpzgou_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJzoepolpnudo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlK5Fzn5Ztdchz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlK5Yhstzkcbrk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKd2U1Nqd5Zpm_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKedxcfee4Pbk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKefskfhz3Hkt_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKiajiljlp4Fz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKitchen_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKsjjde4Hbn2U_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKuladao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKv2Eibsrpcaf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKvqzvpqle2Oi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlL4Hlmodr2Ux2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlL54Gm5Hzawwg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLalagardens_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLgzydegefd2O_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLightleaders_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLiminalvill_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLkhwazi4Ggp3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLn3Vzjj252Hd_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLndfupfa2H5D_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLnfd5Gnly5Ui_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLnxbx3Pixmbf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlM4Hk2S2Vxs1F_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlM53Fbwxxgnrh_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMbaajxm41Hfa_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMeczomzsoiuz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMf33Nwhrc2Pi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMfdx2Sjxjbpf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMjsie3Zvqqrm_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMksii3R3Ifuz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMomdho_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMoq3Io4Gwguv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMotlops3Fmcy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMq32Dxpku1Yw_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMwm5Qizc3Gmi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlN1M4Hyjb3Prq_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlN2Qb4Oq5Ceme_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlN11Wig1Pds3W_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlN32Wvxvkqbkb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNa1Sonzbvtk5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNcv3H5Dm45Qg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNduy5Bttdrqq_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNestr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNewsouthafr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNextgenvill_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNivtbyuhk3Rd_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNkchcudxo425_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNonnhrtoku1Z_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNoqcp5Afx5E5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlO3Tzzbjaraj3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOctuxbu5Kdpl_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOkkhmgkejuup_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOpdv42Sk3Yun_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOqeavbgf5H2H_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOqmt53D3Nijf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOriginwisdom_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOsthmvtcvqk2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOsylrx3Zyo3I_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOvfykbv5N252_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOzxvgkytgfm5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlP3Xqs1Vy53J4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPachamamaris_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPcwoiacrdzml_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPgkuvuyd5Tkf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPkpcaltfb2An_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPlanetcare_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPtogan1Cqjp2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPuwpla2N5Z4A_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPy5X2Caqgvwr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPyzxw1Bos3Es_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQ4Hexzhmslt3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQbcbgv4Gpczw_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQhftw3Yknfus_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQmakgqzdtki4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQonpkk3Lyivx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQqwe2Utvgisr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQr2Prxbizjbv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQr5Jcgndgadi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQs23P4Homwaf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQsabrv1Zpcyu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlR2Ttskh142Kv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlR3Dtwhyei41K_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlR24Dca2Vwnnm_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlR31Xdmdluztn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRegencivics_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRegeneratex_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRegenliving_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRipplesdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRiver_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRjjzxayy4C5I_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRjlaa4Xyt2Fe_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRjnr5Ufv3Hiz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRlbajxwjl1Ue_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRrt1Iycndxxf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRtq42Lbetbxl_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRtrmcn3Avkf1_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRtudvevl2Cjt_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRysnpti3Bdvg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlS2Zwpt2Rqxhy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSaltcrossgar_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSamaratrust_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSctawkeupscc_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSeedscommons_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlShepherddao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlShkwh1Iynyh4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSi2Jvmzemt31_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSilxhs5C5Nar_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSk1Ojvjucrfq_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSmwgavmt5Ryt_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSoil1Orwrmps_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSotzumhlphtx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSrmiubqdc4Rk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSs53Hoim4Gt3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSxjul33Jf1Bv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlT2Oqxmtjpk3X_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlT4Ygmfu4Owip_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTc3Uweyd2A2C_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTcpswkf2Yfsf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTcwrv1Aqtzxe_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTestdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTestnewdaocac_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlThebestxdap_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlThedokcyip3O_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTheflow_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlThftmv3D42Kb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlThinkplace_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTighnzy4Pgu3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTqmby2Eadaiu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTqsre5Whjjby_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTrshury4Soli_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTss3Wqdjlalp_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlU2T3Kwgdmrbe_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlU4Yfk1S4Cv3H_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUbuntu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUgcwrgniuwis_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUij3Uygyzyow_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUlpyjkthcu2C_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUmac2Lsxcc14_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUnitedplanet_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUniversalis_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUniverseland_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUnkailabs_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUpvotetest1_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUtanck3Sxaze_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUtyeq4Dqk3Iu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUwkshkgwuksx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUwmng5Zgcoa2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUwztsw1L3Na5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUzihb11Q5Ppi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlV2U42Hujkzzk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVf3Rsnpdqx1F_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVflqjbatmmf1_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVg1Lob4Oakdz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVgryuxp1Cyt4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVh1Imaheqeqy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVk2P3R3Zpbqu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVnyenpufyes2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVo3N43V4Khhi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVokaoj1T5Qsr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVovv2Tengevl_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVqloh1Dpeclv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVqsgv5Mheq1Z_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVse4A2Ttg3On_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVsmoku34Pbnj_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVx35Wgozl15S_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWbh1V54Uekjy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWbo53Ayfygbh_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWdxuocdyahaf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWekqmvasjcqb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWeudzvh3Hd2Q_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWf2Irhvtu5H5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWfzlx3551Pgg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWgvxprpxfngo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWhnelpre1Xnz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWildtrips_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWrongdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWtr21Owdodww_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWuip5Bx23244_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWuknmlynj5Qb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWuzjmdodtrfn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlX5Gpg2Kk14Rp_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXc1Mpm4R1V3Q_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXecj4Cukr1Pr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXfvd2Pyvelym_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXmiereyl52Um_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXpznyeq1Ujcw_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXrfuttwmsapm_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXx4Pyzevrrz3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYimw2Jwzpfqx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYjtij3Oxqizo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYk24Za5Bqjeu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYlxmkxtb4M4J_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYoglgtvd2Ttf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYp13Kd3Fzhvm_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYtibux4Pydni_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYtowqoe4Jjg2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYveif24Swpxo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYxypcwoh1Pmn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZgbrnuisnb3H_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZgepdsxircad_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZhuu21Czfaer_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZl5Fqkhoztam_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZu5Xtqjzo2Sq_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZvstjcdyjcgy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZzcjstecud2T_s?: InputMaybe<Scalars['String']['input']>;
  urls_url_s?: InputMaybe<Scalars['String']['input']>;
};

export type AddSettingsPayload = {
  __typename?: 'AddSettingsPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  settings?: Maybe<Array<Maybe<Settings>>>;
};


export type AddSettingsPayloadSettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SettingsOrder>;
};

export type AddSuspendInput = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']['input']>;
  details_originalDocument_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  ownedby?: InputMaybe<Array<MemberRef>>;
  suspend?: InputMaybe<Array<DocumentRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AddSuspendPayload = {
  __typename?: 'AddSuspendPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  suspend?: Maybe<Array<Maybe<Suspend>>>;
};


export type AddSuspendPayloadSuspendArgs = {
  filter?: InputMaybe<SuspendFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SuspendOrder>;
};

export type AddTimeshareInput = {
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_assignment_c?: InputMaybe<Scalars['String']['input']>;
  details_assignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']['input']>;
  docId: Scalars['String']['input'];
  nextimeshare?: InputMaybe<Array<TimeshareRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddTimesharePayload = {
  __typename?: 'AddTimesharePayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  timeshare?: Maybe<Array<Maybe<Timeshare>>>;
};


export type AddTimesharePayloadTimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TimeshareOrder>;
};

export type AddTreasuryInput = {
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  docId: Scalars['String']['input'];
  payment?: InputMaybe<Array<TrsyPaymentRef>>;
  redemption?: InputMaybe<Array<RedemptionRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  treasurer?: InputMaybe<Array<MemberRef>>;
  treasuryof?: InputMaybe<Array<DaoRef>>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddTreasuryPayload = {
  __typename?: 'AddTreasuryPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  treasury?: Maybe<Array<Maybe<Treasury>>>;
};


export type AddTreasuryPayloadTreasuryArgs = {
  filter?: InputMaybe<TreasuryFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TreasuryOrder>;
};

export type AddTrsyPaymentInput = {
  attestation?: InputMaybe<Array<AttestationRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_amountPaid_a?: InputMaybe<Scalars['String']['input']>;
  details_confirmedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_creator_n?: InputMaybe<Scalars['String']['input']>;
  details_isConfirmed_i?: InputMaybe<Scalars['Int64']['input']>;
  details_msig_n?: InputMaybe<Scalars['String']['input']>;
  details_nativeAmountPaid_a?: InputMaybe<Scalars['String']['input']>;
  details_notes_s?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  legacy_id_i?: InputMaybe<Scalars['Int64']['input']>;
  legacy_redemptionId_i?: InputMaybe<Scalars['Int64']['input']>;
  msiginfo?: InputMaybe<Array<MsigInfoRef>>;
  pays?: InputMaybe<Array<RedemptionRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddTrsyPaymentPayload = {
  __typename?: 'AddTrsyPaymentPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  trsyPayment?: Maybe<Array<Maybe<TrsyPayment>>>;
};


export type AddTrsyPaymentPayloadTrsyPaymentArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TrsyPaymentOrder>;
};

export type AddTypeVersionInput = {
  type: Scalars['String']['input'];
  version?: InputMaybe<Scalars['String']['input']>;
};

export type AddTypeVersionPayload = {
  __typename?: 'AddTypeVersionPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  typeVersion?: Maybe<Array<Maybe<TypeVersion>>>;
};


export type AddTypeVersionPayloadTypeVersionArgs = {
  filter?: InputMaybe<TypeVersionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TypeVersionOrder>;
};

export type AddUpvtElectnInput = {
  chiefround?: InputMaybe<Array<ElectnRoundRef>>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  currentround?: InputMaybe<Array<ElectnRoundRef>>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_duration_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_roundDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  details_runningSeed_i?: InputMaybe<Scalars['Int64']['input']>;
  details_seed_c?: InputMaybe<Scalars['String']['input']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_status_s?: InputMaybe<Scalars['String']['input']>;
  docId: Scalars['String']['input'];
  headround?: InputMaybe<Array<ElectnRoundRef>>;
  round?: InputMaybe<Array<ElectnRoundRef>>;
  startround?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  ueCurrnd?: InputMaybe<Array<ElectnRoundRef>>;
  ueRound?: InputMaybe<Array<ElectnRoundRef>>;
  ueStartrnd?: InputMaybe<Array<ElectnRoundRef>>;
  updatedDate: Scalars['DateTime']['input'];
};

export type AddUpvtElectnPayload = {
  __typename?: 'AddUpvtElectnPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  upvtElectn?: Maybe<Array<Maybe<UpvtElectn>>>;
};


export type AddUpvtElectnPayloadUpvtElectnArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtElectnOrder>;
};

export type AddUpvtVoteInput = {
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_votedId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_voterId_i?: InputMaybe<Scalars['Int64']['input']>;
  docId: Scalars['String']['input'];
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddUpvtVotePayload = {
  __typename?: 'AddUpvtVotePayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  upvtVote?: Maybe<Array<Maybe<UpvtVote>>>;
};


export type AddUpvtVotePayloadUpvtVoteArgs = {
  filter?: InputMaybe<UpvtVoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtVoteOrder>;
};

export type AddUserInput = {
  email?: InputMaybe<Scalars['String']['input']>;
  eosAccountName: Scalars['String']['input'];
  name: Scalars['String']['input'];
  notifications?: InputMaybe<Array<NotificationRef>>;
};

export type AddUserPayload = {
  __typename?: 'AddUserPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  user?: Maybe<Array<Maybe<User>>>;
};


export type AddUserPayloadUserArgs = {
  filter?: InputMaybe<UserFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UserOrder>;
};

export type AddVoteGroupInput = {
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  details_roundId_i?: InputMaybe<Scalars['Int64']['input']>;
  docId: Scalars['String']['input'];
  round?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  vote?: InputMaybe<Array<MemberRef>>;
};

export type AddVoteGroupPayload = {
  __typename?: 'AddVoteGroupPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  voteGroup?: Maybe<Array<Maybe<VoteGroup>>>;
};


export type AddVoteGroupPayloadVoteGroupArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteGroupOrder>;
};

export type AddVoteInput = {
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  docId: Scalars['String']['input'];
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
  vote_date_t?: InputMaybe<Scalars['DateTime']['input']>;
  vote_notes_s?: InputMaybe<Scalars['String']['input']>;
  vote_votePower_a?: InputMaybe<Scalars['String']['input']>;
  vote_vote_s?: InputMaybe<Scalars['String']['input']>;
  vote_voter_n?: InputMaybe<Scalars['String']['input']>;
  voteon?: InputMaybe<Array<DocumentRef>>;
};

export type AddVotePayload = {
  __typename?: 'AddVotePayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  vote?: Maybe<Array<Maybe<Vote>>>;
};


export type AddVotePayloadVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};

export type AddVoteTallyInput = {
  abstain_votePower_a?: InputMaybe<Scalars['String']['input']>;
  contract: Scalars['String']['input'];
  createdDate: Scalars['DateTime']['input'];
  creator: Scalars['String']['input'];
  docId: Scalars['String']['input'];
  fail_votePower_a?: InputMaybe<Scalars['String']['input']>;
  pass_votePower_a?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
  updatedDate: Scalars['DateTime']['input'];
};

export type AddVoteTallyPayload = {
  __typename?: 'AddVoteTallyPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  voteTally?: Maybe<Array<Maybe<VoteTally>>>;
};


export type AddVoteTallyPayloadVoteTallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};

export type Alert = Document & {
  __typename?: 'Alert';
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_content_s?: Maybe<Scalars['String']['output']>;
  details_enabled_i?: Maybe<Scalars['Int64']['output']>;
  details_level_n?: Maybe<Scalars['String']['output']>;
  details_level_s?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  notifies?: Maybe<Array<Document>>;
  notifiesAggregate?: Maybe<DocumentAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type AlertNotifiesArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type AlertNotifiesAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};

export type AlertAggregateResult = {
  __typename?: 'AlertAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_content_sMax?: Maybe<Scalars['String']['output']>;
  details_content_sMin?: Maybe<Scalars['String']['output']>;
  details_enabled_iAvg?: Maybe<Scalars['Float']['output']>;
  details_enabled_iMax?: Maybe<Scalars['Int64']['output']>;
  details_enabled_iMin?: Maybe<Scalars['Int64']['output']>;
  details_enabled_iSum?: Maybe<Scalars['Int64']['output']>;
  details_level_nMax?: Maybe<Scalars['String']['output']>;
  details_level_nMin?: Maybe<Scalars['String']['output']>;
  details_level_sMax?: Maybe<Scalars['String']['output']>;
  details_level_sMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type AlertFilter = {
  and?: InputMaybe<Array<InputMaybe<AlertFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_content_s?: InputMaybe<StringRegExpFilter>;
  details_enabled_i?: InputMaybe<Int64Filter>;
  details_level_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_level_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<AlertHasFilter>>>;
  not?: InputMaybe<AlertFilter>;
  or?: InputMaybe<Array<InputMaybe<AlertFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum AlertHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsContentS = 'details_content_s',
  DetailsEnabledI = 'details_enabled_i',
  DetailsLevelN = 'details_level_n',
  DetailsLevelS = 'details_level_s',
  DocId = 'docId',
  Notifies = 'notifies',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type AlertOrder = {
  asc?: InputMaybe<AlertOrderable>;
  desc?: InputMaybe<AlertOrderable>;
  then?: InputMaybe<AlertOrder>;
};

export enum AlertOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsContentS = 'details_content_s',
  DetailsEnabledI = 'details_enabled_i',
  DetailsLevelN = 'details_level_n',
  DetailsLevelS = 'details_level_s',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type AlertPatch = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_content_s?: InputMaybe<Scalars['String']['input']>;
  details_enabled_i?: InputMaybe<Scalars['Int64']['input']>;
  details_level_n?: InputMaybe<Scalars['String']['input']>;
  details_level_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  notifies?: InputMaybe<Array<DocumentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type AlertRef = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_content_s?: InputMaybe<Scalars['String']['input']>;
  details_enabled_i?: InputMaybe<Scalars['Int64']['input']>;
  details_level_n?: InputMaybe<Scalars['String']['input']>;
  details_level_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  notifies?: InputMaybe<Array<DocumentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type Assignbadge = Document & Votable & {
  __typename?: 'Assignbadge';
  badge?: Maybe<Array<Badge>>;
  badgeAggregate?: Maybe<BadgeAggregateResult>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']['output']>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']['output']>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_assignee_n?: Maybe<Scalars['String']['output']>;
  details_autoApprove_i?: Maybe<Scalars['Int64']['output']>;
  details_badge_c?: Maybe<Scalars['String']['output']>;
  details_badge_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_a?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_a?: Maybe<Scalars['String']['output']>;
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  details_description_s?: Maybe<Scalars['String']['output']>;
  details_electionId_i?: Maybe<Scalars['Int64']['output']>;
  details_endPeriod_i?: Maybe<Scalars['Int64']['output']>;
  details_endTime_t?: Maybe<Scalars['DateTime']['output']>;
  details_periodCount_i?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_c?: Maybe<Scalars['String']['output']>;
  details_startPeriod_i?: Maybe<Scalars['Int64']['output']>;
  details_startTime_t?: Maybe<Scalars['DateTime']['output']>;
  details_state_s?: Maybe<Scalars['String']['output']>;
  details_title_s?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  start?: Maybe<Array<Period>>;
  startAggregate?: Maybe<PeriodAggregateResult>;
  system_ballotId_n?: Maybe<Scalars['String']['output']>;
  system_category_s?: Maybe<Scalars['String']['output']>;
  system_clientVersion_s?: Maybe<Scalars['String']['output']>;
  system_commentName_n?: Maybe<Scalars['String']['output']>;
  system_contractVersion_s?: Maybe<Scalars['String']['output']>;
  system_description_s?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']['output']>;
  system_proposer_n?: Maybe<Scalars['String']['output']>;
  system_selfApproved_i?: Maybe<Scalars['Int64']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type AssignbadgeBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BadgeOrder>;
};


export type AssignbadgeBadgeAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type AssignbadgeCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type AssignbadgeCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type AssignbadgeDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type AssignbadgeDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type AssignbadgeOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type AssignbadgeOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type AssignbadgeStartArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};


export type AssignbadgeStartAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type AssignbadgeVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type AssignbadgeVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type AssignbadgeVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type AssignbadgeVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type AssignbadgeAggregateResult = {
  __typename?: 'AssignbadgeAggregateResult';
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']['output']>;
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']['output']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_assignee_nMax?: Maybe<Scalars['String']['output']>;
  details_assignee_nMin?: Maybe<Scalars['String']['output']>;
  details_autoApprove_iAvg?: Maybe<Scalars['Float']['output']>;
  details_autoApprove_iMax?: Maybe<Scalars['Int64']['output']>;
  details_autoApprove_iMin?: Maybe<Scalars['Int64']['output']>;
  details_autoApprove_iSum?: Maybe<Scalars['Int64']['output']>;
  details_badge_cMax?: Maybe<Scalars['String']['output']>;
  details_badge_cMin?: Maybe<Scalars['String']['output']>;
  details_badge_iAvg?: Maybe<Scalars['Float']['output']>;
  details_badge_iMax?: Maybe<Scalars['Int64']['output']>;
  details_badge_iMin?: Maybe<Scalars['Int64']['output']>;
  details_badge_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_aMin?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  details_description_sMax?: Maybe<Scalars['String']['output']>;
  details_description_sMin?: Maybe<Scalars['String']['output']>;
  details_electionId_iAvg?: Maybe<Scalars['Float']['output']>;
  details_electionId_iMax?: Maybe<Scalars['Int64']['output']>;
  details_electionId_iMin?: Maybe<Scalars['Int64']['output']>;
  details_electionId_iSum?: Maybe<Scalars['Int64']['output']>;
  details_endPeriod_iAvg?: Maybe<Scalars['Float']['output']>;
  details_endPeriod_iMax?: Maybe<Scalars['Int64']['output']>;
  details_endPeriod_iMin?: Maybe<Scalars['Int64']['output']>;
  details_endPeriod_iSum?: Maybe<Scalars['Int64']['output']>;
  details_endTime_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_endTime_tMin?: Maybe<Scalars['DateTime']['output']>;
  details_periodCount_iAvg?: Maybe<Scalars['Float']['output']>;
  details_periodCount_iMax?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iMin?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iSum?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_cMax?: Maybe<Scalars['String']['output']>;
  details_startPeriod_cMin?: Maybe<Scalars['String']['output']>;
  details_startPeriod_iAvg?: Maybe<Scalars['Float']['output']>;
  details_startPeriod_iMax?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_iMin?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_iSum?: Maybe<Scalars['Int64']['output']>;
  details_startTime_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_startTime_tMin?: Maybe<Scalars['DateTime']['output']>;
  details_state_sMax?: Maybe<Scalars['String']['output']>;
  details_state_sMin?: Maybe<Scalars['String']['output']>;
  details_title_sMax?: Maybe<Scalars['String']['output']>;
  details_title_sMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_ballotId_nMax?: Maybe<Scalars['String']['output']>;
  system_ballotId_nMin?: Maybe<Scalars['String']['output']>;
  system_category_sMax?: Maybe<Scalars['String']['output']>;
  system_category_sMin?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_commentName_nMax?: Maybe<Scalars['String']['output']>;
  system_commentName_nMin?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_description_sMax?: Maybe<Scalars['String']['output']>;
  system_description_sMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  system_proposer_nMax?: Maybe<Scalars['String']['output']>;
  system_proposer_nMin?: Maybe<Scalars['String']['output']>;
  system_selfApproved_iAvg?: Maybe<Scalars['Float']['output']>;
  system_selfApproved_iMax?: Maybe<Scalars['Int64']['output']>;
  system_selfApproved_iMin?: Maybe<Scalars['Int64']['output']>;
  system_selfApproved_iSum?: Maybe<Scalars['Int64']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type AssignbadgeFilter = {
  and?: InputMaybe<Array<InputMaybe<AssignbadgeFilter>>>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_assignee_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_autoApprove_i?: InputMaybe<Int64Filter>;
  details_badge_c?: InputMaybe<StringExactFilter>;
  details_badge_i?: InputMaybe<Int64Filter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_a?: InputMaybe<StringTermFilter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_electionId_i?: InputMaybe<Int64Filter>;
  details_endPeriod_i?: InputMaybe<Int64Filter>;
  details_endTime_t?: InputMaybe<DateTimeFilter>;
  details_periodCount_i?: InputMaybe<Int64Filter>;
  details_startPeriod_c?: InputMaybe<StringExactFilter>;
  details_startPeriod_i?: InputMaybe<Int64Filter>;
  details_startTime_t?: InputMaybe<DateTimeFilter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<AssignbadgeHasFilter>>>;
  not?: InputMaybe<AssignbadgeFilter>;
  or?: InputMaybe<Array<InputMaybe<AssignbadgeFilter>>>;
  system_ballotId_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_category_s?: InputMaybe<StringRegExpFilter>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  system_proposer_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_selfApproved_i?: InputMaybe<Int64Filter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum AssignbadgeHasFilter {
  Badge = 'badge',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsAutoApproveI = 'details_autoApprove_i',
  DetailsBadgeC = 'details_badge_c',
  DetailsBadgeI = 'details_badge_i',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsElectionIdI = 'details_electionId_i',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsEndTimeT = 'details_endTime_t',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStartTimeT = 'details_startTime_t',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DocId = 'docId',
  Ownedby = 'ownedby',
  Start = 'start',
  SystemBallotIdN = 'system_ballotId_n',
  SystemCategoryS = 'system_category_s',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  SystemProposerN = 'system_proposer_n',
  SystemSelfApprovedI = 'system_selfApproved_i',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type AssignbadgeOrder = {
  asc?: InputMaybe<AssignbadgeOrderable>;
  desc?: InputMaybe<AssignbadgeOrderable>;
  then?: InputMaybe<AssignbadgeOrder>;
};

export enum AssignbadgeOrderable {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsAutoApproveI = 'details_autoApprove_i',
  DetailsBadgeC = 'details_badge_c',
  DetailsBadgeI = 'details_badge_i',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsElectionIdI = 'details_electionId_i',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsEndTimeT = 'details_endTime_t',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStartTimeT = 'details_startTime_t',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DocId = 'docId',
  SystemBallotIdN = 'system_ballotId_n',
  SystemCategoryS = 'system_category_s',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  SystemProposerN = 'system_proposer_n',
  SystemSelfApprovedI = 'system_selfApproved_i',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type AssignbadgePatch = {
  badge?: InputMaybe<Array<BadgeRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']['input']>;
  details_autoApprove_i?: InputMaybe<Scalars['Int64']['input']>;
  details_badge_c?: InputMaybe<Scalars['String']['input']>;
  details_badge_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_electionId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endTime_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startTime_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_category_s?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_proposer_n?: InputMaybe<Scalars['String']['input']>;
  system_selfApproved_i?: InputMaybe<Scalars['Int64']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AssignbadgeRef = {
  badge?: InputMaybe<Array<BadgeRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']['input']>;
  details_autoApprove_i?: InputMaybe<Scalars['Int64']['input']>;
  details_badge_c?: InputMaybe<Scalars['String']['input']>;
  details_badge_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_electionId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endTime_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startTime_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_category_s?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_proposer_n?: InputMaybe<Scalars['String']['input']>;
  system_selfApproved_i?: InputMaybe<Scalars['Int64']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type Assignment = Document & Votable & {
  __typename?: 'Assignment';
  assignee?: Maybe<Array<Document>>;
  assigneeAggregate?: Maybe<DocumentAggregateResult>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']['output']>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']['output']>;
  claimed?: Maybe<Array<Period>>;
  claimedAggregate?: Maybe<PeriodAggregateResult>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  curtimeshare?: Maybe<Array<Timeshare>>;
  curtimeshareAggregate?: Maybe<TimeshareAggregateResult>;
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_annualUsdSalary_a?: Maybe<Scalars['String']['output']>;
  details_approvedDeferredPercX100_i?: Maybe<Scalars['Int64']['output']>;
  details_assignee_n?: Maybe<Scalars['String']['output']>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_a?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_a?: Maybe<Scalars['String']['output']>;
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_i?: Maybe<Scalars['Int64']['output']>;
  details_description_s?: Maybe<Scalars['String']['output']>;
  details_endPeriod_i?: Maybe<Scalars['Int64']['output']>;
  details_fulltimeCapacityX100_i?: Maybe<Scalars['Int64']['output']>;
  details_husdSalaryPerPhase_a?: Maybe<Scalars['String']['output']>;
  details_hvoiceSalaryPerPhase_a?: Maybe<Scalars['String']['output']>;
  details_hyphaSalaryPerPhase_a?: Maybe<Scalars['String']['output']>;
  details_instantHusdPercX100_i?: Maybe<Scalars['Int64']['output']>;
  details_minDeferredX100_i?: Maybe<Scalars['Int64']['output']>;
  details_originalDocument_c?: Maybe<Scalars['String']['output']>;
  details_owner_n?: Maybe<Scalars['String']['output']>;
  details_pegSalaryPerPeriod_a?: Maybe<Scalars['String']['output']>;
  details_periodCount_i?: Maybe<Scalars['Int64']['output']>;
  details_rewardSalaryPerPeriod_a?: Maybe<Scalars['String']['output']>;
  details_role_c?: Maybe<Scalars['String']['output']>;
  details_role_i?: Maybe<Scalars['Int64']['output']>;
  details_salaryBandId_i?: Maybe<Scalars['Int64']['output']>;
  details_seedsEscrowSalaryPerPhase_a?: Maybe<Scalars['String']['output']>;
  details_seedsInstantSalaryPerPhase_a?: Maybe<Scalars['String']['output']>;
  details_startPeriod_c?: Maybe<Scalars['String']['output']>;
  details_startPeriod_i?: Maybe<Scalars['Int64']['output']>;
  details_state_s?: Maybe<Scalars['String']['output']>;
  details_suspensionDate_t?: Maybe<Scalars['DateTime']['output']>;
  details_timeShareX100_i?: Maybe<Scalars['Int64']['output']>;
  details_title_s?: Maybe<Scalars['String']['output']>;
  details_url_s?: Maybe<Scalars['String']['output']>;
  details_usdSalaryValuePerPhase_a?: Maybe<Scalars['String']['output']>;
  details_voiceSalaryPerPeriod_a?: Maybe<Scalars['String']['output']>;
  details_withdrawalDate_t?: Maybe<Scalars['DateTime']['output']>;
  details_withdrawalNotes_s?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  initimeshare?: Maybe<Array<Timeshare>>;
  initimeshareAggregate?: Maybe<TimeshareAggregateResult>;
  lastimeshare?: Maybe<Array<Timeshare>>;
  lastimeshareAggregate?: Maybe<TimeshareAggregateResult>;
  original?: Maybe<Array<Assignment>>;
  originalAggregate?: Maybe<AssignmentAggregateResult>;
  ownedby?: Maybe<Array<Document>>;
  ownedbyAggregate?: Maybe<DocumentAggregateResult>;
  role?: Maybe<Array<Role>>;
  roleAggregate?: Maybe<RoleAggregateResult>;
  salaryband?: Maybe<Array<Salaryband>>;
  salarybandAggregate?: Maybe<SalarybandAggregateResult>;
  start?: Maybe<Array<Period>>;
  startAggregate?: Maybe<PeriodAggregateResult>;
  system_ballotId_n?: Maybe<Scalars['String']['output']>;
  system_clientVersion_s?: Maybe<Scalars['String']['output']>;
  system_commentName_n?: Maybe<Scalars['String']['output']>;
  system_contractVersion_s?: Maybe<Scalars['String']['output']>;
  system_description_s?: Maybe<Scalars['String']['output']>;
  system_legacyObjectCreatedDate_t?: Maybe<Scalars['DateTime']['output']>;
  system_legacyObjectId_i?: Maybe<Scalars['Int64']['output']>;
  system_legacyObjectScope_n?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']['output']>;
  timeshare?: Maybe<Array<Timeshare>>;
  timeshareAggregate?: Maybe<TimeshareAggregateResult>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type AssignmentAssigneeArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type AssignmentAssigneeAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type AssignmentClaimedArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};


export type AssignmentClaimedAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type AssignmentCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type AssignmentCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type AssignmentCurtimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TimeshareOrder>;
};


export type AssignmentCurtimeshareAggregateArgs = {
  filter?: InputMaybe<TimeshareFilter>;
};


export type AssignmentDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type AssignmentDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type AssignmentInitimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TimeshareOrder>;
};


export type AssignmentInitimeshareAggregateArgs = {
  filter?: InputMaybe<TimeshareFilter>;
};


export type AssignmentLastimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TimeshareOrder>;
};


export type AssignmentLastimeshareAggregateArgs = {
  filter?: InputMaybe<TimeshareFilter>;
};


export type AssignmentOriginalArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignmentOrder>;
};


export type AssignmentOriginalAggregateArgs = {
  filter?: InputMaybe<AssignmentFilter>;
};


export type AssignmentOwnedbyArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type AssignmentOwnedbyAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type AssignmentRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<RoleOrder>;
};


export type AssignmentRoleAggregateArgs = {
  filter?: InputMaybe<RoleFilter>;
};


export type AssignmentSalarybandArgs = {
  filter?: InputMaybe<SalarybandFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SalarybandOrder>;
};


export type AssignmentSalarybandAggregateArgs = {
  filter?: InputMaybe<SalarybandFilter>;
};


export type AssignmentStartArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};


export type AssignmentStartAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type AssignmentTimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TimeshareOrder>;
};


export type AssignmentTimeshareAggregateArgs = {
  filter?: InputMaybe<TimeshareFilter>;
};


export type AssignmentVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type AssignmentVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type AssignmentVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type AssignmentVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type AssignmentAggregateResult = {
  __typename?: 'AssignmentAggregateResult';
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']['output']>;
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']['output']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_annualUsdSalary_aMax?: Maybe<Scalars['String']['output']>;
  details_annualUsdSalary_aMin?: Maybe<Scalars['String']['output']>;
  details_approvedDeferredPercX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_approvedDeferredPercX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_approvedDeferredPercX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_approvedDeferredPercX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_assignee_nMax?: Maybe<Scalars['String']['output']>;
  details_assignee_nMin?: Maybe<Scalars['String']['output']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_aMin?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_deferredPercX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_description_sMax?: Maybe<Scalars['String']['output']>;
  details_description_sMin?: Maybe<Scalars['String']['output']>;
  details_endPeriod_iAvg?: Maybe<Scalars['Float']['output']>;
  details_endPeriod_iMax?: Maybe<Scalars['Int64']['output']>;
  details_endPeriod_iMin?: Maybe<Scalars['Int64']['output']>;
  details_endPeriod_iSum?: Maybe<Scalars['Int64']['output']>;
  details_fulltimeCapacityX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_fulltimeCapacityX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_fulltimeCapacityX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_fulltimeCapacityX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_husdSalaryPerPhase_aMax?: Maybe<Scalars['String']['output']>;
  details_husdSalaryPerPhase_aMin?: Maybe<Scalars['String']['output']>;
  details_hvoiceSalaryPerPhase_aMax?: Maybe<Scalars['String']['output']>;
  details_hvoiceSalaryPerPhase_aMin?: Maybe<Scalars['String']['output']>;
  details_hyphaSalaryPerPhase_aMax?: Maybe<Scalars['String']['output']>;
  details_hyphaSalaryPerPhase_aMin?: Maybe<Scalars['String']['output']>;
  details_instantHusdPercX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_instantHusdPercX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_instantHusdPercX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_instantHusdPercX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_minDeferredX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_minDeferredX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_minDeferredX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_minDeferredX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_originalDocument_cMax?: Maybe<Scalars['String']['output']>;
  details_originalDocument_cMin?: Maybe<Scalars['String']['output']>;
  details_owner_nMax?: Maybe<Scalars['String']['output']>;
  details_owner_nMin?: Maybe<Scalars['String']['output']>;
  details_pegSalaryPerPeriod_aMax?: Maybe<Scalars['String']['output']>;
  details_pegSalaryPerPeriod_aMin?: Maybe<Scalars['String']['output']>;
  details_periodCount_iAvg?: Maybe<Scalars['Float']['output']>;
  details_periodCount_iMax?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iMin?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iSum?: Maybe<Scalars['Int64']['output']>;
  details_rewardSalaryPerPeriod_aMax?: Maybe<Scalars['String']['output']>;
  details_rewardSalaryPerPeriod_aMin?: Maybe<Scalars['String']['output']>;
  details_role_cMax?: Maybe<Scalars['String']['output']>;
  details_role_cMin?: Maybe<Scalars['String']['output']>;
  details_role_iAvg?: Maybe<Scalars['Float']['output']>;
  details_role_iMax?: Maybe<Scalars['Int64']['output']>;
  details_role_iMin?: Maybe<Scalars['Int64']['output']>;
  details_role_iSum?: Maybe<Scalars['Int64']['output']>;
  details_salaryBandId_iAvg?: Maybe<Scalars['Float']['output']>;
  details_salaryBandId_iMax?: Maybe<Scalars['Int64']['output']>;
  details_salaryBandId_iMin?: Maybe<Scalars['Int64']['output']>;
  details_salaryBandId_iSum?: Maybe<Scalars['Int64']['output']>;
  details_seedsEscrowSalaryPerPhase_aMax?: Maybe<Scalars['String']['output']>;
  details_seedsEscrowSalaryPerPhase_aMin?: Maybe<Scalars['String']['output']>;
  details_seedsInstantSalaryPerPhase_aMax?: Maybe<Scalars['String']['output']>;
  details_seedsInstantSalaryPerPhase_aMin?: Maybe<Scalars['String']['output']>;
  details_startPeriod_cMax?: Maybe<Scalars['String']['output']>;
  details_startPeriod_cMin?: Maybe<Scalars['String']['output']>;
  details_startPeriod_iAvg?: Maybe<Scalars['Float']['output']>;
  details_startPeriod_iMax?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_iMin?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_iSum?: Maybe<Scalars['Int64']['output']>;
  details_state_sMax?: Maybe<Scalars['String']['output']>;
  details_state_sMin?: Maybe<Scalars['String']['output']>;
  details_suspensionDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_suspensionDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  details_timeShareX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_timeShareX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_timeShareX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_timeShareX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_title_sMax?: Maybe<Scalars['String']['output']>;
  details_title_sMin?: Maybe<Scalars['String']['output']>;
  details_url_sMax?: Maybe<Scalars['String']['output']>;
  details_url_sMin?: Maybe<Scalars['String']['output']>;
  details_usdSalaryValuePerPhase_aMax?: Maybe<Scalars['String']['output']>;
  details_usdSalaryValuePerPhase_aMin?: Maybe<Scalars['String']['output']>;
  details_voiceSalaryPerPeriod_aMax?: Maybe<Scalars['String']['output']>;
  details_voiceSalaryPerPeriod_aMin?: Maybe<Scalars['String']['output']>;
  details_withdrawalDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_withdrawalDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  details_withdrawalNotes_sMax?: Maybe<Scalars['String']['output']>;
  details_withdrawalNotes_sMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_ballotId_nMax?: Maybe<Scalars['String']['output']>;
  system_ballotId_nMin?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_commentName_nMax?: Maybe<Scalars['String']['output']>;
  system_commentName_nMin?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_description_sMax?: Maybe<Scalars['String']['output']>;
  system_description_sMin?: Maybe<Scalars['String']['output']>;
  system_legacyObjectCreatedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_legacyObjectCreatedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  system_legacyObjectId_iAvg?: Maybe<Scalars['Float']['output']>;
  system_legacyObjectId_iMax?: Maybe<Scalars['Int64']['output']>;
  system_legacyObjectId_iMin?: Maybe<Scalars['Int64']['output']>;
  system_legacyObjectId_iSum?: Maybe<Scalars['Int64']['output']>;
  system_legacyObjectScope_nMax?: Maybe<Scalars['String']['output']>;
  system_legacyObjectScope_nMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type AssignmentFilter = {
  and?: InputMaybe<Array<InputMaybe<AssignmentFilter>>>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_annualUsdSalary_a?: InputMaybe<StringTermFilter>;
  details_approvedDeferredPercX100_i?: InputMaybe<Int64Filter>;
  details_assignee_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_a?: InputMaybe<StringTermFilter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_deferredPercX100_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_endPeriod_i?: InputMaybe<Int64Filter>;
  details_fulltimeCapacityX100_i?: InputMaybe<Int64Filter>;
  details_husdSalaryPerPhase_a?: InputMaybe<StringTermFilter>;
  details_hvoiceSalaryPerPhase_a?: InputMaybe<StringTermFilter>;
  details_hyphaSalaryPerPhase_a?: InputMaybe<StringTermFilter>;
  details_instantHusdPercX100_i?: InputMaybe<Int64Filter>;
  details_minDeferredX100_i?: InputMaybe<Int64Filter>;
  details_originalDocument_c?: InputMaybe<StringExactFilter>;
  details_owner_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_pegSalaryPerPeriod_a?: InputMaybe<StringTermFilter>;
  details_periodCount_i?: InputMaybe<Int64Filter>;
  details_rewardSalaryPerPeriod_a?: InputMaybe<StringTermFilter>;
  details_role_c?: InputMaybe<StringExactFilter>;
  details_role_i?: InputMaybe<Int64Filter>;
  details_salaryBandId_i?: InputMaybe<Int64Filter>;
  details_seedsEscrowSalaryPerPhase_a?: InputMaybe<StringTermFilter>;
  details_seedsInstantSalaryPerPhase_a?: InputMaybe<StringTermFilter>;
  details_startPeriod_c?: InputMaybe<StringExactFilter>;
  details_startPeriod_i?: InputMaybe<Int64Filter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_suspensionDate_t?: InputMaybe<DateTimeFilter>;
  details_timeShareX100_i?: InputMaybe<Int64Filter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_url_s?: InputMaybe<StringRegExpFilter>;
  details_usdSalaryValuePerPhase_a?: InputMaybe<StringTermFilter>;
  details_voiceSalaryPerPeriod_a?: InputMaybe<StringTermFilter>;
  details_withdrawalDate_t?: InputMaybe<DateTimeFilter>;
  details_withdrawalNotes_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<AssignmentHasFilter>>>;
  not?: InputMaybe<AssignmentFilter>;
  or?: InputMaybe<Array<InputMaybe<AssignmentFilter>>>;
  system_ballotId_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_legacyObjectCreatedDate_t?: InputMaybe<DateTimeFilter>;
  system_legacyObjectId_i?: InputMaybe<Int64Filter>;
  system_legacyObjectScope_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum AssignmentHasFilter {
  Assignee = 'assignee',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Claimed = 'claimed',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Curtimeshare = 'curtimeshare',
  Dao = 'dao',
  DetailsAnnualUsdSalaryA = 'details_annualUsdSalary_a',
  DetailsApprovedDeferredPercX100I = 'details_approvedDeferredPercX100_i',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsFulltimeCapacityX100I = 'details_fulltimeCapacityX100_i',
  DetailsHusdSalaryPerPhaseA = 'details_husdSalaryPerPhase_a',
  DetailsHvoiceSalaryPerPhaseA = 'details_hvoiceSalaryPerPhase_a',
  DetailsHyphaSalaryPerPhaseA = 'details_hyphaSalaryPerPhase_a',
  DetailsInstantHusdPercX100I = 'details_instantHusdPercX100_i',
  DetailsMinDeferredX100I = 'details_minDeferredX100_i',
  DetailsOriginalDocumentC = 'details_originalDocument_c',
  DetailsOwnerN = 'details_owner_n',
  DetailsPegSalaryPerPeriodA = 'details_pegSalaryPerPeriod_a',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsRewardSalaryPerPeriodA = 'details_rewardSalaryPerPeriod_a',
  DetailsRoleC = 'details_role_c',
  DetailsRoleI = 'details_role_i',
  DetailsSalaryBandIdI = 'details_salaryBandId_i',
  DetailsSeedsEscrowSalaryPerPhaseA = 'details_seedsEscrowSalaryPerPhase_a',
  DetailsSeedsInstantSalaryPerPhaseA = 'details_seedsInstantSalaryPerPhase_a',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsSuspensionDateT = 'details_suspensionDate_t',
  DetailsTimeShareX100I = 'details_timeShareX100_i',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DetailsUsdSalaryValuePerPhaseA = 'details_usdSalaryValuePerPhase_a',
  DetailsVoiceSalaryPerPeriodA = 'details_voiceSalaryPerPeriod_a',
  DetailsWithdrawalDateT = 'details_withdrawalDate_t',
  DetailsWithdrawalNotesS = 'details_withdrawalNotes_s',
  DocId = 'docId',
  Initimeshare = 'initimeshare',
  Lastimeshare = 'lastimeshare',
  Original = 'original',
  Ownedby = 'ownedby',
  Role = 'role',
  Salaryband = 'salaryband',
  Start = 'start',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemLegacyObjectCreatedDateT = 'system_legacyObjectCreatedDate_t',
  SystemLegacyObjectIdI = 'system_legacyObjectId_i',
  SystemLegacyObjectScopeN = 'system_legacyObjectScope_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Timeshare = 'timeshare',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type AssignmentOrder = {
  asc?: InputMaybe<AssignmentOrderable>;
  desc?: InputMaybe<AssignmentOrderable>;
  then?: InputMaybe<AssignmentOrder>;
};

export enum AssignmentOrderable {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAnnualUsdSalaryA = 'details_annualUsdSalary_a',
  DetailsApprovedDeferredPercX100I = 'details_approvedDeferredPercX100_i',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsFulltimeCapacityX100I = 'details_fulltimeCapacityX100_i',
  DetailsHusdSalaryPerPhaseA = 'details_husdSalaryPerPhase_a',
  DetailsHvoiceSalaryPerPhaseA = 'details_hvoiceSalaryPerPhase_a',
  DetailsHyphaSalaryPerPhaseA = 'details_hyphaSalaryPerPhase_a',
  DetailsInstantHusdPercX100I = 'details_instantHusdPercX100_i',
  DetailsMinDeferredX100I = 'details_minDeferredX100_i',
  DetailsOriginalDocumentC = 'details_originalDocument_c',
  DetailsOwnerN = 'details_owner_n',
  DetailsPegSalaryPerPeriodA = 'details_pegSalaryPerPeriod_a',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsRewardSalaryPerPeriodA = 'details_rewardSalaryPerPeriod_a',
  DetailsRoleC = 'details_role_c',
  DetailsRoleI = 'details_role_i',
  DetailsSalaryBandIdI = 'details_salaryBandId_i',
  DetailsSeedsEscrowSalaryPerPhaseA = 'details_seedsEscrowSalaryPerPhase_a',
  DetailsSeedsInstantSalaryPerPhaseA = 'details_seedsInstantSalaryPerPhase_a',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsSuspensionDateT = 'details_suspensionDate_t',
  DetailsTimeShareX100I = 'details_timeShareX100_i',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DetailsUsdSalaryValuePerPhaseA = 'details_usdSalaryValuePerPhase_a',
  DetailsVoiceSalaryPerPeriodA = 'details_voiceSalaryPerPeriod_a',
  DetailsWithdrawalDateT = 'details_withdrawalDate_t',
  DetailsWithdrawalNotesS = 'details_withdrawalNotes_s',
  DocId = 'docId',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemLegacyObjectCreatedDateT = 'system_legacyObjectCreatedDate_t',
  SystemLegacyObjectIdI = 'system_legacyObjectId_i',
  SystemLegacyObjectScopeN = 'system_legacyObjectScope_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type AssignmentPatch = {
  assignee?: InputMaybe<Array<DocumentRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  claimed?: InputMaybe<Array<PeriodRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  curtimeshare?: InputMaybe<Array<TimeshareRef>>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']['input']>;
  details_approvedDeferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_assignee_n?: InputMaybe<Scalars['String']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_fulltimeCapacityX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_husdSalaryPerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_hvoiceSalaryPerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_hyphaSalaryPerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_instantHusdPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']['input']>;
  details_owner_n?: InputMaybe<Scalars['String']['input']>;
  details_pegSalaryPerPeriod_a?: InputMaybe<Scalars['String']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_rewardSalaryPerPeriod_a?: InputMaybe<Scalars['String']['input']>;
  details_role_c?: InputMaybe<Scalars['String']['input']>;
  details_role_i?: InputMaybe<Scalars['Int64']['input']>;
  details_salaryBandId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_seedsEscrowSalaryPerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_seedsInstantSalaryPerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_suspensionDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  details_usdSalaryValuePerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_voiceSalaryPerPeriod_a?: InputMaybe<Scalars['String']['input']>;
  details_withdrawalDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_withdrawalNotes_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  initimeshare?: InputMaybe<Array<TimeshareRef>>;
  lastimeshare?: InputMaybe<Array<TimeshareRef>>;
  original?: InputMaybe<Array<AssignmentRef>>;
  ownedby?: InputMaybe<Array<DocumentRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  salaryband?: InputMaybe<Array<SalarybandRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']['input']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  timeshare?: InputMaybe<Array<TimeshareRef>>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type AssignmentRef = {
  assignee?: InputMaybe<Array<DocumentRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  claimed?: InputMaybe<Array<PeriodRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  curtimeshare?: InputMaybe<Array<TimeshareRef>>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']['input']>;
  details_approvedDeferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_assignee_n?: InputMaybe<Scalars['String']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_fulltimeCapacityX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_husdSalaryPerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_hvoiceSalaryPerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_hyphaSalaryPerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_instantHusdPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']['input']>;
  details_owner_n?: InputMaybe<Scalars['String']['input']>;
  details_pegSalaryPerPeriod_a?: InputMaybe<Scalars['String']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_rewardSalaryPerPeriod_a?: InputMaybe<Scalars['String']['input']>;
  details_role_c?: InputMaybe<Scalars['String']['input']>;
  details_role_i?: InputMaybe<Scalars['Int64']['input']>;
  details_salaryBandId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_seedsEscrowSalaryPerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_seedsInstantSalaryPerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_suspensionDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  details_usdSalaryValuePerPhase_a?: InputMaybe<Scalars['String']['input']>;
  details_voiceSalaryPerPeriod_a?: InputMaybe<Scalars['String']['input']>;
  details_withdrawalDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_withdrawalNotes_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  initimeshare?: InputMaybe<Array<TimeshareRef>>;
  lastimeshare?: InputMaybe<Array<TimeshareRef>>;
  original?: InputMaybe<Array<AssignmentRef>>;
  ownedby?: InputMaybe<Array<DocumentRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  salaryband?: InputMaybe<Array<SalarybandRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']['input']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  timeshare?: InputMaybe<Array<TimeshareRef>>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type Attestation = Document & {
  __typename?: 'Attestation';
  attestedby?: Maybe<Array<Member>>;
  attestedbyAggregate?: Maybe<MemberAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_treasurer_n?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type AttestationAttestedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type AttestationAttestedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};

export type AttestationAggregateResult = {
  __typename?: 'AttestationAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_treasurer_nMax?: Maybe<Scalars['String']['output']>;
  details_treasurer_nMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type AttestationFilter = {
  and?: InputMaybe<Array<InputMaybe<AttestationFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_treasurer_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<AttestationHasFilter>>>;
  not?: InputMaybe<AttestationFilter>;
  or?: InputMaybe<Array<InputMaybe<AttestationFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum AttestationHasFilter {
  Attestedby = 'attestedby',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsTreasurerN = 'details_treasurer_n',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type AttestationOrder = {
  asc?: InputMaybe<AttestationOrderable>;
  desc?: InputMaybe<AttestationOrderable>;
  then?: InputMaybe<AttestationOrder>;
};

export enum AttestationOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsTreasurerN = 'details_treasurer_n',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type AttestationPatch = {
  attestedby?: InputMaybe<Array<MemberRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_treasurer_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type AttestationRef = {
  attestedby?: InputMaybe<Array<MemberRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_treasurer_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type AuthRule = {
  and?: InputMaybe<Array<InputMaybe<AuthRule>>>;
  not?: InputMaybe<AuthRule>;
  or?: InputMaybe<Array<InputMaybe<AuthRule>>>;
  rule?: InputMaybe<Scalars['String']['input']>;
};

export type Badge = Document & Votable & {
  __typename?: 'Badge';
  assignment?: Maybe<Array<Assignbadge>>;
  assignmentAggregate?: Maybe<AssignbadgeAggregateResult>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']['output']>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']['output']>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String']['output'];
  copyof?: Maybe<Array<Badge>>;
  copyofAggregate?: Maybe<BadgeAggregateResult>;
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_assignee_n?: Maybe<Scalars['String']['output']>;
  details_badge_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_a?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_a?: Maybe<Scalars['String']['output']>;
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  details_description_s?: Maybe<Scalars['String']['output']>;
  details_detailsPurposeS_i?: Maybe<Scalars['Int64']['output']>;
  details_endPeriod_i?: Maybe<Scalars['Int64']['output']>;
  details_husdCoefficientX10000_i?: Maybe<Scalars['Int64']['output']>;
  details_hvoiceCoefficientX10000_i?: Maybe<Scalars['Int64']['output']>;
  details_hyphaCoefficientX10000_i?: Maybe<Scalars['Int64']['output']>;
  details_icon_s?: Maybe<Scalars['String']['output']>;
  details_maxCycles_i?: Maybe<Scalars['Int64']['output']>;
  details_maxPeriodCount_i?: Maybe<Scalars['Int64']['output']>;
  details_name_s?: Maybe<Scalars['String']['output']>;
  details_pegCoefficientX10000_i?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_i?: Maybe<Scalars['Int64']['output']>;
  details_purpose_s?: Maybe<Scalars['String']['output']>;
  details_rewardCoefficientX10000_i?: Maybe<Scalars['Int64']['output']>;
  details_seedsCoefficientX10000_i?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_c?: Maybe<Scalars['String']['output']>;
  details_startPeriod_i?: Maybe<Scalars['Int64']['output']>;
  details_state_s?: Maybe<Scalars['String']['output']>;
  details_title_s?: Maybe<Scalars['String']['output']>;
  details_voiceCoefficientX10000_i?: Maybe<Scalars['Int64']['output']>;
  docId: Scalars['String']['output'];
  heldby?: Maybe<Array<Member>>;
  heldbyAggregate?: Maybe<MemberAggregateResult>;
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  system_badgeId_i?: Maybe<Scalars['Int64']['output']>;
  system_ballotId_n?: Maybe<Scalars['String']['output']>;
  system_clientVersion_s?: Maybe<Scalars['String']['output']>;
  system_commentName_n?: Maybe<Scalars['String']['output']>;
  system_contractVersion_s?: Maybe<Scalars['String']['output']>;
  system_defaultAsset_i?: Maybe<Scalars['Int64']['output']>;
  system_description_s?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']['output']>;
  system_proposer_n?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type BadgeAssignmentArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignbadgeOrder>;
};


export type BadgeAssignmentAggregateArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
};


export type BadgeCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type BadgeCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type BadgeCopyofArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BadgeOrder>;
};


export type BadgeCopyofAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type BadgeDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type BadgeDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type BadgeHeldbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type BadgeHeldbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type BadgeOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type BadgeOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type BadgeVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type BadgeVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type BadgeVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type BadgeVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type BadgeAggregateResult = {
  __typename?: 'BadgeAggregateResult';
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']['output']>;
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']['output']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_assignee_nMax?: Maybe<Scalars['String']['output']>;
  details_assignee_nMin?: Maybe<Scalars['String']['output']>;
  details_badge_iAvg?: Maybe<Scalars['Float']['output']>;
  details_badge_iMax?: Maybe<Scalars['Int64']['output']>;
  details_badge_iMin?: Maybe<Scalars['Int64']['output']>;
  details_badge_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_aMin?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  details_description_sMax?: Maybe<Scalars['String']['output']>;
  details_description_sMin?: Maybe<Scalars['String']['output']>;
  details_detailsPurposeS_iAvg?: Maybe<Scalars['Float']['output']>;
  details_detailsPurposeS_iMax?: Maybe<Scalars['Int64']['output']>;
  details_detailsPurposeS_iMin?: Maybe<Scalars['Int64']['output']>;
  details_detailsPurposeS_iSum?: Maybe<Scalars['Int64']['output']>;
  details_endPeriod_iAvg?: Maybe<Scalars['Float']['output']>;
  details_endPeriod_iMax?: Maybe<Scalars['Int64']['output']>;
  details_endPeriod_iMin?: Maybe<Scalars['Int64']['output']>;
  details_endPeriod_iSum?: Maybe<Scalars['Int64']['output']>;
  details_husdCoefficientX10000_iAvg?: Maybe<Scalars['Float']['output']>;
  details_husdCoefficientX10000_iMax?: Maybe<Scalars['Int64']['output']>;
  details_husdCoefficientX10000_iMin?: Maybe<Scalars['Int64']['output']>;
  details_husdCoefficientX10000_iSum?: Maybe<Scalars['Int64']['output']>;
  details_hvoiceCoefficientX10000_iAvg?: Maybe<Scalars['Float']['output']>;
  details_hvoiceCoefficientX10000_iMax?: Maybe<Scalars['Int64']['output']>;
  details_hvoiceCoefficientX10000_iMin?: Maybe<Scalars['Int64']['output']>;
  details_hvoiceCoefficientX10000_iSum?: Maybe<Scalars['Int64']['output']>;
  details_hyphaCoefficientX10000_iAvg?: Maybe<Scalars['Float']['output']>;
  details_hyphaCoefficientX10000_iMax?: Maybe<Scalars['Int64']['output']>;
  details_hyphaCoefficientX10000_iMin?: Maybe<Scalars['Int64']['output']>;
  details_hyphaCoefficientX10000_iSum?: Maybe<Scalars['Int64']['output']>;
  details_icon_sMax?: Maybe<Scalars['String']['output']>;
  details_icon_sMin?: Maybe<Scalars['String']['output']>;
  details_maxCycles_iAvg?: Maybe<Scalars['Float']['output']>;
  details_maxCycles_iMax?: Maybe<Scalars['Int64']['output']>;
  details_maxCycles_iMin?: Maybe<Scalars['Int64']['output']>;
  details_maxCycles_iSum?: Maybe<Scalars['Int64']['output']>;
  details_maxPeriodCount_iAvg?: Maybe<Scalars['Float']['output']>;
  details_maxPeriodCount_iMax?: Maybe<Scalars['Int64']['output']>;
  details_maxPeriodCount_iMin?: Maybe<Scalars['Int64']['output']>;
  details_maxPeriodCount_iSum?: Maybe<Scalars['Int64']['output']>;
  details_name_sMax?: Maybe<Scalars['String']['output']>;
  details_name_sMin?: Maybe<Scalars['String']['output']>;
  details_pegCoefficientX10000_iAvg?: Maybe<Scalars['Float']['output']>;
  details_pegCoefficientX10000_iMax?: Maybe<Scalars['Int64']['output']>;
  details_pegCoefficientX10000_iMin?: Maybe<Scalars['Int64']['output']>;
  details_pegCoefficientX10000_iSum?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iAvg?: Maybe<Scalars['Float']['output']>;
  details_periodCount_iMax?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iMin?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iSum?: Maybe<Scalars['Int64']['output']>;
  details_purpose_sMax?: Maybe<Scalars['String']['output']>;
  details_purpose_sMin?: Maybe<Scalars['String']['output']>;
  details_rewardCoefficientX10000_iAvg?: Maybe<Scalars['Float']['output']>;
  details_rewardCoefficientX10000_iMax?: Maybe<Scalars['Int64']['output']>;
  details_rewardCoefficientX10000_iMin?: Maybe<Scalars['Int64']['output']>;
  details_rewardCoefficientX10000_iSum?: Maybe<Scalars['Int64']['output']>;
  details_seedsCoefficientX10000_iAvg?: Maybe<Scalars['Float']['output']>;
  details_seedsCoefficientX10000_iMax?: Maybe<Scalars['Int64']['output']>;
  details_seedsCoefficientX10000_iMin?: Maybe<Scalars['Int64']['output']>;
  details_seedsCoefficientX10000_iSum?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_cMax?: Maybe<Scalars['String']['output']>;
  details_startPeriod_cMin?: Maybe<Scalars['String']['output']>;
  details_startPeriod_iAvg?: Maybe<Scalars['Float']['output']>;
  details_startPeriod_iMax?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_iMin?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_iSum?: Maybe<Scalars['Int64']['output']>;
  details_state_sMax?: Maybe<Scalars['String']['output']>;
  details_state_sMin?: Maybe<Scalars['String']['output']>;
  details_title_sMax?: Maybe<Scalars['String']['output']>;
  details_title_sMin?: Maybe<Scalars['String']['output']>;
  details_voiceCoefficientX10000_iAvg?: Maybe<Scalars['Float']['output']>;
  details_voiceCoefficientX10000_iMax?: Maybe<Scalars['Int64']['output']>;
  details_voiceCoefficientX10000_iMin?: Maybe<Scalars['Int64']['output']>;
  details_voiceCoefficientX10000_iSum?: Maybe<Scalars['Int64']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_badgeId_iAvg?: Maybe<Scalars['Float']['output']>;
  system_badgeId_iMax?: Maybe<Scalars['Int64']['output']>;
  system_badgeId_iMin?: Maybe<Scalars['Int64']['output']>;
  system_badgeId_iSum?: Maybe<Scalars['Int64']['output']>;
  system_ballotId_nMax?: Maybe<Scalars['String']['output']>;
  system_ballotId_nMin?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_commentName_nMax?: Maybe<Scalars['String']['output']>;
  system_commentName_nMin?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_defaultAsset_iAvg?: Maybe<Scalars['Float']['output']>;
  system_defaultAsset_iMax?: Maybe<Scalars['Int64']['output']>;
  system_defaultAsset_iMin?: Maybe<Scalars['Int64']['output']>;
  system_defaultAsset_iSum?: Maybe<Scalars['Int64']['output']>;
  system_description_sMax?: Maybe<Scalars['String']['output']>;
  system_description_sMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  system_proposer_nMax?: Maybe<Scalars['String']['output']>;
  system_proposer_nMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type BadgeFilter = {
  and?: InputMaybe<Array<InputMaybe<BadgeFilter>>>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_assignee_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_badge_i?: InputMaybe<Int64Filter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_a?: InputMaybe<StringTermFilter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_detailsPurposeS_i?: InputMaybe<Int64Filter>;
  details_endPeriod_i?: InputMaybe<Int64Filter>;
  details_husdCoefficientX10000_i?: InputMaybe<Int64Filter>;
  details_hvoiceCoefficientX10000_i?: InputMaybe<Int64Filter>;
  details_hyphaCoefficientX10000_i?: InputMaybe<Int64Filter>;
  details_icon_s?: InputMaybe<StringRegExpFilter>;
  details_maxCycles_i?: InputMaybe<Int64Filter>;
  details_maxPeriodCount_i?: InputMaybe<Int64Filter>;
  details_name_s?: InputMaybe<StringRegExpFilter>;
  details_pegCoefficientX10000_i?: InputMaybe<Int64Filter>;
  details_periodCount_i?: InputMaybe<Int64Filter>;
  details_purpose_s?: InputMaybe<StringRegExpFilter>;
  details_rewardCoefficientX10000_i?: InputMaybe<Int64Filter>;
  details_seedsCoefficientX10000_i?: InputMaybe<Int64Filter>;
  details_startPeriod_c?: InputMaybe<StringExactFilter>;
  details_startPeriod_i?: InputMaybe<Int64Filter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_voiceCoefficientX10000_i?: InputMaybe<Int64Filter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<BadgeHasFilter>>>;
  not?: InputMaybe<BadgeFilter>;
  or?: InputMaybe<Array<InputMaybe<BadgeFilter>>>;
  system_badgeId_i?: InputMaybe<Int64Filter>;
  system_ballotId_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_defaultAsset_i?: InputMaybe<Int64Filter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  system_proposer_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum BadgeHasFilter {
  Assignment = 'assignment',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  Copyof = 'copyof',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBadgeI = 'details_badge_i',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsDetailsPurposeSI = 'details_detailsPurposeS_i',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsHusdCoefficientX10000I = 'details_husdCoefficientX10000_i',
  DetailsHvoiceCoefficientX10000I = 'details_hvoiceCoefficientX10000_i',
  DetailsHyphaCoefficientX10000I = 'details_hyphaCoefficientX10000_i',
  DetailsIconS = 'details_icon_s',
  DetailsMaxCyclesI = 'details_maxCycles_i',
  DetailsMaxPeriodCountI = 'details_maxPeriodCount_i',
  DetailsNameS = 'details_name_s',
  DetailsPegCoefficientX10000I = 'details_pegCoefficientX10000_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsPurposeS = 'details_purpose_s',
  DetailsRewardCoefficientX10000I = 'details_rewardCoefficientX10000_i',
  DetailsSeedsCoefficientX10000I = 'details_seedsCoefficientX10000_i',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsVoiceCoefficientX10000I = 'details_voiceCoefficientX10000_i',
  DocId = 'docId',
  Heldby = 'heldby',
  Ownedby = 'ownedby',
  SystemBadgeIdI = 'system_badgeId_i',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDefaultAssetI = 'system_defaultAsset_i',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  SystemProposerN = 'system_proposer_n',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type BadgeOrder = {
  asc?: InputMaybe<BadgeOrderable>;
  desc?: InputMaybe<BadgeOrderable>;
  then?: InputMaybe<BadgeOrder>;
};

export enum BadgeOrderable {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBadgeI = 'details_badge_i',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsDetailsPurposeSI = 'details_detailsPurposeS_i',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsHusdCoefficientX10000I = 'details_husdCoefficientX10000_i',
  DetailsHvoiceCoefficientX10000I = 'details_hvoiceCoefficientX10000_i',
  DetailsHyphaCoefficientX10000I = 'details_hyphaCoefficientX10000_i',
  DetailsIconS = 'details_icon_s',
  DetailsMaxCyclesI = 'details_maxCycles_i',
  DetailsMaxPeriodCountI = 'details_maxPeriodCount_i',
  DetailsNameS = 'details_name_s',
  DetailsPegCoefficientX10000I = 'details_pegCoefficientX10000_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsPurposeS = 'details_purpose_s',
  DetailsRewardCoefficientX10000I = 'details_rewardCoefficientX10000_i',
  DetailsSeedsCoefficientX10000I = 'details_seedsCoefficientX10000_i',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsVoiceCoefficientX10000I = 'details_voiceCoefficientX10000_i',
  DocId = 'docId',
  SystemBadgeIdI = 'system_badgeId_i',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDefaultAssetI = 'system_defaultAsset_i',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  SystemProposerN = 'system_proposer_n',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type BadgePatch = {
  assignment?: InputMaybe<Array<AssignbadgeRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  copyof?: InputMaybe<Array<BadgeRef>>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']['input']>;
  details_badge_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_detailsPurposeS_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_husdCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_hvoiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_hyphaCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_icon_s?: InputMaybe<Scalars['String']['input']>;
  details_maxCycles_i?: InputMaybe<Scalars['Int64']['input']>;
  details_maxPeriodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  details_pegCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_purpose_s?: InputMaybe<Scalars['String']['input']>;
  details_rewardCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_seedsCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_voiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  heldby?: InputMaybe<Array<MemberRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_badgeId_i?: InputMaybe<Scalars['Int64']['input']>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_defaultAsset_i?: InputMaybe<Scalars['Int64']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_proposer_n?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type BadgeRef = {
  assignment?: InputMaybe<Array<AssignbadgeRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  copyof?: InputMaybe<Array<BadgeRef>>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']['input']>;
  details_badge_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_detailsPurposeS_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_husdCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_hvoiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_hyphaCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_icon_s?: InputMaybe<Scalars['String']['input']>;
  details_maxCycles_i?: InputMaybe<Scalars['Int64']['input']>;
  details_maxPeriodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  details_pegCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_purpose_s?: InputMaybe<Scalars['String']['input']>;
  details_rewardCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_seedsCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_voiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  heldby?: InputMaybe<Array<MemberRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_badgeId_i?: InputMaybe<Scalars['Int64']['input']>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_defaultAsset_i?: InputMaybe<Scalars['Int64']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_proposer_n?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type Balance = Document & {
  __typename?: 'Balance';
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  details_quantity_a?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  owner?: Maybe<Array<Member>>;
  ownerAggregate?: Maybe<MemberAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type BalanceOwnerArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type BalanceOwnerAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};

export type BalanceAggregateResult = {
  __typename?: 'BalanceAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  details_quantity_aMax?: Maybe<Scalars['String']['output']>;
  details_quantity_aMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type BalanceFilter = {
  and?: InputMaybe<Array<InputMaybe<BalanceFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_quantity_a?: InputMaybe<StringTermFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<BalanceHasFilter>>>;
  not?: InputMaybe<BalanceFilter>;
  or?: InputMaybe<Array<InputMaybe<BalanceFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum BalanceHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoI = 'details_dao_i',
  DetailsQuantityA = 'details_quantity_a',
  DocId = 'docId',
  Owner = 'owner',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type BalanceOrder = {
  asc?: InputMaybe<BalanceOrderable>;
  desc?: InputMaybe<BalanceOrderable>;
  then?: InputMaybe<BalanceOrder>;
};

export enum BalanceOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoI = 'details_dao_i',
  DetailsQuantityA = 'details_quantity_a',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type BalancePatch = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_quantity_a?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  owner?: InputMaybe<Array<MemberRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type BalanceRef = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_quantity_a?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  owner?: InputMaybe<Array<MemberRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type BillingInfo = Document & {
  __typename?: 'BillingInfo';
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_billingDay_i?: Maybe<Scalars['Int64']['output']>;
  details_discountPercX10000_i?: Maybe<Scalars['Int64']['output']>;
  details_endDate_t?: Maybe<Scalars['DateTime']['output']>;
  details_expirationDate_t?: Maybe<Scalars['DateTime']['output']>;
  details_isInfinite_i?: Maybe<Scalars['Int64']['output']>;
  details_offerDiscountPercX10000_i?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_i?: Maybe<Scalars['Int64']['output']>;
  details_planName_s?: Maybe<Scalars['String']['output']>;
  details_planPrice_a?: Maybe<Scalars['String']['output']>;
  details_startDate_t?: Maybe<Scalars['DateTime']['output']>;
  details_totalPaid_a?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  nextbill?: Maybe<Array<BillingInfo>>;
  nextbillAggregate?: Maybe<BillingInfoAggregateResult>;
  priceoffer?: Maybe<Array<PriceOffer>>;
  priceofferAggregate?: Maybe<PriceOfferAggregateResult>;
  pricingplan?: Maybe<Array<PricingPlan>>;
  pricingplanAggregate?: Maybe<PricingPlanAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type BillingInfoNextbillArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BillingInfoOrder>;
};


export type BillingInfoNextbillAggregateArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
};


export type BillingInfoPriceofferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PriceOfferOrder>;
};


export type BillingInfoPriceofferAggregateArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
};


export type BillingInfoPricingplanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PricingPlanOrder>;
};


export type BillingInfoPricingplanAggregateArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
};

export type BillingInfoAggregateResult = {
  __typename?: 'BillingInfoAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_billingDay_iAvg?: Maybe<Scalars['Float']['output']>;
  details_billingDay_iMax?: Maybe<Scalars['Int64']['output']>;
  details_billingDay_iMin?: Maybe<Scalars['Int64']['output']>;
  details_billingDay_iSum?: Maybe<Scalars['Int64']['output']>;
  details_discountPercX10000_iAvg?: Maybe<Scalars['Float']['output']>;
  details_discountPercX10000_iMax?: Maybe<Scalars['Int64']['output']>;
  details_discountPercX10000_iMin?: Maybe<Scalars['Int64']['output']>;
  details_discountPercX10000_iSum?: Maybe<Scalars['Int64']['output']>;
  details_endDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_endDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  details_expirationDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_expirationDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  details_isInfinite_iAvg?: Maybe<Scalars['Float']['output']>;
  details_isInfinite_iMax?: Maybe<Scalars['Int64']['output']>;
  details_isInfinite_iMin?: Maybe<Scalars['Int64']['output']>;
  details_isInfinite_iSum?: Maybe<Scalars['Int64']['output']>;
  details_offerDiscountPercX10000_iAvg?: Maybe<Scalars['Float']['output']>;
  details_offerDiscountPercX10000_iMax?: Maybe<Scalars['Int64']['output']>;
  details_offerDiscountPercX10000_iMin?: Maybe<Scalars['Int64']['output']>;
  details_offerDiscountPercX10000_iSum?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iAvg?: Maybe<Scalars['Float']['output']>;
  details_periodCount_iMax?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iMin?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iSum?: Maybe<Scalars['Int64']['output']>;
  details_planName_sMax?: Maybe<Scalars['String']['output']>;
  details_planName_sMin?: Maybe<Scalars['String']['output']>;
  details_planPrice_aMax?: Maybe<Scalars['String']['output']>;
  details_planPrice_aMin?: Maybe<Scalars['String']['output']>;
  details_startDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_startDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  details_totalPaid_aMax?: Maybe<Scalars['String']['output']>;
  details_totalPaid_aMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type BillingInfoFilter = {
  and?: InputMaybe<Array<InputMaybe<BillingInfoFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_billingDay_i?: InputMaybe<Int64Filter>;
  details_discountPercX10000_i?: InputMaybe<Int64Filter>;
  details_endDate_t?: InputMaybe<DateTimeFilter>;
  details_expirationDate_t?: InputMaybe<DateTimeFilter>;
  details_isInfinite_i?: InputMaybe<Int64Filter>;
  details_offerDiscountPercX10000_i?: InputMaybe<Int64Filter>;
  details_periodCount_i?: InputMaybe<Int64Filter>;
  details_planName_s?: InputMaybe<StringRegExpFilter>;
  details_planPrice_a?: InputMaybe<StringTermFilter>;
  details_startDate_t?: InputMaybe<DateTimeFilter>;
  details_totalPaid_a?: InputMaybe<StringTermFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<BillingInfoHasFilter>>>;
  not?: InputMaybe<BillingInfoFilter>;
  or?: InputMaybe<Array<InputMaybe<BillingInfoFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum BillingInfoHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsBillingDayI = 'details_billingDay_i',
  DetailsDiscountPercX10000I = 'details_discountPercX10000_i',
  DetailsEndDateT = 'details_endDate_t',
  DetailsExpirationDateT = 'details_expirationDate_t',
  DetailsIsInfiniteI = 'details_isInfinite_i',
  DetailsOfferDiscountPercX10000I = 'details_offerDiscountPercX10000_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsPlanNameS = 'details_planName_s',
  DetailsPlanPriceA = 'details_planPrice_a',
  DetailsStartDateT = 'details_startDate_t',
  DetailsTotalPaidA = 'details_totalPaid_a',
  DocId = 'docId',
  Nextbill = 'nextbill',
  Priceoffer = 'priceoffer',
  Pricingplan = 'pricingplan',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type BillingInfoOrder = {
  asc?: InputMaybe<BillingInfoOrderable>;
  desc?: InputMaybe<BillingInfoOrderable>;
  then?: InputMaybe<BillingInfoOrder>;
};

export enum BillingInfoOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsBillingDayI = 'details_billingDay_i',
  DetailsDiscountPercX10000I = 'details_discountPercX10000_i',
  DetailsEndDateT = 'details_endDate_t',
  DetailsExpirationDateT = 'details_expirationDate_t',
  DetailsIsInfiniteI = 'details_isInfinite_i',
  DetailsOfferDiscountPercX10000I = 'details_offerDiscountPercX10000_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsPlanNameS = 'details_planName_s',
  DetailsPlanPriceA = 'details_planPrice_a',
  DetailsStartDateT = 'details_startDate_t',
  DetailsTotalPaidA = 'details_totalPaid_a',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type BillingInfoPatch = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_billingDay_i?: InputMaybe<Scalars['Int64']['input']>;
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_expirationDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_isInfinite_i?: InputMaybe<Scalars['Int64']['input']>;
  details_offerDiscountPercX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_planName_s?: InputMaybe<Scalars['String']['input']>;
  details_planPrice_a?: InputMaybe<Scalars['String']['input']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_totalPaid_a?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  nextbill?: InputMaybe<Array<BillingInfoRef>>;
  priceoffer?: InputMaybe<Array<PriceOfferRef>>;
  pricingplan?: InputMaybe<Array<PricingPlanRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type BillingInfoRef = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_billingDay_i?: InputMaybe<Scalars['Int64']['input']>;
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_expirationDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_isInfinite_i?: InputMaybe<Scalars['Int64']['input']>;
  details_offerDiscountPercX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_planName_s?: InputMaybe<Scalars['String']['input']>;
  details_planPrice_a?: InputMaybe<Scalars['String']['input']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_totalPaid_a?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  nextbill?: InputMaybe<Array<BillingInfoRef>>;
  priceoffer?: InputMaybe<Array<PriceOfferRef>>;
  pricingplan?: InputMaybe<Array<PricingPlanRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type Budget = Document & Votable & {
  __typename?: 'Budget';
  ballotOptions_abstain_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']['output']>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']['output']>;
  circle?: Maybe<Array<Circle>>;
  circleAggregate?: Maybe<CircleAggregateResult>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_a?: Maybe<Scalars['String']['output']>;
  details_circleId_i?: Maybe<Scalars['Int64']['output']>;
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_i?: Maybe<Scalars['Int64']['output']>;
  details_description_s?: Maybe<Scalars['String']['output']>;
  details_pegAmount_a?: Maybe<Scalars['String']['output']>;
  details_rewardAmount_a?: Maybe<Scalars['String']['output']>;
  details_state_s?: Maybe<Scalars['String']['output']>;
  details_title_s?: Maybe<Scalars['String']['output']>;
  details_usdAmount_a?: Maybe<Scalars['String']['output']>;
  details_voiceAmount_a?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  system_clientVersion_s?: Maybe<Scalars['String']['output']>;
  system_contractVersion_s?: Maybe<Scalars['String']['output']>;
  system_description_s?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type BudgetCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CircleOrder>;
};


export type BudgetCircleAggregateArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type BudgetCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type BudgetCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type BudgetDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type BudgetDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type BudgetOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type BudgetOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type BudgetVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type BudgetVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type BudgetVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type BudgetVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type BudgetAggregateResult = {
  __typename?: 'BudgetAggregateResult';
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']['output']>;
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']['output']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']['output']>;
  details_circleId_iAvg?: Maybe<Scalars['Float']['output']>;
  details_circleId_iMax?: Maybe<Scalars['Int64']['output']>;
  details_circleId_iMin?: Maybe<Scalars['Int64']['output']>;
  details_circleId_iSum?: Maybe<Scalars['Int64']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_deferredPercX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_description_sMax?: Maybe<Scalars['String']['output']>;
  details_description_sMin?: Maybe<Scalars['String']['output']>;
  details_pegAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_pegAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_rewardAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_rewardAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_state_sMax?: Maybe<Scalars['String']['output']>;
  details_state_sMin?: Maybe<Scalars['String']['output']>;
  details_title_sMax?: Maybe<Scalars['String']['output']>;
  details_title_sMin?: Maybe<Scalars['String']['output']>;
  details_usdAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_usdAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_voiceAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_voiceAmount_aMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_description_sMax?: Maybe<Scalars['String']['output']>;
  system_description_sMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type BudgetFilter = {
  and?: InputMaybe<Array<InputMaybe<BudgetFilter>>>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_circleId_i?: InputMaybe<Int64Filter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_deferredPercX100_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_pegAmount_a?: InputMaybe<StringTermFilter>;
  details_rewardAmount_a?: InputMaybe<StringTermFilter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_usdAmount_a?: InputMaybe<StringTermFilter>;
  details_voiceAmount_a?: InputMaybe<StringTermFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<BudgetHasFilter>>>;
  not?: InputMaybe<BudgetFilter>;
  or?: InputMaybe<Array<InputMaybe<BudgetFilter>>>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum BudgetHasFilter {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Circle = 'circle',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsCircleIdI = 'details_circleId_i',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsPegAmountA = 'details_pegAmount_a',
  DetailsRewardAmountA = 'details_rewardAmount_a',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsUsdAmountA = 'details_usdAmount_a',
  DetailsVoiceAmountA = 'details_voiceAmount_a',
  DocId = 'docId',
  Ownedby = 'ownedby',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type BudgetOrder = {
  asc?: InputMaybe<BudgetOrderable>;
  desc?: InputMaybe<BudgetOrderable>;
  then?: InputMaybe<BudgetOrder>;
};

export enum BudgetOrderable {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsCircleIdI = 'details_circleId_i',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsPegAmountA = 'details_pegAmount_a',
  DetailsRewardAmountA = 'details_rewardAmount_a',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsUsdAmountA = 'details_usdAmount_a',
  DetailsVoiceAmountA = 'details_voiceAmount_a',
  DocId = 'docId',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type BudgetPatch = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  circle?: InputMaybe<Array<CircleRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_circleId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_usdAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type BudgetRef = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  circle?: InputMaybe<Array<CircleRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_circleId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_usdAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type Calendar = Document & {
  __typename?: 'Calendar';
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  docId: Scalars['String']['output'];
  end?: Maybe<Array<Period>>;
  endAggregate?: Maybe<PeriodAggregateResult>;
  period?: Maybe<Array<Period>>;
  periodAggregate?: Maybe<PeriodAggregateResult>;
  start?: Maybe<Array<Period>>;
  startAggregate?: Maybe<PeriodAggregateResult>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type CalendarDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type CalendarDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type CalendarEndArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};


export type CalendarEndAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type CalendarPeriodArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};


export type CalendarPeriodAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type CalendarStartArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};


export type CalendarStartAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};

export type CalendarAggregateResult = {
  __typename?: 'CalendarAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type CalendarFilter = {
  and?: InputMaybe<Array<InputMaybe<CalendarFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<CalendarHasFilter>>>;
  not?: InputMaybe<CalendarFilter>;
  or?: InputMaybe<Array<InputMaybe<CalendarFilter>>>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum CalendarHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DocId = 'docId',
  End = 'end',
  Period = 'period',
  Start = 'start',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type CalendarOrder = {
  asc?: InputMaybe<CalendarOrderable>;
  desc?: InputMaybe<CalendarOrderable>;
  then?: InputMaybe<CalendarOrder>;
};

export enum CalendarOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type CalendarPatch = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  docId?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Array<PeriodRef>>;
  period?: InputMaybe<Array<PeriodRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CalendarRef = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  docId?: InputMaybe<Scalars['String']['input']>;
  end?: InputMaybe<Array<PeriodRef>>;
  period?: InputMaybe<Array<PeriodRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type Circle = Document & Votable & {
  __typename?: 'Circle';
  applicant?: Maybe<Array<Member>>;
  applicantAggregate?: Maybe<MemberAggregateResult>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']['output']>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']['output']>;
  budget?: Maybe<Array<Budget>>;
  budgetAggregate?: Maybe<BudgetAggregateResult>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_autoApprove_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_a?: Maybe<Scalars['String']['output']>;
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  details_description_s?: Maybe<Scalars['String']['output']>;
  details_name_s?: Maybe<Scalars['String']['output']>;
  details_parentCircle_i?: Maybe<Scalars['Int64']['output']>;
  details_purpose_s?: Maybe<Scalars['String']['output']>;
  details_state_s?: Maybe<Scalars['String']['output']>;
  details_title_s?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  lockedby?: Maybe<Array<Budget>>;
  lockedbyAggregate?: Maybe<BudgetAggregateResult>;
  member?: Maybe<Array<Member>>;
  memberAggregate?: Maybe<MemberAggregateResult>;
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  parentcircle?: Maybe<Array<Document>>;
  parentcircleAggregate?: Maybe<DocumentAggregateResult>;
  subcircle?: Maybe<Array<Circle>>;
  subcircleAggregate?: Maybe<CircleAggregateResult>;
  system_clientVersion_s?: Maybe<Scalars['String']['output']>;
  system_contractVersion_s?: Maybe<Scalars['String']['output']>;
  system_description_s?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']['output']>;
  system_selfApproved_i?: Maybe<Scalars['Int64']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type CircleApplicantArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type CircleApplicantAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type CircleBudgetArgs = {
  filter?: InputMaybe<BudgetFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BudgetOrder>;
};


export type CircleBudgetAggregateArgs = {
  filter?: InputMaybe<BudgetFilter>;
};


export type CircleCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type CircleCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type CircleDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type CircleDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type CircleLockedbyArgs = {
  filter?: InputMaybe<BudgetFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BudgetOrder>;
};


export type CircleLockedbyAggregateArgs = {
  filter?: InputMaybe<BudgetFilter>;
};


export type CircleMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type CircleMemberAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type CircleOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type CircleOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type CircleParentcircleArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type CircleParentcircleAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type CircleSubcircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CircleOrder>;
};


export type CircleSubcircleAggregateArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type CircleVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type CircleVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type CircleVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type CircleVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type CircleAggregateResult = {
  __typename?: 'CircleAggregateResult';
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']['output']>;
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']['output']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_autoApprove_iAvg?: Maybe<Scalars['Float']['output']>;
  details_autoApprove_iMax?: Maybe<Scalars['Int64']['output']>;
  details_autoApprove_iMin?: Maybe<Scalars['Int64']['output']>;
  details_autoApprove_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  details_description_sMax?: Maybe<Scalars['String']['output']>;
  details_description_sMin?: Maybe<Scalars['String']['output']>;
  details_name_sMax?: Maybe<Scalars['String']['output']>;
  details_name_sMin?: Maybe<Scalars['String']['output']>;
  details_parentCircle_iAvg?: Maybe<Scalars['Float']['output']>;
  details_parentCircle_iMax?: Maybe<Scalars['Int64']['output']>;
  details_parentCircle_iMin?: Maybe<Scalars['Int64']['output']>;
  details_parentCircle_iSum?: Maybe<Scalars['Int64']['output']>;
  details_purpose_sMax?: Maybe<Scalars['String']['output']>;
  details_purpose_sMin?: Maybe<Scalars['String']['output']>;
  details_state_sMax?: Maybe<Scalars['String']['output']>;
  details_state_sMin?: Maybe<Scalars['String']['output']>;
  details_title_sMax?: Maybe<Scalars['String']['output']>;
  details_title_sMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_description_sMax?: Maybe<Scalars['String']['output']>;
  system_description_sMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  system_selfApproved_iAvg?: Maybe<Scalars['Float']['output']>;
  system_selfApproved_iMax?: Maybe<Scalars['Int64']['output']>;
  system_selfApproved_iMin?: Maybe<Scalars['Int64']['output']>;
  system_selfApproved_iSum?: Maybe<Scalars['Int64']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type CircleFilter = {
  and?: InputMaybe<Array<InputMaybe<CircleFilter>>>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_autoApprove_i?: InputMaybe<Int64Filter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_name_s?: InputMaybe<StringRegExpFilter>;
  details_parentCircle_i?: InputMaybe<Int64Filter>;
  details_purpose_s?: InputMaybe<StringRegExpFilter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<CircleHasFilter>>>;
  not?: InputMaybe<CircleFilter>;
  or?: InputMaybe<Array<InputMaybe<CircleFilter>>>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  system_selfApproved_i?: InputMaybe<Int64Filter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum CircleHasFilter {
  Applicant = 'applicant',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Budget = 'budget',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsAutoApproveI = 'details_autoApprove_i',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsNameS = 'details_name_s',
  DetailsParentCircleI = 'details_parentCircle_i',
  DetailsPurposeS = 'details_purpose_s',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DocId = 'docId',
  Lockedby = 'lockedby',
  Member = 'member',
  Ownedby = 'ownedby',
  Parentcircle = 'parentcircle',
  Subcircle = 'subcircle',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  SystemSelfApprovedI = 'system_selfApproved_i',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type CircleOrder = {
  asc?: InputMaybe<CircleOrderable>;
  desc?: InputMaybe<CircleOrderable>;
  then?: InputMaybe<CircleOrder>;
};

export enum CircleOrderable {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAutoApproveI = 'details_autoApprove_i',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsNameS = 'details_name_s',
  DetailsParentCircleI = 'details_parentCircle_i',
  DetailsPurposeS = 'details_purpose_s',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DocId = 'docId',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  SystemSelfApprovedI = 'system_selfApproved_i',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type CirclePatch = {
  applicant?: InputMaybe<Array<MemberRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  budget?: InputMaybe<Array<BudgetRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_autoApprove_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']['input']>;
  details_purpose_s?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  lockedby?: InputMaybe<Array<BudgetRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentcircle?: InputMaybe<Array<DocumentRef>>;
  subcircle?: InputMaybe<Array<CircleRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_selfApproved_i?: InputMaybe<Scalars['Int64']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type CircleRef = {
  applicant?: InputMaybe<Array<MemberRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  budget?: InputMaybe<Array<BudgetRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_autoApprove_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']['input']>;
  details_purpose_s?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  lockedby?: InputMaybe<Array<BudgetRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentcircle?: InputMaybe<Array<DocumentRef>>;
  subcircle?: InputMaybe<Array<CircleRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_selfApproved_i?: InputMaybe<Scalars['Int64']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type CmntSection = Document & {
  __typename?: 'CmntSection';
  cmntsectof?: Maybe<Array<Document>>;
  cmntsectofAggregate?: Maybe<DocumentAggregateResult>;
  comment?: Maybe<Array<Comment>>;
  commentAggregate?: Maybe<CommentAggregateResult>;
  commentSection_likes_i?: Maybe<Scalars['Int64']['output']>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  docId: Scalars['String']['output'];
  likeDetails_likes_i?: Maybe<Scalars['Int64']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type CmntSectionCmntsectofArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type CmntSectionCmntsectofAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type CmntSectionCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CommentOrder>;
};


export type CmntSectionCommentAggregateArgs = {
  filter?: InputMaybe<CommentFilter>;
};

export type CmntSectionAggregateResult = {
  __typename?: 'CmntSectionAggregateResult';
  commentSection_likes_iAvg?: Maybe<Scalars['Float']['output']>;
  commentSection_likes_iMax?: Maybe<Scalars['Int64']['output']>;
  commentSection_likes_iMin?: Maybe<Scalars['Int64']['output']>;
  commentSection_likes_iSum?: Maybe<Scalars['Int64']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  likeDetails_likes_iAvg?: Maybe<Scalars['Float']['output']>;
  likeDetails_likes_iMax?: Maybe<Scalars['Int64']['output']>;
  likeDetails_likes_iMin?: Maybe<Scalars['Int64']['output']>;
  likeDetails_likes_iSum?: Maybe<Scalars['Int64']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type CmntSectionFilter = {
  and?: InputMaybe<Array<InputMaybe<CmntSectionFilter>>>;
  commentSection_likes_i?: InputMaybe<Int64Filter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<CmntSectionHasFilter>>>;
  likeDetails_likes_i?: InputMaybe<Int64Filter>;
  not?: InputMaybe<CmntSectionFilter>;
  or?: InputMaybe<Array<InputMaybe<CmntSectionFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum CmntSectionHasFilter {
  Cmntsectof = 'cmntsectof',
  Comment = 'comment',
  CommentSectionLikesI = 'commentSection_likes_i',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  LikeDetailsLikesI = 'likeDetails_likes_i',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type CmntSectionOrder = {
  asc?: InputMaybe<CmntSectionOrderable>;
  desc?: InputMaybe<CmntSectionOrderable>;
  then?: InputMaybe<CmntSectionOrder>;
};

export enum CmntSectionOrderable {
  CommentSectionLikesI = 'commentSection_likes_i',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  LikeDetailsLikesI = 'likeDetails_likes_i',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type CmntSectionPatch = {
  cmntsectof?: InputMaybe<Array<DocumentRef>>;
  comment?: InputMaybe<Array<CommentRef>>;
  commentSection_likes_i?: InputMaybe<Scalars['Int64']['input']>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  likeDetails_likes_i?: InputMaybe<Scalars['Int64']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CmntSectionRef = {
  cmntsectof?: InputMaybe<Array<DocumentRef>>;
  comment?: InputMaybe<Array<CommentRef>>;
  commentSection_likes_i?: InputMaybe<Scalars['Int64']['input']>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  likeDetails_likes_i?: InputMaybe<Scalars['Int64']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type Comment = Document & {
  __typename?: 'Comment';
  comment?: Maybe<Array<Comment>>;
  commentAggregate?: Maybe<CommentAggregateResult>;
  comment_author_n?: Maybe<Scalars['String']['output']>;
  comment_commentCount_i?: Maybe<Scalars['Int64']['output']>;
  comment_content_s?: Maybe<Scalars['String']['output']>;
  comment_deleted_i?: Maybe<Scalars['Int64']['output']>;
  commentof?: Maybe<Array<Document>>;
  commentofAggregate?: Maybe<DocumentAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  docId: Scalars['String']['output'];
  likeDetails_likes_i?: Maybe<Scalars['Int64']['output']>;
  likes_johnnyhypha1_i?: Maybe<Scalars['Int64']['output']>;
  reactedby?: Maybe<Array<Member>>;
  reactedbyAggregate?: Maybe<MemberAggregateResult>;
  reaction?: Maybe<Array<Reaction>>;
  reactionAggregate?: Maybe<ReactionAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type CommentCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CommentOrder>;
};


export type CommentCommentAggregateArgs = {
  filter?: InputMaybe<CommentFilter>;
};


export type CommentCommentofArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type CommentCommentofAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type CommentReactedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type CommentReactedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type CommentReactionArgs = {
  filter?: InputMaybe<ReactionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ReactionOrder>;
};


export type CommentReactionAggregateArgs = {
  filter?: InputMaybe<ReactionFilter>;
};

export type CommentAggregateResult = {
  __typename?: 'CommentAggregateResult';
  comment_author_nMax?: Maybe<Scalars['String']['output']>;
  comment_author_nMin?: Maybe<Scalars['String']['output']>;
  comment_commentCount_iAvg?: Maybe<Scalars['Float']['output']>;
  comment_commentCount_iMax?: Maybe<Scalars['Int64']['output']>;
  comment_commentCount_iMin?: Maybe<Scalars['Int64']['output']>;
  comment_commentCount_iSum?: Maybe<Scalars['Int64']['output']>;
  comment_content_sMax?: Maybe<Scalars['String']['output']>;
  comment_content_sMin?: Maybe<Scalars['String']['output']>;
  comment_deleted_iAvg?: Maybe<Scalars['Float']['output']>;
  comment_deleted_iMax?: Maybe<Scalars['Int64']['output']>;
  comment_deleted_iMin?: Maybe<Scalars['Int64']['output']>;
  comment_deleted_iSum?: Maybe<Scalars['Int64']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  likeDetails_likes_iAvg?: Maybe<Scalars['Float']['output']>;
  likeDetails_likes_iMax?: Maybe<Scalars['Int64']['output']>;
  likeDetails_likes_iMin?: Maybe<Scalars['Int64']['output']>;
  likeDetails_likes_iSum?: Maybe<Scalars['Int64']['output']>;
  likes_johnnyhypha1_iAvg?: Maybe<Scalars['Float']['output']>;
  likes_johnnyhypha1_iMax?: Maybe<Scalars['Int64']['output']>;
  likes_johnnyhypha1_iMin?: Maybe<Scalars['Int64']['output']>;
  likes_johnnyhypha1_iSum?: Maybe<Scalars['Int64']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type CommentFilter = {
  and?: InputMaybe<Array<InputMaybe<CommentFilter>>>;
  comment_author_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  comment_commentCount_i?: InputMaybe<Int64Filter>;
  comment_content_s?: InputMaybe<StringRegExpFilter>;
  comment_deleted_i?: InputMaybe<Int64Filter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<CommentHasFilter>>>;
  likeDetails_likes_i?: InputMaybe<Int64Filter>;
  likes_johnnyhypha1_i?: InputMaybe<Int64Filter>;
  not?: InputMaybe<CommentFilter>;
  or?: InputMaybe<Array<InputMaybe<CommentFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum CommentHasFilter {
  Comment = 'comment',
  CommentAuthorN = 'comment_author_n',
  CommentCommentCountI = 'comment_commentCount_i',
  CommentContentS = 'comment_content_s',
  CommentDeletedI = 'comment_deleted_i',
  Commentof = 'commentof',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  LikeDetailsLikesI = 'likeDetails_likes_i',
  LikesJohnnyhypha1I = 'likes_johnnyhypha1_i',
  Reactedby = 'reactedby',
  Reaction = 'reaction',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type CommentOrder = {
  asc?: InputMaybe<CommentOrderable>;
  desc?: InputMaybe<CommentOrderable>;
  then?: InputMaybe<CommentOrder>;
};

export enum CommentOrderable {
  CommentAuthorN = 'comment_author_n',
  CommentCommentCountI = 'comment_commentCount_i',
  CommentContentS = 'comment_content_s',
  CommentDeletedI = 'comment_deleted_i',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  LikeDetailsLikesI = 'likeDetails_likes_i',
  LikesJohnnyhypha1I = 'likes_johnnyhypha1_i',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type CommentPatch = {
  comment?: InputMaybe<Array<CommentRef>>;
  comment_author_n?: InputMaybe<Scalars['String']['input']>;
  comment_commentCount_i?: InputMaybe<Scalars['Int64']['input']>;
  comment_content_s?: InputMaybe<Scalars['String']['input']>;
  comment_deleted_i?: InputMaybe<Scalars['Int64']['input']>;
  commentof?: InputMaybe<Array<DocumentRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  likeDetails_likes_i?: InputMaybe<Scalars['Int64']['input']>;
  likes_johnnyhypha1_i?: InputMaybe<Scalars['Int64']['input']>;
  reactedby?: InputMaybe<Array<MemberRef>>;
  reaction?: InputMaybe<Array<ReactionRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CommentRef = {
  comment?: InputMaybe<Array<CommentRef>>;
  comment_author_n?: InputMaybe<Scalars['String']['input']>;
  comment_commentCount_i?: InputMaybe<Scalars['Int64']['input']>;
  comment_content_s?: InputMaybe<Scalars['String']['input']>;
  comment_deleted_i?: InputMaybe<Scalars['Int64']['input']>;
  commentof?: InputMaybe<Array<DocumentRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  likeDetails_likes_i?: InputMaybe<Scalars['Int64']['input']>;
  likes_johnnyhypha1_i?: InputMaybe<Scalars['Int64']['input']>;
  reactedby?: InputMaybe<Array<MemberRef>>;
  reaction?: InputMaybe<Array<ReactionRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ContainsFilter = {
  point?: InputMaybe<PointRef>;
  polygon?: InputMaybe<PolygonRef>;
};

export type Cursor = {
  __typename?: 'Cursor';
  cursor: Scalars['String']['output'];
  id: Scalars['String']['output'];
};

export type CursorAggregateResult = {
  __typename?: 'CursorAggregateResult';
  count?: Maybe<Scalars['Int']['output']>;
  cursorMax?: Maybe<Scalars['String']['output']>;
  cursorMin?: Maybe<Scalars['String']['output']>;
  idMax?: Maybe<Scalars['String']['output']>;
  idMin?: Maybe<Scalars['String']['output']>;
};

export type CursorFilter = {
  and?: InputMaybe<Array<InputMaybe<CursorFilter>>>;
  has?: InputMaybe<Array<InputMaybe<CursorHasFilter>>>;
  id?: InputMaybe<StringExactFilter>;
  not?: InputMaybe<CursorFilter>;
  or?: InputMaybe<Array<InputMaybe<CursorFilter>>>;
};

export enum CursorHasFilter {
  Cursor = 'cursor',
  Id = 'id'
}

export type CursorOrder = {
  asc?: InputMaybe<CursorOrderable>;
  desc?: InputMaybe<CursorOrderable>;
  then?: InputMaybe<CursorOrder>;
};

export enum CursorOrderable {
  Cursor = 'cursor',
  Id = 'id'
}

export type CursorPatch = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CursorRef = {
  cursor?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type CustomHttp = {
  body?: InputMaybe<Scalars['String']['input']>;
  forwardHeaders?: InputMaybe<Array<Scalars['String']['input']>>;
  graphql?: InputMaybe<Scalars['String']['input']>;
  introspectionHeaders?: InputMaybe<Array<Scalars['String']['input']>>;
  method: HttpMethod;
  mode?: InputMaybe<Mode>;
  secretHeaders?: InputMaybe<Array<Scalars['String']['input']>>;
  skipIntrospection?: InputMaybe<Scalars['Boolean']['input']>;
  url: Scalars['String']['input'];
};

export type Dao = Document & {
  __typename?: 'Dao';
  admin?: Maybe<Array<Member>>;
  adminAggregate?: Maybe<MemberAggregateResult>;
  alert?: Maybe<Array<Alert>>;
  alertAggregate?: Maybe<AlertAggregateResult>;
  anchorchild?: Maybe<Array<Dao>>;
  anchorchildAggregate?: Maybe<DaoAggregateResult>;
  anchorparent?: Maybe<Array<Dao>>;
  anchorparentAggregate?: Maybe<DaoAggregateResult>;
  applicant?: Maybe<Array<Member>>;
  applicantAggregate?: Maybe<MemberAggregateResult>;
  badge?: Maybe<Array<Badge>>;
  badgeAggregate?: Maybe<BadgeAggregateResult>;
  calendar?: Maybe<Array<Calendar>>;
  calendarAggregate?: Maybe<CalendarAggregateResult>;
  chiefdelegate?: Maybe<Array<Member>>;
  chiefdelegateAggregate?: Maybe<MemberAggregateResult>;
  chiefround?: Maybe<Array<ElectnRound>>;
  chiefroundAggregate?: Maybe<ElectnRoundAggregateResult>;
  childdraft?: Maybe<Array<DaoDraft>>;
  childdraftAggregate?: Maybe<DaoDraftAggregateResult>;
  circle?: Maybe<Array<Circle>>;
  circleAggregate?: Maybe<CircleAggregateResult>;
  closedprops?: Maybe<Array<Document>>;
  closedpropsAggregate?: Maybe<DocumentAggregateResult>;
  commember?: Maybe<Array<Member>>;
  commemberAggregate?: Maybe<MemberAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  current?: Maybe<Array<Period>>;
  currentAggregate?: Maybe<PeriodAggregateResult>;
  delegate?: Maybe<Array<Member>>;
  delegateAggregate?: Maybe<MemberAggregateResult>;
  details_daoName_n: Scalars['String']['output'];
  details_daoType_s?: Maybe<Scalars['String']['output']>;
  details_isWaitingEcosystem_i?: Maybe<Scalars['Int64']['output']>;
  details_unusedField_n?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  election?: Maybe<Array<UpvtElectn>>;
  electionAggregate?: Maybe<UpvtElectnAggregateResult>;
  end?: Maybe<Array<Period>>;
  endAggregate?: Maybe<PeriodAggregateResult>;
  enroller?: Maybe<Array<Member>>;
  enrollerAggregate?: Maybe<MemberAggregateResult>;
  failedprops?: Maybe<Array<Document>>;
  failedpropsAggregate?: Maybe<DocumentAggregateResult>;
  headdelegate?: Maybe<Array<Member>>;
  headdelegateAggregate?: Maybe<MemberAggregateResult>;
  headround?: Maybe<Array<ElectnRound>>;
  headroundAggregate?: Maybe<ElectnRoundAggregateResult>;
  member?: Maybe<Array<Member>>;
  memberAggregate?: Maybe<MemberAggregateResult>;
  northstrhold?: Maybe<Array<Member>>;
  northstrholdAggregate?: Maybe<MemberAggregateResult>;
  ongoingelct?: Maybe<Array<UpvtElectn>>;
  ongoingelctAggregate?: Maybe<UpvtElectnAggregateResult>;
  openmultisig?: Maybe<Array<Multisig>>;
  openmultisigAggregate?: Maybe<MultisigAggregateResult>;
  owner?: Maybe<Array<Member>>;
  ownerAggregate?: Maybe<MemberAggregateResult>;
  owns?: Maybe<Array<Calendar>>;
  ownsAggregate?: Maybe<CalendarAggregateResult>;
  passedprops?: Maybe<Array<Document>>;
  passedpropsAggregate?: Maybe<DocumentAggregateResult>;
  payout?: Maybe<Array<Payout>>;
  payoutAggregate?: Maybe<PayoutAggregateResult>;
  period?: Maybe<Array<Period>>;
  periodAggregate?: Maybe<PeriodAggregateResult>;
  planmanager?: Maybe<Array<PlanManager>>;
  planmanagerAggregate?: Maybe<PlanManagerAggregateResult>;
  previouselct?: Maybe<Array<UpvtElectn>>;
  previouselctAggregate?: Maybe<UpvtElectnAggregateResult>;
  proposal?: Maybe<Array<Document>>;
  proposalAggregate?: Maybe<DocumentAggregateResult>;
  questcomple?: Maybe<Array<Questcomple>>;
  questcompleAggregate?: Maybe<QuestcompleAggregateResult>;
  queststart?: Maybe<Array<Queststart>>;
  queststartAggregate?: Maybe<QueststartAggregateResult>;
  role?: Maybe<Array<Role>>;
  roleAggregate?: Maybe<RoleAggregateResult>;
  round?: Maybe<Array<ElectnRound>>;
  roundAggregate?: Maybe<ElectnRoundAggregateResult>;
  salaryband?: Maybe<Array<Salaryband>>;
  salarybandAggregate?: Maybe<SalarybandAggregateResult>;
  settings?: Maybe<Array<Settings>>;
  settingsAggregate?: Maybe<SettingsAggregateResult>;
  stagingprop?: Maybe<Array<Document>>;
  stagingpropAggregate?: Maybe<DocumentAggregateResult>;
  start?: Maybe<Array<Period>>;
  startAggregate?: Maybe<PeriodAggregateResult>;
  suspended?: Maybe<Array<Document>>;
  suspendedAggregate?: Maybe<DocumentAggregateResult>;
  system_nodeLabel_n?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  treasury?: Maybe<Array<Treasury>>;
  treasuryAggregate?: Maybe<TreasuryAggregateResult>;
  type: Scalars['String']['output'];
  ueElection?: Maybe<Array<UpvtElectn>>;
  ueElectionAggregate?: Maybe<UpvtElectnAggregateResult>;
  ueOngoing?: Maybe<Array<UpvtElectn>>;
  ueOngoingAggregate?: Maybe<UpvtElectnAggregateResult>;
  uePrevious?: Maybe<Array<UpvtElectn>>;
  uePreviousAggregate?: Maybe<UpvtElectnAggregateResult>;
  ueUpcoming?: Maybe<Array<UpvtElectn>>;
  ueUpcomingAggregate?: Maybe<UpvtElectnAggregateResult>;
  upcomingelct?: Maybe<Array<UpvtElectn>>;
  upcomingelctAggregate?: Maybe<UpvtElectnAggregateResult>;
  updatedDate: Scalars['DateTime']['output'];
  votable?: Maybe<Array<Document>>;
  votableAggregate?: Maybe<DocumentAggregateResult>;
  voter?: Maybe<Array<Member>>;
  voterAggregate?: Maybe<MemberAggregateResult>;
};


export type DaoAdminArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoAdminAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AlertOrder>;
};


export type DaoAlertAggregateArgs = {
  filter?: InputMaybe<AlertFilter>;
};


export type DaoAnchorchildArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type DaoAnchorchildAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type DaoAnchorparentArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type DaoAnchorparentAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type DaoApplicantArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoApplicantAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BadgeOrder>;
};


export type DaoBadgeAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type DaoCalendarArgs = {
  filter?: InputMaybe<CalendarFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CalendarOrder>;
};


export type DaoCalendarAggregateArgs = {
  filter?: InputMaybe<CalendarFilter>;
};


export type DaoChiefdelegateArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoChiefdelegateAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoChiefroundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type DaoChiefroundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type DaoChilddraftArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoDraftOrder>;
};


export type DaoChilddraftAggregateArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
};


export type DaoCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CircleOrder>;
};


export type DaoCircleAggregateArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type DaoClosedpropsArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DaoClosedpropsAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DaoCommemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoCommemberAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoCurrentArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};


export type DaoCurrentAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type DaoDelegateArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoDelegateAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoElectionArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type DaoElectionAggregateArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type DaoEndArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};


export type DaoEndAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type DaoEnrollerArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoEnrollerAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoFailedpropsArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DaoFailedpropsAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DaoHeaddelegateArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoHeaddelegateAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoHeadroundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type DaoHeadroundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type DaoMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoMemberAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoNorthstrholdArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoNorthstrholdAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoOngoingelctArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type DaoOngoingelctAggregateArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type DaoOpenmultisigArgs = {
  filter?: InputMaybe<MultisigFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MultisigOrder>;
};


export type DaoOpenmultisigAggregateArgs = {
  filter?: InputMaybe<MultisigFilter>;
};


export type DaoOwnerArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoOwnerAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DaoOwnsArgs = {
  filter?: InputMaybe<CalendarFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CalendarOrder>;
};


export type DaoOwnsAggregateArgs = {
  filter?: InputMaybe<CalendarFilter>;
};


export type DaoPassedpropsArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DaoPassedpropsAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DaoPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PayoutOrder>;
};


export type DaoPayoutAggregateArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type DaoPeriodArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};


export type DaoPeriodAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type DaoPlanmanagerArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PlanManagerOrder>;
};


export type DaoPlanmanagerAggregateArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
};


export type DaoPreviouselctArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type DaoPreviouselctAggregateArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type DaoProposalArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DaoProposalAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DaoQuestcompleArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QuestcompleOrder>;
};


export type DaoQuestcompleAggregateArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
};


export type DaoQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QueststartOrder>;
};


export type DaoQueststartAggregateArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type DaoRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<RoleOrder>;
};


export type DaoRoleAggregateArgs = {
  filter?: InputMaybe<RoleFilter>;
};


export type DaoRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type DaoRoundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type DaoSalarybandArgs = {
  filter?: InputMaybe<SalarybandFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SalarybandOrder>;
};


export type DaoSalarybandAggregateArgs = {
  filter?: InputMaybe<SalarybandFilter>;
};


export type DaoSettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SettingsOrder>;
};


export type DaoSettingsAggregateArgs = {
  filter?: InputMaybe<SettingsFilter>;
};


export type DaoStagingpropArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DaoStagingpropAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DaoStartArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};


export type DaoStartAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type DaoSuspendedArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DaoSuspendedAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DaoTreasuryArgs = {
  filter?: InputMaybe<TreasuryFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TreasuryOrder>;
};


export type DaoTreasuryAggregateArgs = {
  filter?: InputMaybe<TreasuryFilter>;
};


export type DaoUeElectionArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type DaoUeElectionAggregateArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type DaoUeOngoingArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type DaoUeOngoingAggregateArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type DaoUePreviousArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type DaoUePreviousAggregateArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type DaoUeUpcomingArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type DaoUeUpcomingAggregateArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type DaoUpcomingelctArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type DaoUpcomingelctAggregateArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type DaoVotableArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DaoVotableAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DaoVoterArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type DaoVoterAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};

export type DaoAggregateResult = {
  __typename?: 'DaoAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_daoName_nMax?: Maybe<Scalars['String']['output']>;
  details_daoName_nMin?: Maybe<Scalars['String']['output']>;
  details_daoType_sMax?: Maybe<Scalars['String']['output']>;
  details_daoType_sMin?: Maybe<Scalars['String']['output']>;
  details_isWaitingEcosystem_iAvg?: Maybe<Scalars['Float']['output']>;
  details_isWaitingEcosystem_iMax?: Maybe<Scalars['Int64']['output']>;
  details_isWaitingEcosystem_iMin?: Maybe<Scalars['Int64']['output']>;
  details_isWaitingEcosystem_iSum?: Maybe<Scalars['Int64']['output']>;
  details_unusedField_nMax?: Maybe<Scalars['String']['output']>;
  details_unusedField_nMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_nMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_nMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type DaoDraft = Document & {
  __typename?: 'DaoDraft';
  anchorparent?: Maybe<Array<Dao>>;
  anchorparentAggregate?: Maybe<DaoAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_daoName_n?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  settings?: Maybe<Array<Settings>>;
  settingsAggregate?: Maybe<SettingsAggregateResult>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type DaoDraftAnchorparentArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type DaoDraftAnchorparentAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type DaoDraftSettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SettingsOrder>;
};


export type DaoDraftSettingsAggregateArgs = {
  filter?: InputMaybe<SettingsFilter>;
};

export type DaoDraftAggregateResult = {
  __typename?: 'DaoDraftAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_daoName_nMax?: Maybe<Scalars['String']['output']>;
  details_daoName_nMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type DaoDraftFilter = {
  and?: InputMaybe<Array<InputMaybe<DaoDraftFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_daoName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<DaoDraftHasFilter>>>;
  not?: InputMaybe<DaoDraftFilter>;
  or?: InputMaybe<Array<InputMaybe<DaoDraftFilter>>>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum DaoDraftHasFilter {
  Anchorparent = 'anchorparent',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoNameN = 'details_daoName_n',
  DocId = 'docId',
  Settings = 'settings',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type DaoDraftOrder = {
  asc?: InputMaybe<DaoDraftOrderable>;
  desc?: InputMaybe<DaoDraftOrderable>;
  then?: InputMaybe<DaoDraftOrder>;
};

export enum DaoDraftOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoNameN = 'details_daoName_n',
  DocId = 'docId',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type DaoDraftPatch = {
  anchorparent?: InputMaybe<Array<DaoRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_daoName_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  settings?: InputMaybe<Array<SettingsRef>>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DaoDraftRef = {
  anchorparent?: InputMaybe<Array<DaoRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_daoName_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  settings?: InputMaybe<Array<SettingsRef>>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DaoFilter = {
  and?: InputMaybe<Array<InputMaybe<DaoFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_daoName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_daoType_s?: InputMaybe<StringRegExpFilter>;
  details_isWaitingEcosystem_i?: InputMaybe<Int64Filter>;
  details_unusedField_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<DaoHasFilter>>>;
  not?: InputMaybe<DaoFilter>;
  or?: InputMaybe<Array<InputMaybe<DaoFilter>>>;
  system_nodeLabel_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum DaoHasFilter {
  Admin = 'admin',
  Alert = 'alert',
  Anchorchild = 'anchorchild',
  Anchorparent = 'anchorparent',
  Applicant = 'applicant',
  Badge = 'badge',
  Calendar = 'calendar',
  Chiefdelegate = 'chiefdelegate',
  Chiefround = 'chiefround',
  Childdraft = 'childdraft',
  Circle = 'circle',
  Closedprops = 'closedprops',
  Commember = 'commember',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Current = 'current',
  Delegate = 'delegate',
  DetailsDaoNameN = 'details_daoName_n',
  DetailsDaoTypeS = 'details_daoType_s',
  DetailsIsWaitingEcosystemI = 'details_isWaitingEcosystem_i',
  DetailsUnusedFieldN = 'details_unusedField_n',
  DocId = 'docId',
  Election = 'election',
  End = 'end',
  Enroller = 'enroller',
  Failedprops = 'failedprops',
  Headdelegate = 'headdelegate',
  Headround = 'headround',
  Member = 'member',
  Northstrhold = 'northstrhold',
  Ongoingelct = 'ongoingelct',
  Openmultisig = 'openmultisig',
  Owner = 'owner',
  Owns = 'owns',
  Passedprops = 'passedprops',
  Payout = 'payout',
  Period = 'period',
  Planmanager = 'planmanager',
  Previouselct = 'previouselct',
  Proposal = 'proposal',
  Questcomple = 'questcomple',
  Queststart = 'queststart',
  Role = 'role',
  Round = 'round',
  Salaryband = 'salaryband',
  Settings = 'settings',
  Stagingprop = 'stagingprop',
  Start = 'start',
  Suspended = 'suspended',
  SystemNodeLabelN = 'system_nodeLabel_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Treasury = 'treasury',
  Type = 'type',
  UeElection = 'ueElection',
  UeOngoing = 'ueOngoing',
  UePrevious = 'uePrevious',
  UeUpcoming = 'ueUpcoming',
  Upcomingelct = 'upcomingelct',
  UpdatedDate = 'updatedDate',
  Votable = 'votable',
  Voter = 'voter'
}

export type DaoOrder = {
  asc?: InputMaybe<DaoOrderable>;
  desc?: InputMaybe<DaoOrderable>;
  then?: InputMaybe<DaoOrder>;
};

export enum DaoOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoNameN = 'details_daoName_n',
  DetailsDaoTypeS = 'details_daoType_s',
  DetailsIsWaitingEcosystemI = 'details_isWaitingEcosystem_i',
  DetailsUnusedFieldN = 'details_unusedField_n',
  DocId = 'docId',
  SystemNodeLabelN = 'system_nodeLabel_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type DaoPatch = {
  admin?: InputMaybe<Array<MemberRef>>;
  alert?: InputMaybe<Array<AlertRef>>;
  anchorchild?: InputMaybe<Array<DaoRef>>;
  anchorparent?: InputMaybe<Array<DaoRef>>;
  applicant?: InputMaybe<Array<MemberRef>>;
  badge?: InputMaybe<Array<BadgeRef>>;
  calendar?: InputMaybe<Array<CalendarRef>>;
  chiefdelegate?: InputMaybe<Array<MemberRef>>;
  chiefround?: InputMaybe<Array<ElectnRoundRef>>;
  childdraft?: InputMaybe<Array<DaoDraftRef>>;
  circle?: InputMaybe<Array<CircleRef>>;
  closedprops?: InputMaybe<Array<DocumentRef>>;
  commember?: InputMaybe<Array<MemberRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  current?: InputMaybe<Array<PeriodRef>>;
  delegate?: InputMaybe<Array<MemberRef>>;
  details_daoName_n?: InputMaybe<Scalars['String']['input']>;
  details_daoType_s?: InputMaybe<Scalars['String']['input']>;
  details_isWaitingEcosystem_i?: InputMaybe<Scalars['Int64']['input']>;
  details_unusedField_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  election?: InputMaybe<Array<UpvtElectnRef>>;
  end?: InputMaybe<Array<PeriodRef>>;
  enroller?: InputMaybe<Array<MemberRef>>;
  failedprops?: InputMaybe<Array<DocumentRef>>;
  headdelegate?: InputMaybe<Array<MemberRef>>;
  headround?: InputMaybe<Array<ElectnRoundRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  northstrhold?: InputMaybe<Array<MemberRef>>;
  ongoingelct?: InputMaybe<Array<UpvtElectnRef>>;
  openmultisig?: InputMaybe<Array<MultisigRef>>;
  owner?: InputMaybe<Array<MemberRef>>;
  owns?: InputMaybe<Array<CalendarRef>>;
  passedprops?: InputMaybe<Array<DocumentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  period?: InputMaybe<Array<PeriodRef>>;
  planmanager?: InputMaybe<Array<PlanManagerRef>>;
  previouselct?: InputMaybe<Array<UpvtElectnRef>>;
  proposal?: InputMaybe<Array<DocumentRef>>;
  questcomple?: InputMaybe<Array<QuestcompleRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  round?: InputMaybe<Array<ElectnRoundRef>>;
  salaryband?: InputMaybe<Array<SalarybandRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  stagingprop?: InputMaybe<Array<DocumentRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  suspended?: InputMaybe<Array<DocumentRef>>;
  system_nodeLabel_n?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  treasury?: InputMaybe<Array<TreasuryRef>>;
  type?: InputMaybe<Scalars['String']['input']>;
  ueElection?: InputMaybe<Array<UpvtElectnRef>>;
  ueOngoing?: InputMaybe<Array<UpvtElectnRef>>;
  uePrevious?: InputMaybe<Array<UpvtElectnRef>>;
  ueUpcoming?: InputMaybe<Array<UpvtElectnRef>>;
  upcomingelct?: InputMaybe<Array<UpvtElectnRef>>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  votable?: InputMaybe<Array<DocumentRef>>;
  voter?: InputMaybe<Array<MemberRef>>;
};

export type DaoRef = {
  admin?: InputMaybe<Array<MemberRef>>;
  alert?: InputMaybe<Array<AlertRef>>;
  anchorchild?: InputMaybe<Array<DaoRef>>;
  anchorparent?: InputMaybe<Array<DaoRef>>;
  applicant?: InputMaybe<Array<MemberRef>>;
  badge?: InputMaybe<Array<BadgeRef>>;
  calendar?: InputMaybe<Array<CalendarRef>>;
  chiefdelegate?: InputMaybe<Array<MemberRef>>;
  chiefround?: InputMaybe<Array<ElectnRoundRef>>;
  childdraft?: InputMaybe<Array<DaoDraftRef>>;
  circle?: InputMaybe<Array<CircleRef>>;
  closedprops?: InputMaybe<Array<DocumentRef>>;
  commember?: InputMaybe<Array<MemberRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  current?: InputMaybe<Array<PeriodRef>>;
  delegate?: InputMaybe<Array<MemberRef>>;
  details_daoName_n?: InputMaybe<Scalars['String']['input']>;
  details_daoType_s?: InputMaybe<Scalars['String']['input']>;
  details_isWaitingEcosystem_i?: InputMaybe<Scalars['Int64']['input']>;
  details_unusedField_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  election?: InputMaybe<Array<UpvtElectnRef>>;
  end?: InputMaybe<Array<PeriodRef>>;
  enroller?: InputMaybe<Array<MemberRef>>;
  failedprops?: InputMaybe<Array<DocumentRef>>;
  headdelegate?: InputMaybe<Array<MemberRef>>;
  headround?: InputMaybe<Array<ElectnRoundRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  northstrhold?: InputMaybe<Array<MemberRef>>;
  ongoingelct?: InputMaybe<Array<UpvtElectnRef>>;
  openmultisig?: InputMaybe<Array<MultisigRef>>;
  owner?: InputMaybe<Array<MemberRef>>;
  owns?: InputMaybe<Array<CalendarRef>>;
  passedprops?: InputMaybe<Array<DocumentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  period?: InputMaybe<Array<PeriodRef>>;
  planmanager?: InputMaybe<Array<PlanManagerRef>>;
  previouselct?: InputMaybe<Array<UpvtElectnRef>>;
  proposal?: InputMaybe<Array<DocumentRef>>;
  questcomple?: InputMaybe<Array<QuestcompleRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  round?: InputMaybe<Array<ElectnRoundRef>>;
  salaryband?: InputMaybe<Array<SalarybandRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  stagingprop?: InputMaybe<Array<DocumentRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  suspended?: InputMaybe<Array<DocumentRef>>;
  system_nodeLabel_n?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  treasury?: InputMaybe<Array<TreasuryRef>>;
  type?: InputMaybe<Scalars['String']['input']>;
  ueElection?: InputMaybe<Array<UpvtElectnRef>>;
  ueOngoing?: InputMaybe<Array<UpvtElectnRef>>;
  uePrevious?: InputMaybe<Array<UpvtElectnRef>>;
  ueUpcoming?: InputMaybe<Array<UpvtElectnRef>>;
  upcomingelct?: InputMaybe<Array<UpvtElectnRef>>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  votable?: InputMaybe<Array<DocumentRef>>;
  voter?: InputMaybe<Array<MemberRef>>;
};

export type DateTimeFilter = {
  between?: InputMaybe<DateTimeRange>;
  eq?: InputMaybe<Scalars['DateTime']['input']>;
  ge?: InputMaybe<Scalars['DateTime']['input']>;
  gt?: InputMaybe<Scalars['DateTime']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['DateTime']['input']>>>;
  le?: InputMaybe<Scalars['DateTime']['input']>;
  lt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DateTimeRange = {
  max: Scalars['DateTime']['input'];
  min: Scalars['DateTime']['input'];
};

export type DeleteAlertPayload = {
  __typename?: 'DeleteAlertPayload';
  alert?: Maybe<Array<Maybe<Alert>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteAlertPayloadAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AlertOrder>;
};

export type DeleteAssignbadgePayload = {
  __typename?: 'DeleteAssignbadgePayload';
  assignbadge?: Maybe<Array<Maybe<Assignbadge>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteAssignbadgePayloadAssignbadgeArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignbadgeOrder>;
};

export type DeleteAssignmentPayload = {
  __typename?: 'DeleteAssignmentPayload';
  assignment?: Maybe<Array<Maybe<Assignment>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteAssignmentPayloadAssignmentArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignmentOrder>;
};

export type DeleteAttestationPayload = {
  __typename?: 'DeleteAttestationPayload';
  attestation?: Maybe<Array<Maybe<Attestation>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteAttestationPayloadAttestationArgs = {
  filter?: InputMaybe<AttestationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AttestationOrder>;
};

export type DeleteBadgePayload = {
  __typename?: 'DeleteBadgePayload';
  badge?: Maybe<Array<Maybe<Badge>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteBadgePayloadBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BadgeOrder>;
};

export type DeleteBalancePayload = {
  __typename?: 'DeleteBalancePayload';
  balance?: Maybe<Array<Maybe<Balance>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteBalancePayloadBalanceArgs = {
  filter?: InputMaybe<BalanceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BalanceOrder>;
};

export type DeleteBillingInfoPayload = {
  __typename?: 'DeleteBillingInfoPayload';
  billingInfo?: Maybe<Array<Maybe<BillingInfo>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteBillingInfoPayloadBillingInfoArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BillingInfoOrder>;
};

export type DeleteBudgetPayload = {
  __typename?: 'DeleteBudgetPayload';
  budget?: Maybe<Array<Maybe<Budget>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteBudgetPayloadBudgetArgs = {
  filter?: InputMaybe<BudgetFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BudgetOrder>;
};

export type DeleteCalendarPayload = {
  __typename?: 'DeleteCalendarPayload';
  calendar?: Maybe<Array<Maybe<Calendar>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteCalendarPayloadCalendarArgs = {
  filter?: InputMaybe<CalendarFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CalendarOrder>;
};

export type DeleteCirclePayload = {
  __typename?: 'DeleteCirclePayload';
  circle?: Maybe<Array<Maybe<Circle>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteCirclePayloadCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CircleOrder>;
};

export type DeleteCmntSectionPayload = {
  __typename?: 'DeleteCmntSectionPayload';
  cmntSection?: Maybe<Array<Maybe<CmntSection>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteCmntSectionPayloadCmntSectionArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CmntSectionOrder>;
};

export type DeleteCommentPayload = {
  __typename?: 'DeleteCommentPayload';
  comment?: Maybe<Array<Maybe<Comment>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteCommentPayloadCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CommentOrder>;
};

export type DeleteCursorPayload = {
  __typename?: 'DeleteCursorPayload';
  cursor?: Maybe<Array<Maybe<Cursor>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteCursorPayloadCursorArgs = {
  filter?: InputMaybe<CursorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CursorOrder>;
};

export type DeleteDaoDraftPayload = {
  __typename?: 'DeleteDaoDraftPayload';
  daoDraft?: Maybe<Array<Maybe<DaoDraft>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteDaoDraftPayloadDaoDraftArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoDraftOrder>;
};

export type DeleteDaoPayload = {
  __typename?: 'DeleteDaoPayload';
  dao?: Maybe<Array<Maybe<Dao>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteDaoPayloadDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};

export type DeleteDhoPayload = {
  __typename?: 'DeleteDhoPayload';
  dho?: Maybe<Array<Maybe<Dho>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteDhoPayloadDhoArgs = {
  filter?: InputMaybe<DhoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DhoOrder>;
};

export type DeleteDoccacheConfigPayload = {
  __typename?: 'DeleteDoccacheConfigPayload';
  doccacheConfig?: Maybe<Array<Maybe<DoccacheConfig>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteDoccacheConfigPayloadDoccacheConfigArgs = {
  filter?: InputMaybe<DoccacheConfigFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DoccacheConfigOrder>;
};

export type DeleteDocumentPayload = {
  __typename?: 'DeleteDocumentPayload';
  document?: Maybe<Array<Maybe<Document>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteDocumentPayloadDocumentArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};

export type DeleteEditPayload = {
  __typename?: 'DeleteEditPayload';
  edit?: Maybe<Array<Maybe<Edit>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteEditPayloadEditArgs = {
  filter?: InputMaybe<EditFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<EditOrder>;
};

export type DeleteElectnGroupPayload = {
  __typename?: 'DeleteElectnGroupPayload';
  electnGroup?: Maybe<Array<Maybe<ElectnGroup>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteElectnGroupPayloadElectnGroupArgs = {
  filter?: InputMaybe<ElectnGroupFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnGroupOrder>;
};

export type DeleteElectnRoundPayload = {
  __typename?: 'DeleteElectnRoundPayload';
  electnRound?: Maybe<Array<Maybe<ElectnRound>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteElectnRoundPayloadElectnRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};

export type DeleteEventPayload = {
  __typename?: 'DeleteEventPayload';
  event?: Maybe<Array<Maybe<Event>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteEventPayloadEventArgs = {
  filter?: InputMaybe<EventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<EventOrder>;
};

export type DeleteMemberPayload = {
  __typename?: 'DeleteMemberPayload';
  member?: Maybe<Array<Maybe<Member>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteMemberPayloadMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};

export type DeleteMemoPayload = {
  __typename?: 'DeleteMemoPayload';
  memo?: Maybe<Array<Maybe<Memo>>>;
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteMemoPayloadMemoArgs = {
  filter?: InputMaybe<MemoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemoOrder>;
};

export type DeleteMsigInfoPayload = {
  __typename?: 'DeleteMsigInfoPayload';
  msg?: Maybe<Scalars['String']['output']>;
  msigInfo?: Maybe<Array<Maybe<MsigInfo>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteMsigInfoPayloadMsigInfoArgs = {
  filter?: InputMaybe<MsigInfoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MsigInfoOrder>;
};

export type DeleteMultisigPayload = {
  __typename?: 'DeleteMultisigPayload';
  msg?: Maybe<Scalars['String']['output']>;
  multisig?: Maybe<Array<Maybe<Multisig>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteMultisigPayloadMultisigArgs = {
  filter?: InputMaybe<MultisigFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MultisigOrder>;
};

export type DeleteNotificationPayload = {
  __typename?: 'DeleteNotificationPayload';
  msg?: Maybe<Scalars['String']['output']>;
  notification?: Maybe<Array<Maybe<Notification>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type DeleteNotificationPayloadNotificationArgs = {
  filter?: InputMaybe<NotificationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<NotificationOrder>;
};

export type DeletePaymentPayload = {
  __typename?: 'DeletePaymentPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  payment?: Maybe<Array<Maybe<Payment>>>;
};


export type DeletePaymentPayloadPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PaymentOrder>;
};

export type DeletePayoutPayload = {
  __typename?: 'DeletePayoutPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  payout?: Maybe<Array<Maybe<Payout>>>;
};


export type DeletePayoutPayloadPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PayoutOrder>;
};

export type DeletePeriodPayload = {
  __typename?: 'DeletePeriodPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  period?: Maybe<Array<Maybe<Period>>>;
};


export type DeletePeriodPayloadPeriodArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};

export type DeletePlanManagerPayload = {
  __typename?: 'DeletePlanManagerPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  planManager?: Maybe<Array<Maybe<PlanManager>>>;
};


export type DeletePlanManagerPayloadPlanManagerArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PlanManagerOrder>;
};

export type DeletePolicyPayload = {
  __typename?: 'DeletePolicyPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  policy?: Maybe<Array<Maybe<Policy>>>;
};


export type DeletePolicyPayloadPolicyArgs = {
  filter?: InputMaybe<PolicyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PolicyOrder>;
};

export type DeletePollPayload = {
  __typename?: 'DeletePollPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  poll?: Maybe<Array<Maybe<Poll>>>;
};


export type DeletePollPayloadPollArgs = {
  filter?: InputMaybe<PollFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PollOrder>;
};

export type DeletePriceOfferPayload = {
  __typename?: 'DeletePriceOfferPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  priceOffer?: Maybe<Array<Maybe<PriceOffer>>>;
};


export type DeletePriceOfferPayloadPriceOfferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PriceOfferOrder>;
};

export type DeletePricingPlanPayload = {
  __typename?: 'DeletePricingPlanPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  pricingPlan?: Maybe<Array<Maybe<PricingPlan>>>;
};


export type DeletePricingPlanPayloadPricingPlanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PricingPlanOrder>;
};

export type DeleteQuestcomplePayload = {
  __typename?: 'DeleteQuestcomplePayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  questcomple?: Maybe<Array<Maybe<Questcomple>>>;
};


export type DeleteQuestcomplePayloadQuestcompleArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QuestcompleOrder>;
};

export type DeleteQuestcompletPayload = {
  __typename?: 'DeleteQuestcompletPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  questcomplet?: Maybe<Array<Maybe<Questcomplet>>>;
};


export type DeleteQuestcompletPayloadQuestcompletArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QuestcompletOrder>;
};

export type DeleteQueststartPayload = {
  __typename?: 'DeleteQueststartPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  queststart?: Maybe<Array<Maybe<Queststart>>>;
};


export type DeleteQueststartPayloadQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QueststartOrder>;
};

export type DeleteReactionPayload = {
  __typename?: 'DeleteReactionPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  reaction?: Maybe<Array<Maybe<Reaction>>>;
};


export type DeleteReactionPayloadReactionArgs = {
  filter?: InputMaybe<ReactionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ReactionOrder>;
};

export type DeleteRedemptionPayload = {
  __typename?: 'DeleteRedemptionPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  redemption?: Maybe<Array<Maybe<Redemption>>>;
};


export type DeleteRedemptionPayloadRedemptionArgs = {
  filter?: InputMaybe<RedemptionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<RedemptionOrder>;
};

export type DeleteRolePayload = {
  __typename?: 'DeleteRolePayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  role?: Maybe<Array<Maybe<Role>>>;
};


export type DeleteRolePayloadRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<RoleOrder>;
};

export type DeleteSalarybandPayload = {
  __typename?: 'DeleteSalarybandPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  salaryband?: Maybe<Array<Maybe<Salaryband>>>;
};


export type DeleteSalarybandPayloadSalarybandArgs = {
  filter?: InputMaybe<SalarybandFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SalarybandOrder>;
};

export type DeleteSettingsPayload = {
  __typename?: 'DeleteSettingsPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  settings?: Maybe<Array<Maybe<Settings>>>;
};


export type DeleteSettingsPayloadSettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SettingsOrder>;
};

export type DeleteSuspendPayload = {
  __typename?: 'DeleteSuspendPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  suspend?: Maybe<Array<Maybe<Suspend>>>;
};


export type DeleteSuspendPayloadSuspendArgs = {
  filter?: InputMaybe<SuspendFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SuspendOrder>;
};

export type DeleteTimesharePayload = {
  __typename?: 'DeleteTimesharePayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  timeshare?: Maybe<Array<Maybe<Timeshare>>>;
};


export type DeleteTimesharePayloadTimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TimeshareOrder>;
};

export type DeleteTreasuryPayload = {
  __typename?: 'DeleteTreasuryPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  treasury?: Maybe<Array<Maybe<Treasury>>>;
};


export type DeleteTreasuryPayloadTreasuryArgs = {
  filter?: InputMaybe<TreasuryFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TreasuryOrder>;
};

export type DeleteTrsyPaymentPayload = {
  __typename?: 'DeleteTrsyPaymentPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  trsyPayment?: Maybe<Array<Maybe<TrsyPayment>>>;
};


export type DeleteTrsyPaymentPayloadTrsyPaymentArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TrsyPaymentOrder>;
};

export type DeleteTypeVersionPayload = {
  __typename?: 'DeleteTypeVersionPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  typeVersion?: Maybe<Array<Maybe<TypeVersion>>>;
};


export type DeleteTypeVersionPayloadTypeVersionArgs = {
  filter?: InputMaybe<TypeVersionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TypeVersionOrder>;
};

export type DeleteUpvtElectnPayload = {
  __typename?: 'DeleteUpvtElectnPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  upvtElectn?: Maybe<Array<Maybe<UpvtElectn>>>;
};


export type DeleteUpvtElectnPayloadUpvtElectnArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtElectnOrder>;
};

export type DeleteUpvtVotePayload = {
  __typename?: 'DeleteUpvtVotePayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  upvtVote?: Maybe<Array<Maybe<UpvtVote>>>;
};


export type DeleteUpvtVotePayloadUpvtVoteArgs = {
  filter?: InputMaybe<UpvtVoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtVoteOrder>;
};

export type DeleteUserPayload = {
  __typename?: 'DeleteUserPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  user?: Maybe<Array<Maybe<User>>>;
};


export type DeleteUserPayloadUserArgs = {
  filter?: InputMaybe<UserFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UserOrder>;
};

export type DeleteVotablePayload = {
  __typename?: 'DeleteVotablePayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  votable?: Maybe<Array<Maybe<Votable>>>;
};


export type DeleteVotablePayloadVotableArgs = {
  filter?: InputMaybe<VotableFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VotableOrder>;
};

export type DeleteVoteGroupPayload = {
  __typename?: 'DeleteVoteGroupPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  voteGroup?: Maybe<Array<Maybe<VoteGroup>>>;
};


export type DeleteVoteGroupPayloadVoteGroupArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteGroupOrder>;
};

export type DeleteVotePayload = {
  __typename?: 'DeleteVotePayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  vote?: Maybe<Array<Maybe<Vote>>>;
};


export type DeleteVotePayloadVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};

export type DeleteVoteTallyPayload = {
  __typename?: 'DeleteVoteTallyPayload';
  msg?: Maybe<Scalars['String']['output']>;
  numUids?: Maybe<Scalars['Int']['output']>;
  voteTally?: Maybe<Array<Maybe<VoteTally>>>;
};


export type DeleteVoteTallyPayloadVoteTallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};

export type DgraphDefault = {
  value?: InputMaybe<Scalars['String']['input']>;
};

export enum DgraphIndex {
  Bool = 'bool',
  Day = 'day',
  Exact = 'exact',
  Float = 'float',
  Fulltext = 'fulltext',
  Geo = 'geo',
  Hash = 'hash',
  Hnsw = 'hnsw',
  Hour = 'hour',
  Int = 'int',
  Int64 = 'int64',
  Month = 'month',
  Regexp = 'regexp',
  Term = 'term',
  Trigram = 'trigram',
  Year = 'year'
}

export type Dho = Document & {
  __typename?: 'Dho';
  Cx3K2?: Maybe<Array<Dao>>;
  Cx3K2Aggregate?: Maybe<DaoAggregateResult>;
  Ele2?: Maybe<Array<Dao>>;
  Ele2Aggregate?: Maybe<DaoAggregateResult>;
  L2Nep42?: Maybe<Array<Dao>>;
  L2Nep42Aggregate?: Maybe<DaoAggregateResult>;
  adminbdg?: Maybe<Array<Badge>>;
  adminbdgAggregate?: Maybe<BadgeAggregateResult>;
  alert?: Maybe<Array<Alert>>;
  alertAggregate?: Maybe<AlertAggregateResult>;
  applicant?: Maybe<Array<Member>>;
  applicantAggregate?: Maybe<MemberAggregateResult>;
  badge?: Maybe<Array<Badge>>;
  badgeAggregate?: Maybe<BadgeAggregateResult>;
  chiefdelegate?: Maybe<Array<Badge>>;
  chiefdelegateAggregate?: Maybe<BadgeAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  defbadge?: Maybe<Array<Badge>>;
  defbadgeAggregate?: Maybe<BadgeAggregateResult>;
  defband?: Maybe<Array<Salaryband>>;
  defbandAggregate?: Maybe<SalarybandAggregateResult>;
  defpriceplan?: Maybe<Array<PricingPlan>>;
  defpriceplanAggregate?: Maybe<PricingPlanAggregateResult>;
  defrole?: Maybe<Array<Document>>;
  defroleAggregate?: Maybe<DocumentAggregateResult>;
  delegate?: Maybe<Array<Badge>>;
  delegateAggregate?: Maybe<BadgeAggregateResult>;
  details_rootNode_n: Scalars['String']['output'];
  docId: Scalars['String']['output'];
  ecopriceplan?: Maybe<Array<PricingPlan>>;
  ecopriceplanAggregate?: Maybe<PricingPlanAggregateResult>;
  enrollerbdg?: Maybe<Array<Badge>>;
  enrollerbdgAggregate?: Maybe<BadgeAggregateResult>;
  failedprops?: Maybe<Array<Document>>;
  failedpropsAggregate?: Maybe<DocumentAggregateResult>;
  headdelegate?: Maybe<Array<Badge>>;
  headdelegateAggregate?: Maybe<BadgeAggregateResult>;
  lunar?: Maybe<Array<Calendar>>;
  lunarAggregate?: Maybe<CalendarAggregateResult>;
  member?: Maybe<Array<Member>>;
  memberAggregate?: Maybe<MemberAggregateResult>;
  passedprops?: Maybe<Array<Document>>;
  passedpropsAggregate?: Maybe<DocumentAggregateResult>;
  payout?: Maybe<Array<Payout>>;
  payoutAggregate?: Maybe<PayoutAggregateResult>;
  pricingplan?: Maybe<Array<PricingPlan>>;
  pricingplanAggregate?: Maybe<PricingPlanAggregateResult>;
  proposal?: Maybe<Array<Document>>;
  proposalAggregate?: Maybe<DocumentAggregateResult>;
  role?: Maybe<Array<Role>>;
  roleAggregate?: Maybe<RoleAggregateResult>;
  settings?: Maybe<Array<Settings>>;
  settingsAggregate?: Maybe<SettingsAggregateResult>;
  start?: Maybe<Array<Period>>;
  startAggregate?: Maybe<PeriodAggregateResult>;
  suspended?: Maybe<Array<Assignment>>;
  suspendedAggregate?: Maybe<AssignmentAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  weekly?: Maybe<Array<Calendar>>;
  weeklyAggregate?: Maybe<CalendarAggregateResult>;
};


export type DhoCx3K2Args = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type DhoCx3K2AggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type DhoEle2Args = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type DhoEle2AggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type DhoL2Nep42Args = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type DhoL2Nep42AggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type DhoAdminbdgArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BadgeOrder>;
};


export type DhoAdminbdgAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type DhoAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AlertOrder>;
};


export type DhoAlertAggregateArgs = {
  filter?: InputMaybe<AlertFilter>;
};


export type DhoApplicantArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type DhoApplicantAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DhoBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BadgeOrder>;
};


export type DhoBadgeAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type DhoChiefdelegateArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BadgeOrder>;
};


export type DhoChiefdelegateAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type DhoDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type DhoDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type DhoDefbadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BadgeOrder>;
};


export type DhoDefbadgeAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type DhoDefbandArgs = {
  filter?: InputMaybe<SalarybandFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SalarybandOrder>;
};


export type DhoDefbandAggregateArgs = {
  filter?: InputMaybe<SalarybandFilter>;
};


export type DhoDefpriceplanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PricingPlanOrder>;
};


export type DhoDefpriceplanAggregateArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
};


export type DhoDefroleArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DhoDefroleAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DhoDelegateArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BadgeOrder>;
};


export type DhoDelegateAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type DhoEcopriceplanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PricingPlanOrder>;
};


export type DhoEcopriceplanAggregateArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
};


export type DhoEnrollerbdgArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BadgeOrder>;
};


export type DhoEnrollerbdgAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type DhoFailedpropsArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DhoFailedpropsAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DhoHeaddelegateArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BadgeOrder>;
};


export type DhoHeaddelegateAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type DhoLunarArgs = {
  filter?: InputMaybe<CalendarFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CalendarOrder>;
};


export type DhoLunarAggregateArgs = {
  filter?: InputMaybe<CalendarFilter>;
};


export type DhoMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type DhoMemberAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type DhoPassedpropsArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DhoPassedpropsAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DhoPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PayoutOrder>;
};


export type DhoPayoutAggregateArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type DhoPricingplanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PricingPlanOrder>;
};


export type DhoPricingplanAggregateArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
};


export type DhoProposalArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type DhoProposalAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type DhoRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<RoleOrder>;
};


export type DhoRoleAggregateArgs = {
  filter?: InputMaybe<RoleFilter>;
};


export type DhoSettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SettingsOrder>;
};


export type DhoSettingsAggregateArgs = {
  filter?: InputMaybe<SettingsFilter>;
};


export type DhoStartArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};


export type DhoStartAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type DhoSuspendedArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignmentOrder>;
};


export type DhoSuspendedAggregateArgs = {
  filter?: InputMaybe<AssignmentFilter>;
};


export type DhoWeeklyArgs = {
  filter?: InputMaybe<CalendarFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CalendarOrder>;
};


export type DhoWeeklyAggregateArgs = {
  filter?: InputMaybe<CalendarFilter>;
};

export type DhoAggregateResult = {
  __typename?: 'DhoAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_rootNode_nMax?: Maybe<Scalars['String']['output']>;
  details_rootNode_nMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type DhoFilter = {
  and?: InputMaybe<Array<InputMaybe<DhoFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_rootNode_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<DhoHasFilter>>>;
  not?: InputMaybe<DhoFilter>;
  or?: InputMaybe<Array<InputMaybe<DhoFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum DhoHasFilter {
  Cx3K2 = 'Cx3K2',
  Ele2 = 'Ele2',
  L2Nep42 = 'L2Nep42',
  Adminbdg = 'adminbdg',
  Alert = 'alert',
  Applicant = 'applicant',
  Badge = 'badge',
  Chiefdelegate = 'chiefdelegate',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  Defbadge = 'defbadge',
  Defband = 'defband',
  Defpriceplan = 'defpriceplan',
  Defrole = 'defrole',
  Delegate = 'delegate',
  DetailsRootNodeN = 'details_rootNode_n',
  DocId = 'docId',
  Ecopriceplan = 'ecopriceplan',
  Enrollerbdg = 'enrollerbdg',
  Failedprops = 'failedprops',
  Headdelegate = 'headdelegate',
  Lunar = 'lunar',
  Member = 'member',
  Passedprops = 'passedprops',
  Payout = 'payout',
  Pricingplan = 'pricingplan',
  Proposal = 'proposal',
  Role = 'role',
  Settings = 'settings',
  Start = 'start',
  Suspended = 'suspended',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Weekly = 'weekly'
}

export type DhoOrder = {
  asc?: InputMaybe<DhoOrderable>;
  desc?: InputMaybe<DhoOrderable>;
  then?: InputMaybe<DhoOrder>;
};

export enum DhoOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsRootNodeN = 'details_rootNode_n',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type DhoPatch = {
  Cx3K2?: InputMaybe<Array<DaoRef>>;
  Ele2?: InputMaybe<Array<DaoRef>>;
  L2Nep42?: InputMaybe<Array<DaoRef>>;
  adminbdg?: InputMaybe<Array<BadgeRef>>;
  alert?: InputMaybe<Array<AlertRef>>;
  applicant?: InputMaybe<Array<MemberRef>>;
  badge?: InputMaybe<Array<BadgeRef>>;
  chiefdelegate?: InputMaybe<Array<BadgeRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  defbadge?: InputMaybe<Array<BadgeRef>>;
  defband?: InputMaybe<Array<SalarybandRef>>;
  defpriceplan?: InputMaybe<Array<PricingPlanRef>>;
  defrole?: InputMaybe<Array<DocumentRef>>;
  delegate?: InputMaybe<Array<BadgeRef>>;
  details_rootNode_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ecopriceplan?: InputMaybe<Array<PricingPlanRef>>;
  enrollerbdg?: InputMaybe<Array<BadgeRef>>;
  failedprops?: InputMaybe<Array<DocumentRef>>;
  headdelegate?: InputMaybe<Array<BadgeRef>>;
  lunar?: InputMaybe<Array<CalendarRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  passedprops?: InputMaybe<Array<DocumentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  pricingplan?: InputMaybe<Array<PricingPlanRef>>;
  proposal?: InputMaybe<Array<DocumentRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  suspended?: InputMaybe<Array<AssignmentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  weekly?: InputMaybe<Array<CalendarRef>>;
};

export type DhoRef = {
  Cx3K2?: InputMaybe<Array<DaoRef>>;
  Ele2?: InputMaybe<Array<DaoRef>>;
  L2Nep42?: InputMaybe<Array<DaoRef>>;
  adminbdg?: InputMaybe<Array<BadgeRef>>;
  alert?: InputMaybe<Array<AlertRef>>;
  applicant?: InputMaybe<Array<MemberRef>>;
  badge?: InputMaybe<Array<BadgeRef>>;
  chiefdelegate?: InputMaybe<Array<BadgeRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  defbadge?: InputMaybe<Array<BadgeRef>>;
  defband?: InputMaybe<Array<SalarybandRef>>;
  defpriceplan?: InputMaybe<Array<PricingPlanRef>>;
  defrole?: InputMaybe<Array<DocumentRef>>;
  delegate?: InputMaybe<Array<BadgeRef>>;
  details_rootNode_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ecopriceplan?: InputMaybe<Array<PricingPlanRef>>;
  enrollerbdg?: InputMaybe<Array<BadgeRef>>;
  failedprops?: InputMaybe<Array<DocumentRef>>;
  headdelegate?: InputMaybe<Array<BadgeRef>>;
  lunar?: InputMaybe<Array<CalendarRef>>;
  member?: InputMaybe<Array<MemberRef>>;
  passedprops?: InputMaybe<Array<DocumentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  pricingplan?: InputMaybe<Array<PricingPlanRef>>;
  proposal?: InputMaybe<Array<DocumentRef>>;
  role?: InputMaybe<Array<RoleRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  suspended?: InputMaybe<Array<AssignmentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  weekly?: InputMaybe<Array<CalendarRef>>;
};

export type DoccacheConfig = {
  __typename?: 'DoccacheConfig';
  contract: Scalars['String']['output'];
  documentsTable: Scalars['String']['output'];
  edgesTable: Scalars['String']['output'];
  elasticApiKey: Scalars['String']['output'];
  elasticEndpoint: Scalars['String']['output'];
  eosEndpoint: Scalars['String']['output'];
  id: Scalars['String']['output'];
};

export type DoccacheConfigAggregateResult = {
  __typename?: 'DoccacheConfigAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  documentsTableMax?: Maybe<Scalars['String']['output']>;
  documentsTableMin?: Maybe<Scalars['String']['output']>;
  edgesTableMax?: Maybe<Scalars['String']['output']>;
  edgesTableMin?: Maybe<Scalars['String']['output']>;
  elasticApiKeyMax?: Maybe<Scalars['String']['output']>;
  elasticApiKeyMin?: Maybe<Scalars['String']['output']>;
  elasticEndpointMax?: Maybe<Scalars['String']['output']>;
  elasticEndpointMin?: Maybe<Scalars['String']['output']>;
  eosEndpointMax?: Maybe<Scalars['String']['output']>;
  eosEndpointMin?: Maybe<Scalars['String']['output']>;
  idMax?: Maybe<Scalars['String']['output']>;
  idMin?: Maybe<Scalars['String']['output']>;
};

export type DoccacheConfigFilter = {
  and?: InputMaybe<Array<InputMaybe<DoccacheConfigFilter>>>;
  has?: InputMaybe<Array<InputMaybe<DoccacheConfigHasFilter>>>;
  id?: InputMaybe<StringExactFilter>;
  not?: InputMaybe<DoccacheConfigFilter>;
  or?: InputMaybe<Array<InputMaybe<DoccacheConfigFilter>>>;
};

export enum DoccacheConfigHasFilter {
  Contract = 'contract',
  DocumentsTable = 'documentsTable',
  EdgesTable = 'edgesTable',
  ElasticApiKey = 'elasticApiKey',
  ElasticEndpoint = 'elasticEndpoint',
  EosEndpoint = 'eosEndpoint',
  Id = 'id'
}

export type DoccacheConfigOrder = {
  asc?: InputMaybe<DoccacheConfigOrderable>;
  desc?: InputMaybe<DoccacheConfigOrderable>;
  then?: InputMaybe<DoccacheConfigOrder>;
};

export enum DoccacheConfigOrderable {
  Contract = 'contract',
  DocumentsTable = 'documentsTable',
  EdgesTable = 'edgesTable',
  ElasticApiKey = 'elasticApiKey',
  ElasticEndpoint = 'elasticEndpoint',
  EosEndpoint = 'eosEndpoint',
  Id = 'id'
}

export type DoccacheConfigPatch = {
  contract?: InputMaybe<Scalars['String']['input']>;
  documentsTable?: InputMaybe<Scalars['String']['input']>;
  edgesTable?: InputMaybe<Scalars['String']['input']>;
  elasticApiKey?: InputMaybe<Scalars['String']['input']>;
  elasticEndpoint?: InputMaybe<Scalars['String']['input']>;
  eosEndpoint?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type DoccacheConfigRef = {
  contract?: InputMaybe<Scalars['String']['input']>;
  documentsTable?: InputMaybe<Scalars['String']['input']>;
  edgesTable?: InputMaybe<Scalars['String']['input']>;
  elasticApiKey?: InputMaybe<Scalars['String']['input']>;
  elasticEndpoint?: InputMaybe<Scalars['String']['input']>;
  eosEndpoint?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
};

export type Document = {
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  docId: Scalars['String']['output'];
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};

export type DocumentAggregateResult = {
  __typename?: 'DocumentAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type DocumentFilter = {
  and?: InputMaybe<Array<InputMaybe<DocumentFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<DocumentHasFilter>>>;
  not?: InputMaybe<DocumentFilter>;
  or?: InputMaybe<Array<InputMaybe<DocumentFilter>>>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum DocumentHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type DocumentOrder = {
  asc?: InputMaybe<DocumentOrderable>;
  desc?: InputMaybe<DocumentOrderable>;
  then?: InputMaybe<DocumentOrder>;
};

export enum DocumentOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type DocumentPatch = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DocumentRef = {
  docId: Scalars['String']['input'];
};

export type Edit = Document & Votable & {
  __typename?: 'Edit';
  ballotOptions_abstain_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']['output']>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']['output']>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_assignee_n?: Maybe<Scalars['String']['output']>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotDescription_s?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_a?: Maybe<Scalars['String']['output']>;
  details_ballotTitle_s?: Maybe<Scalars['String']['output']>;
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_i?: Maybe<Scalars['Int64']['output']>;
  details_description_s?: Maybe<Scalars['String']['output']>;
  details_originalDocument_c?: Maybe<Scalars['String']['output']>;
  details_originalDocument_i?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_i?: Maybe<Scalars['Int64']['output']>;
  details_role_c?: Maybe<Scalars['String']['output']>;
  details_startPeriod_c?: Maybe<Scalars['String']['output']>;
  details_state_s?: Maybe<Scalars['String']['output']>;
  details_timeShareX100_i?: Maybe<Scalars['Int64']['output']>;
  details_title_s?: Maybe<Scalars['String']['output']>;
  details_url_s?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  original?: Maybe<Array<Document>>;
  originalAggregate?: Maybe<DocumentAggregateResult>;
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  system_ballotId_n?: Maybe<Scalars['String']['output']>;
  system_clientVersion_s?: Maybe<Scalars['String']['output']>;
  system_commentName_n?: Maybe<Scalars['String']['output']>;
  system_contractVersion_s?: Maybe<Scalars['String']['output']>;
  system_description_s?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type EditCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type EditCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type EditDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type EditDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type EditOriginalArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type EditOriginalAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type EditOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type EditOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type EditVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type EditVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type EditVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type EditVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type EditAggregateResult = {
  __typename?: 'EditAggregateResult';
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']['output']>;
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']['output']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_assignee_nMax?: Maybe<Scalars['String']['output']>;
  details_assignee_nMin?: Maybe<Scalars['String']['output']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotDescription_sMax?: Maybe<Scalars['String']['output']>;
  details_ballotDescription_sMin?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']['output']>;
  details_ballotTitle_sMax?: Maybe<Scalars['String']['output']>;
  details_ballotTitle_sMin?: Maybe<Scalars['String']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_deferredPercX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_description_sMax?: Maybe<Scalars['String']['output']>;
  details_description_sMin?: Maybe<Scalars['String']['output']>;
  details_originalDocument_cMax?: Maybe<Scalars['String']['output']>;
  details_originalDocument_cMin?: Maybe<Scalars['String']['output']>;
  details_originalDocument_iAvg?: Maybe<Scalars['Float']['output']>;
  details_originalDocument_iMax?: Maybe<Scalars['Int64']['output']>;
  details_originalDocument_iMin?: Maybe<Scalars['Int64']['output']>;
  details_originalDocument_iSum?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iAvg?: Maybe<Scalars['Float']['output']>;
  details_periodCount_iMax?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iMin?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iSum?: Maybe<Scalars['Int64']['output']>;
  details_role_cMax?: Maybe<Scalars['String']['output']>;
  details_role_cMin?: Maybe<Scalars['String']['output']>;
  details_startPeriod_cMax?: Maybe<Scalars['String']['output']>;
  details_startPeriod_cMin?: Maybe<Scalars['String']['output']>;
  details_state_sMax?: Maybe<Scalars['String']['output']>;
  details_state_sMin?: Maybe<Scalars['String']['output']>;
  details_timeShareX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_timeShareX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_timeShareX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_timeShareX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_title_sMax?: Maybe<Scalars['String']['output']>;
  details_title_sMin?: Maybe<Scalars['String']['output']>;
  details_url_sMax?: Maybe<Scalars['String']['output']>;
  details_url_sMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_ballotId_nMax?: Maybe<Scalars['String']['output']>;
  system_ballotId_nMin?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_commentName_nMax?: Maybe<Scalars['String']['output']>;
  system_commentName_nMin?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_description_sMax?: Maybe<Scalars['String']['output']>;
  system_description_sMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type EditFilter = {
  and?: InputMaybe<Array<InputMaybe<EditFilter>>>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_assignee_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotDescription_s?: InputMaybe<StringRegExpFilter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_ballotTitle_s?: InputMaybe<StringRegExpFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_deferredPercX100_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_originalDocument_c?: InputMaybe<StringExactFilter>;
  details_originalDocument_i?: InputMaybe<Int64Filter>;
  details_periodCount_i?: InputMaybe<Int64Filter>;
  details_role_c?: InputMaybe<StringExactFilter>;
  details_startPeriod_c?: InputMaybe<StringExactFilter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_timeShareX100_i?: InputMaybe<Int64Filter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_url_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<EditHasFilter>>>;
  not?: InputMaybe<EditFilter>;
  or?: InputMaybe<Array<InputMaybe<EditFilter>>>;
  system_ballotId_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum EditHasFilter {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotDescriptionS = 'details_ballotDescription_s',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsBallotTitleS = 'details_ballotTitle_s',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsOriginalDocumentC = 'details_originalDocument_c',
  DetailsOriginalDocumentI = 'details_originalDocument_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsRoleC = 'details_role_c',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStateS = 'details_state_s',
  DetailsTimeShareX100I = 'details_timeShareX100_i',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DocId = 'docId',
  Original = 'original',
  Ownedby = 'ownedby',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type EditOrder = {
  asc?: InputMaybe<EditOrderable>;
  desc?: InputMaybe<EditOrderable>;
  then?: InputMaybe<EditOrder>;
};

export enum EditOrderable {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotDescriptionS = 'details_ballotDescription_s',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsBallotTitleS = 'details_ballotTitle_s',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsOriginalDocumentC = 'details_originalDocument_c',
  DetailsOriginalDocumentI = 'details_originalDocument_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsRoleC = 'details_role_c',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStateS = 'details_state_s',
  DetailsTimeShareX100I = 'details_timeShareX100_i',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DocId = 'docId',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type EditPatch = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotDescription_s?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotTitle_s?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']['input']>;
  details_originalDocument_i?: InputMaybe<Scalars['Int64']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_role_c?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  original?: InputMaybe<Array<DocumentRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type EditRef = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_assignee_n?: InputMaybe<Scalars['String']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotDescription_s?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotTitle_s?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']['input']>;
  details_originalDocument_i?: InputMaybe<Scalars['Int64']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_role_c?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  original?: InputMaybe<Array<DocumentRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type ElectnGroup = Document & {
  __typename?: 'ElectnGroup';
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_memberCount_i?: Maybe<Scalars['Int64']['output']>;
  details_videolink_s?: Maybe<Scalars['String']['output']>;
  details_winner_i?: Maybe<Scalars['Int64']['output']>;
  docId: Scalars['String']['output'];
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  ueGroupWin?: Maybe<Array<Member>>;
  ueGroupWinAggregate?: Maybe<MemberAggregateResult>;
  ueRdMember?: Maybe<Array<Member>>;
  ueRdMemberAggregate?: Maybe<MemberAggregateResult>;
  ueVote?: Maybe<Array<UpvtVote>>;
  ueVoteAggregate?: Maybe<UpvtVoteAggregateResult>;
  updatedDate: Scalars['DateTime']['output'];
};


export type ElectnGroupUeGroupWinArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type ElectnGroupUeGroupWinAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type ElectnGroupUeRdMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type ElectnGroupUeRdMemberAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type ElectnGroupUeVoteArgs = {
  filter?: InputMaybe<UpvtVoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtVoteOrder>;
};


export type ElectnGroupUeVoteAggregateArgs = {
  filter?: InputMaybe<UpvtVoteFilter>;
};

export type ElectnGroupAggregateResult = {
  __typename?: 'ElectnGroupAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_memberCount_iAvg?: Maybe<Scalars['Float']['output']>;
  details_memberCount_iMax?: Maybe<Scalars['Int64']['output']>;
  details_memberCount_iMin?: Maybe<Scalars['Int64']['output']>;
  details_memberCount_iSum?: Maybe<Scalars['Int64']['output']>;
  details_videolink_sMax?: Maybe<Scalars['String']['output']>;
  details_videolink_sMin?: Maybe<Scalars['String']['output']>;
  details_winner_iAvg?: Maybe<Scalars['Float']['output']>;
  details_winner_iMax?: Maybe<Scalars['Int64']['output']>;
  details_winner_iMin?: Maybe<Scalars['Int64']['output']>;
  details_winner_iSum?: Maybe<Scalars['Int64']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type ElectnGroupFilter = {
  and?: InputMaybe<Array<InputMaybe<ElectnGroupFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_memberCount_i?: InputMaybe<Int64Filter>;
  details_videolink_s?: InputMaybe<StringRegExpFilter>;
  details_winner_i?: InputMaybe<Int64Filter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<ElectnGroupHasFilter>>>;
  not?: InputMaybe<ElectnGroupFilter>;
  or?: InputMaybe<Array<InputMaybe<ElectnGroupFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum ElectnGroupHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsMemberCountI = 'details_memberCount_i',
  DetailsVideolinkS = 'details_videolink_s',
  DetailsWinnerI = 'details_winner_i',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UeGroupWin = 'ueGroupWin',
  UeRdMember = 'ueRdMember',
  UeVote = 'ueVote',
  UpdatedDate = 'updatedDate'
}

export type ElectnGroupOrder = {
  asc?: InputMaybe<ElectnGroupOrderable>;
  desc?: InputMaybe<ElectnGroupOrderable>;
  then?: InputMaybe<ElectnGroupOrder>;
};

export enum ElectnGroupOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsMemberCountI = 'details_memberCount_i',
  DetailsVideolinkS = 'details_videolink_s',
  DetailsWinnerI = 'details_winner_i',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type ElectnGroupPatch = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_memberCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_videolink_s?: InputMaybe<Scalars['String']['input']>;
  details_winner_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  ueGroupWin?: InputMaybe<Array<MemberRef>>;
  ueRdMember?: InputMaybe<Array<MemberRef>>;
  ueVote?: InputMaybe<Array<UpvtVoteRef>>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ElectnGroupRef = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_memberCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_videolink_s?: InputMaybe<Scalars['String']['input']>;
  details_winner_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  ueGroupWin?: InputMaybe<Array<MemberRef>>;
  ueRdMember?: InputMaybe<Array<MemberRef>>;
  ueVote?: InputMaybe<Array<UpvtVoteRef>>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ElectnRound = Document & {
  __typename?: 'ElectnRound';
  candidate?: Maybe<Array<Document>>;
  candidateAggregate?: Maybe<DocumentAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_delegatePower_i?: Maybe<Scalars['Int64']['output']>;
  details_duration_i?: Maybe<Scalars['Int64']['output']>;
  details_endDate_t?: Maybe<Scalars['DateTime']['output']>;
  details_passingCount_i?: Maybe<Scalars['Int64']['output']>;
  details_roundDuration_i?: Maybe<Scalars['Int64']['output']>;
  details_startDate_t?: Maybe<Scalars['DateTime']['output']>;
  details_type_s?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  election?: Maybe<Array<UpvtElectn>>;
  electionAggregate?: Maybe<UpvtElectnAggregateResult>;
  nextround?: Maybe<Array<ElectnRound>>;
  nextroundAggregate?: Maybe<ElectnRoundAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  ueElection?: Maybe<Array<UpvtElectn>>;
  ueElectionAggregate?: Maybe<UpvtElectnAggregateResult>;
  ueGroupLnk?: Maybe<Array<ElectnGroup>>;
  ueGroupLnkAggregate?: Maybe<ElectnGroupAggregateResult>;
  ueNextrnd?: Maybe<Array<ElectnRound>>;
  ueNextrndAggregate?: Maybe<ElectnRoundAggregateResult>;
  ueWinner?: Maybe<Array<Member>>;
  ueWinnerAggregate?: Maybe<MemberAggregateResult>;
  updatedDate: Scalars['DateTime']['output'];
  voted?: Maybe<Array<Member>>;
  votedAggregate?: Maybe<MemberAggregateResult>;
  winner?: Maybe<Array<Document>>;
  winnerAggregate?: Maybe<DocumentAggregateResult>;
};


export type ElectnRoundCandidateArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type ElectnRoundCandidateAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type ElectnRoundElectionArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type ElectnRoundElectionAggregateArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type ElectnRoundNextroundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type ElectnRoundNextroundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type ElectnRoundUeElectionArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type ElectnRoundUeElectionAggregateArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type ElectnRoundUeGroupLnkArgs = {
  filter?: InputMaybe<ElectnGroupFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnGroupOrder>;
};


export type ElectnRoundUeGroupLnkAggregateArgs = {
  filter?: InputMaybe<ElectnGroupFilter>;
};


export type ElectnRoundUeNextrndArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type ElectnRoundUeNextrndAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type ElectnRoundUeWinnerArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type ElectnRoundUeWinnerAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type ElectnRoundVotedArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type ElectnRoundVotedAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type ElectnRoundWinnerArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type ElectnRoundWinnerAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};

export type ElectnRoundAggregateResult = {
  __typename?: 'ElectnRoundAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_delegatePower_iAvg?: Maybe<Scalars['Float']['output']>;
  details_delegatePower_iMax?: Maybe<Scalars['Int64']['output']>;
  details_delegatePower_iMin?: Maybe<Scalars['Int64']['output']>;
  details_delegatePower_iSum?: Maybe<Scalars['Int64']['output']>;
  details_duration_iAvg?: Maybe<Scalars['Float']['output']>;
  details_duration_iMax?: Maybe<Scalars['Int64']['output']>;
  details_duration_iMin?: Maybe<Scalars['Int64']['output']>;
  details_duration_iSum?: Maybe<Scalars['Int64']['output']>;
  details_endDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_endDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  details_passingCount_iAvg?: Maybe<Scalars['Float']['output']>;
  details_passingCount_iMax?: Maybe<Scalars['Int64']['output']>;
  details_passingCount_iMin?: Maybe<Scalars['Int64']['output']>;
  details_passingCount_iSum?: Maybe<Scalars['Int64']['output']>;
  details_roundDuration_iAvg?: Maybe<Scalars['Float']['output']>;
  details_roundDuration_iMax?: Maybe<Scalars['Int64']['output']>;
  details_roundDuration_iMin?: Maybe<Scalars['Int64']['output']>;
  details_roundDuration_iSum?: Maybe<Scalars['Int64']['output']>;
  details_startDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_startDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  details_type_sMax?: Maybe<Scalars['String']['output']>;
  details_type_sMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type ElectnRoundFilter = {
  and?: InputMaybe<Array<InputMaybe<ElectnRoundFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_delegatePower_i?: InputMaybe<Int64Filter>;
  details_duration_i?: InputMaybe<Int64Filter>;
  details_endDate_t?: InputMaybe<DateTimeFilter>;
  details_passingCount_i?: InputMaybe<Int64Filter>;
  details_roundDuration_i?: InputMaybe<Int64Filter>;
  details_startDate_t?: InputMaybe<DateTimeFilter>;
  details_type_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<ElectnRoundHasFilter>>>;
  not?: InputMaybe<ElectnRoundFilter>;
  or?: InputMaybe<Array<InputMaybe<ElectnRoundFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum ElectnRoundHasFilter {
  Candidate = 'candidate',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDelegatePowerI = 'details_delegatePower_i',
  DetailsDurationI = 'details_duration_i',
  DetailsEndDateT = 'details_endDate_t',
  DetailsPassingCountI = 'details_passingCount_i',
  DetailsRoundDurationI = 'details_roundDuration_i',
  DetailsStartDateT = 'details_startDate_t',
  DetailsTypeS = 'details_type_s',
  DocId = 'docId',
  Election = 'election',
  Nextround = 'nextround',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UeElection = 'ueElection',
  UeGroupLnk = 'ueGroupLnk',
  UeNextrnd = 'ueNextrnd',
  UeWinner = 'ueWinner',
  UpdatedDate = 'updatedDate',
  Voted = 'voted',
  Winner = 'winner'
}

export type ElectnRoundOrder = {
  asc?: InputMaybe<ElectnRoundOrderable>;
  desc?: InputMaybe<ElectnRoundOrderable>;
  then?: InputMaybe<ElectnRoundOrder>;
};

export enum ElectnRoundOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDelegatePowerI = 'details_delegatePower_i',
  DetailsDurationI = 'details_duration_i',
  DetailsEndDateT = 'details_endDate_t',
  DetailsPassingCountI = 'details_passingCount_i',
  DetailsRoundDurationI = 'details_roundDuration_i',
  DetailsStartDateT = 'details_startDate_t',
  DetailsTypeS = 'details_type_s',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type ElectnRoundPatch = {
  candidate?: InputMaybe<Array<DocumentRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_delegatePower_i?: InputMaybe<Scalars['Int64']['input']>;
  details_duration_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_passingCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_roundDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_type_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  election?: InputMaybe<Array<UpvtElectnRef>>;
  nextround?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  ueElection?: InputMaybe<Array<UpvtElectnRef>>;
  ueGroupLnk?: InputMaybe<Array<ElectnGroupRef>>;
  ueNextrnd?: InputMaybe<Array<ElectnRoundRef>>;
  ueWinner?: InputMaybe<Array<MemberRef>>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  voted?: InputMaybe<Array<MemberRef>>;
  winner?: InputMaybe<Array<DocumentRef>>;
};

export type ElectnRoundRef = {
  candidate?: InputMaybe<Array<DocumentRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_delegatePower_i?: InputMaybe<Scalars['Int64']['input']>;
  details_duration_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_passingCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_roundDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_type_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  election?: InputMaybe<Array<UpvtElectnRef>>;
  nextround?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  ueElection?: InputMaybe<Array<UpvtElectnRef>>;
  ueGroupLnk?: InputMaybe<Array<ElectnGroupRef>>;
  ueNextrnd?: InputMaybe<Array<ElectnRoundRef>>;
  ueWinner?: InputMaybe<Array<MemberRef>>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  voted?: InputMaybe<Array<MemberRef>>;
  winner?: InputMaybe<Array<DocumentRef>>;
};

export type Event = {
  __typename?: 'Event';
  eventType: EventType;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  notifications?: Maybe<Array<Notification>>;
  notificationsAggregate?: Maybe<NotificationAggregateResult>;
};


export type EventNotificationsArgs = {
  filter?: InputMaybe<NotificationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<NotificationOrder>;
};


export type EventNotificationsAggregateArgs = {
  filter?: InputMaybe<NotificationFilter>;
};

export type EventAggregateResult = {
  __typename?: 'EventAggregateResult';
  count?: Maybe<Scalars['Int']['output']>;
  nameMax?: Maybe<Scalars['String']['output']>;
  nameMin?: Maybe<Scalars['String']['output']>;
};

export type EventFilter = {
  and?: InputMaybe<Array<InputMaybe<EventFilter>>>;
  eventType?: InputMaybe<EventType_Hash>;
  has?: InputMaybe<Array<InputMaybe<EventHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']['input']>>;
  name?: InputMaybe<StringFullTextFilter>;
  not?: InputMaybe<EventFilter>;
  or?: InputMaybe<Array<InputMaybe<EventFilter>>>;
};

export enum EventHasFilter {
  EventType = 'eventType',
  Name = 'name',
  Notifications = 'notifications'
}

export type EventOrder = {
  asc?: InputMaybe<EventOrderable>;
  desc?: InputMaybe<EventOrderable>;
  then?: InputMaybe<EventOrder>;
};

export enum EventOrderable {
  Name = 'name'
}

export type EventPatch = {
  eventType?: InputMaybe<EventType>;
  name?: InputMaybe<Scalars['String']['input']>;
  notifications?: InputMaybe<Array<NotificationRef>>;
};

export type EventRef = {
  eventType?: InputMaybe<EventType>;
  id?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notifications?: InputMaybe<Array<NotificationRef>>;
};

export enum EventType {
  CreatedRecord = 'CREATED_RECORD',
  External = 'EXTERNAL',
  TimeBased = 'TIME_BASED'
}

export type EventType_Hash = {
  eq?: InputMaybe<EventType>;
  in?: InputMaybe<Array<InputMaybe<EventType>>>;
};

export type FloatFilter = {
  between?: InputMaybe<FloatRange>;
  eq?: InputMaybe<Scalars['Float']['input']>;
  ge?: InputMaybe<Scalars['Float']['input']>;
  gt?: InputMaybe<Scalars['Float']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']['input']>>>;
  le?: InputMaybe<Scalars['Float']['input']>;
  lt?: InputMaybe<Scalars['Float']['input']>;
};

export type FloatRange = {
  max: Scalars['Float']['input'];
  min: Scalars['Float']['input'];
};

export type GenerateMutationParams = {
  add?: InputMaybe<Scalars['Boolean']['input']>;
  delete?: InputMaybe<Scalars['Boolean']['input']>;
  update?: InputMaybe<Scalars['Boolean']['input']>;
};

export type GenerateQueryParams = {
  aggregate?: InputMaybe<Scalars['Boolean']['input']>;
  get?: InputMaybe<Scalars['Boolean']['input']>;
  password?: InputMaybe<Scalars['Boolean']['input']>;
  query?: InputMaybe<Scalars['Boolean']['input']>;
};

export enum HttpMethod {
  Delete = 'DELETE',
  Get = 'GET',
  Patch = 'PATCH',
  Post = 'POST',
  Put = 'PUT'
}

export type Int64Filter = {
  between?: InputMaybe<Int64Range>;
  eq?: InputMaybe<Scalars['Int64']['input']>;
  ge?: InputMaybe<Scalars['Int64']['input']>;
  gt?: InputMaybe<Scalars['Int64']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int64']['input']>>>;
  le?: InputMaybe<Scalars['Int64']['input']>;
  lt?: InputMaybe<Scalars['Int64']['input']>;
};

export type Int64Range = {
  max: Scalars['Int64']['input'];
  min: Scalars['Int64']['input'];
};

export type IntFilter = {
  between?: InputMaybe<IntRange>;
  eq?: InputMaybe<Scalars['Int']['input']>;
  ge?: InputMaybe<Scalars['Int']['input']>;
  gt?: InputMaybe<Scalars['Int']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int']['input']>>>;
  le?: InputMaybe<Scalars['Int']['input']>;
  lt?: InputMaybe<Scalars['Int']['input']>;
};

export type IntRange = {
  max: Scalars['Int']['input'];
  min: Scalars['Int']['input'];
};

export type IntersectsFilter = {
  multiPolygon?: InputMaybe<MultiPolygonRef>;
  polygon?: InputMaybe<PolygonRef>;
};

export type Member = Document & {
  __typename?: 'Member';
  adminbdg?: Maybe<Array<Assignbadge>>;
  adminbdgAggregate?: Maybe<AssignbadgeAggregateResult>;
  applicantof?: Maybe<Array<Document>>;
  applicantofAggregate?: Maybe<DocumentAggregateResult>;
  applofcirc?: Maybe<Array<Circle>>;
  applofcircAggregate?: Maybe<CircleAggregateResult>;
  approvemsig?: Maybe<Array<Multisig>>;
  approvemsigAggregate?: Maybe<MultisigAggregateResult>;
  assignbadge?: Maybe<Array<Assignbadge>>;
  assignbadgeAggregate?: Maybe<AssignbadgeAggregateResult>;
  assigned?: Maybe<Array<Assignment>>;
  assignedAggregate?: Maybe<AssignmentAggregateResult>;
  attested?: Maybe<Array<Attestation>>;
  attestedAggregate?: Maybe<AttestationAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_member_n: Scalars['String']['output'];
  docId: Scalars['String']['output'];
  elctngroup?: Maybe<Array<VoteGroup>>;
  elctngroupAggregate?: Maybe<VoteGroupAggregateResult>;
  enrollerbdg?: Maybe<Array<Assignbadge>>;
  enrollerbdgAggregate?: Maybe<AssignbadgeAggregateResult>;
  entrustedto?: Maybe<Array<Queststart>>;
  entrustedtoAggregate?: Maybe<QueststartAggregateResult>;
  holdsbadge?: Maybe<Array<Badge>>;
  holdsbadgeAggregate?: Maybe<BadgeAggregateResult>;
  memberof?: Maybe<Array<Document>>;
  memberofAggregate?: Maybe<DocumentAggregateResult>;
  memberofcirc?: Maybe<Array<Circle>>;
  memberofcircAggregate?: Maybe<CircleAggregateResult>;
  owns?: Maybe<Array<Document>>;
  ownsAggregate?: Maybe<DocumentAggregateResult>;
  paid?: Maybe<Array<Payment>>;
  paidAggregate?: Maybe<PaymentAggregateResult>;
  payment?: Maybe<Array<Payment>>;
  paymentAggregate?: Maybe<PaymentAggregateResult>;
  payout?: Maybe<Array<Payout>>;
  payoutAggregate?: Maybe<PayoutAggregateResult>;
  questcomplet?: Maybe<Array<Document>>;
  questcompletAggregate?: Maybe<DocumentAggregateResult>;
  reactedto?: Maybe<Array<Comment>>;
  reactedtoAggregate?: Maybe<CommentAggregateResult>;
  reactionlnk?: Maybe<Array<Reaction>>;
  reactionlnkAggregate?: Maybe<ReactionAggregateResult>;
  redeembal?: Maybe<Array<Balance>>;
  redeembalAggregate?: Maybe<BalanceAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  treasurerof?: Maybe<Array<Treasury>>;
  treasurerofAggregate?: Maybe<TreasuryAggregateResult>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
};


export type MemberAdminbdgArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignbadgeOrder>;
};


export type MemberAdminbdgAggregateArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
};


export type MemberApplicantofArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type MemberApplicantofAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type MemberApplofcircArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CircleOrder>;
};


export type MemberApplofcircAggregateArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type MemberApprovemsigArgs = {
  filter?: InputMaybe<MultisigFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MultisigOrder>;
};


export type MemberApprovemsigAggregateArgs = {
  filter?: InputMaybe<MultisigFilter>;
};


export type MemberAssignbadgeArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignbadgeOrder>;
};


export type MemberAssignbadgeAggregateArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
};


export type MemberAssignedArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignmentOrder>;
};


export type MemberAssignedAggregateArgs = {
  filter?: InputMaybe<AssignmentFilter>;
};


export type MemberAttestedArgs = {
  filter?: InputMaybe<AttestationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AttestationOrder>;
};


export type MemberAttestedAggregateArgs = {
  filter?: InputMaybe<AttestationFilter>;
};


export type MemberElctngroupArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteGroupOrder>;
};


export type MemberElctngroupAggregateArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
};


export type MemberEnrollerbdgArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignbadgeOrder>;
};


export type MemberEnrollerbdgAggregateArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
};


export type MemberEntrustedtoArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QueststartOrder>;
};


export type MemberEntrustedtoAggregateArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type MemberHoldsbadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BadgeOrder>;
};


export type MemberHoldsbadgeAggregateArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type MemberMemberofArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type MemberMemberofAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type MemberMemberofcircArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CircleOrder>;
};


export type MemberMemberofcircAggregateArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type MemberOwnsArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type MemberOwnsAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type MemberPaidArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PaymentOrder>;
};


export type MemberPaidAggregateArgs = {
  filter?: InputMaybe<PaymentFilter>;
};


export type MemberPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PaymentOrder>;
};


export type MemberPaymentAggregateArgs = {
  filter?: InputMaybe<PaymentFilter>;
};


export type MemberPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PayoutOrder>;
};


export type MemberPayoutAggregateArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type MemberQuestcompletArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type MemberQuestcompletAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type MemberReactedtoArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CommentOrder>;
};


export type MemberReactedtoAggregateArgs = {
  filter?: InputMaybe<CommentFilter>;
};


export type MemberReactionlnkArgs = {
  filter?: InputMaybe<ReactionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ReactionOrder>;
};


export type MemberReactionlnkAggregateArgs = {
  filter?: InputMaybe<ReactionFilter>;
};


export type MemberRedeembalArgs = {
  filter?: InputMaybe<BalanceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BalanceOrder>;
};


export type MemberRedeembalAggregateArgs = {
  filter?: InputMaybe<BalanceFilter>;
};


export type MemberTreasurerofArgs = {
  filter?: InputMaybe<TreasuryFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TreasuryOrder>;
};


export type MemberTreasurerofAggregateArgs = {
  filter?: InputMaybe<TreasuryFilter>;
};


export type MemberVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type MemberVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};

export type MemberAggregateResult = {
  __typename?: 'MemberAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_member_nMax?: Maybe<Scalars['String']['output']>;
  details_member_nMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type MemberFilter = {
  and?: InputMaybe<Array<InputMaybe<MemberFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_member_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<MemberHasFilter>>>;
  not?: InputMaybe<MemberFilter>;
  or?: InputMaybe<Array<InputMaybe<MemberFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum MemberHasFilter {
  Adminbdg = 'adminbdg',
  Applicantof = 'applicantof',
  Applofcirc = 'applofcirc',
  Approvemsig = 'approvemsig',
  Assignbadge = 'assignbadge',
  Assigned = 'assigned',
  Attested = 'attested',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsMemberN = 'details_member_n',
  DocId = 'docId',
  Elctngroup = 'elctngroup',
  Enrollerbdg = 'enrollerbdg',
  Entrustedto = 'entrustedto',
  Holdsbadge = 'holdsbadge',
  Memberof = 'memberof',
  Memberofcirc = 'memberofcirc',
  Owns = 'owns',
  Paid = 'paid',
  Payment = 'payment',
  Payout = 'payout',
  Questcomplet = 'questcomplet',
  Reactedto = 'reactedto',
  Reactionlnk = 'reactionlnk',
  Redeembal = 'redeembal',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Treasurerof = 'treasurerof',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote'
}

export type MemberOrder = {
  asc?: InputMaybe<MemberOrderable>;
  desc?: InputMaybe<MemberOrderable>;
  then?: InputMaybe<MemberOrder>;
};

export enum MemberOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsMemberN = 'details_member_n',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type MemberPatch = {
  adminbdg?: InputMaybe<Array<AssignbadgeRef>>;
  applicantof?: InputMaybe<Array<DocumentRef>>;
  applofcirc?: InputMaybe<Array<CircleRef>>;
  approvemsig?: InputMaybe<Array<MultisigRef>>;
  assignbadge?: InputMaybe<Array<AssignbadgeRef>>;
  assigned?: InputMaybe<Array<AssignmentRef>>;
  attested?: InputMaybe<Array<AttestationRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_member_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  elctngroup?: InputMaybe<Array<VoteGroupRef>>;
  enrollerbdg?: InputMaybe<Array<AssignbadgeRef>>;
  entrustedto?: InputMaybe<Array<QueststartRef>>;
  holdsbadge?: InputMaybe<Array<BadgeRef>>;
  memberof?: InputMaybe<Array<DocumentRef>>;
  memberofcirc?: InputMaybe<Array<CircleRef>>;
  owns?: InputMaybe<Array<DocumentRef>>;
  paid?: InputMaybe<Array<PaymentRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  questcomplet?: InputMaybe<Array<DocumentRef>>;
  reactedto?: InputMaybe<Array<CommentRef>>;
  reactionlnk?: InputMaybe<Array<ReactionRef>>;
  redeembal?: InputMaybe<Array<BalanceRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  treasurerof?: InputMaybe<Array<TreasuryRef>>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
};

export type MemberRef = {
  adminbdg?: InputMaybe<Array<AssignbadgeRef>>;
  applicantof?: InputMaybe<Array<DocumentRef>>;
  applofcirc?: InputMaybe<Array<CircleRef>>;
  approvemsig?: InputMaybe<Array<MultisigRef>>;
  assignbadge?: InputMaybe<Array<AssignbadgeRef>>;
  assigned?: InputMaybe<Array<AssignmentRef>>;
  attested?: InputMaybe<Array<AttestationRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_member_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  elctngroup?: InputMaybe<Array<VoteGroupRef>>;
  enrollerbdg?: InputMaybe<Array<AssignbadgeRef>>;
  entrustedto?: InputMaybe<Array<QueststartRef>>;
  holdsbadge?: InputMaybe<Array<BadgeRef>>;
  memberof?: InputMaybe<Array<DocumentRef>>;
  memberofcirc?: InputMaybe<Array<CircleRef>>;
  owns?: InputMaybe<Array<DocumentRef>>;
  paid?: InputMaybe<Array<PaymentRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  questcomplet?: InputMaybe<Array<DocumentRef>>;
  reactedto?: InputMaybe<Array<CommentRef>>;
  reactionlnk?: InputMaybe<Array<ReactionRef>>;
  redeembal?: InputMaybe<Array<BalanceRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  treasurerof?: InputMaybe<Array<TreasuryRef>>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
};

export type Memo = Document & {
  __typename?: 'Memo';
  assigned?: Maybe<Array<Assignment>>;
  assignedAggregate?: Maybe<AssignmentAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_memo_s?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  owns?: Maybe<Array<Document>>;
  ownsAggregate?: Maybe<DocumentAggregateResult>;
  paid?: Maybe<Array<Payment>>;
  paidAggregate?: Maybe<PaymentAggregateResult>;
  payout?: Maybe<Array<Payout>>;
  payoutAggregate?: Maybe<PayoutAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type MemoAssignedArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignmentOrder>;
};


export type MemoAssignedAggregateArgs = {
  filter?: InputMaybe<AssignmentFilter>;
};


export type MemoOwnsArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type MemoOwnsAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type MemoPaidArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PaymentOrder>;
};


export type MemoPaidAggregateArgs = {
  filter?: InputMaybe<PaymentFilter>;
};


export type MemoPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PayoutOrder>;
};


export type MemoPayoutAggregateArgs = {
  filter?: InputMaybe<PayoutFilter>;
};

export type MemoAggregateResult = {
  __typename?: 'MemoAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_memo_sMax?: Maybe<Scalars['String']['output']>;
  details_memo_sMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type MemoFilter = {
  and?: InputMaybe<Array<InputMaybe<MemoFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_memo_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<MemoHasFilter>>>;
  not?: InputMaybe<MemoFilter>;
  or?: InputMaybe<Array<InputMaybe<MemoFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum MemoHasFilter {
  Assigned = 'assigned',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsMemoS = 'details_memo_s',
  DocId = 'docId',
  Owns = 'owns',
  Paid = 'paid',
  Payout = 'payout',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type MemoOrder = {
  asc?: InputMaybe<MemoOrderable>;
  desc?: InputMaybe<MemoOrderable>;
  then?: InputMaybe<MemoOrder>;
};

export enum MemoOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsMemoS = 'details_memo_s',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type MemoPatch = {
  assigned?: InputMaybe<Array<AssignmentRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_memo_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  owns?: InputMaybe<Array<DocumentRef>>;
  paid?: InputMaybe<Array<PaymentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type MemoRef = {
  assigned?: InputMaybe<Array<AssignmentRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_memo_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  owns?: InputMaybe<Array<DocumentRef>>;
  paid?: InputMaybe<Array<PaymentRef>>;
  payout?: InputMaybe<Array<PayoutRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export enum Mode {
  Batch = 'BATCH',
  Single = 'SINGLE'
}

export type MsigInfo = Document & {
  __typename?: 'MsigInfo';
  approvedby?: Maybe<Array<Member>>;
  approvedbyAggregate?: Maybe<MemberAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_proposalName_n?: Maybe<Scalars['String']['output']>;
  details_state_s?: Maybe<Scalars['String']['output']>;
  details_treasurer_n?: Maybe<Scalars['String']['output']>;
  details_treasuryId_i?: Maybe<Scalars['Int64']['output']>;
  docId: Scalars['String']['output'];
  payment?: Maybe<Array<TrsyPayment>>;
  paymentAggregate?: Maybe<TrsyPaymentAggregateResult>;
  signer?: Maybe<Array<Member>>;
  signerAggregate?: Maybe<MemberAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type MsigInfoApprovedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type MsigInfoApprovedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type MsigInfoPaymentArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TrsyPaymentOrder>;
};


export type MsigInfoPaymentAggregateArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
};


export type MsigInfoSignerArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type MsigInfoSignerAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};

export type MsigInfoAggregateResult = {
  __typename?: 'MsigInfoAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_proposalName_nMax?: Maybe<Scalars['String']['output']>;
  details_proposalName_nMin?: Maybe<Scalars['String']['output']>;
  details_state_sMax?: Maybe<Scalars['String']['output']>;
  details_state_sMin?: Maybe<Scalars['String']['output']>;
  details_treasurer_nMax?: Maybe<Scalars['String']['output']>;
  details_treasurer_nMin?: Maybe<Scalars['String']['output']>;
  details_treasuryId_iAvg?: Maybe<Scalars['Float']['output']>;
  details_treasuryId_iMax?: Maybe<Scalars['Int64']['output']>;
  details_treasuryId_iMin?: Maybe<Scalars['Int64']['output']>;
  details_treasuryId_iSum?: Maybe<Scalars['Int64']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type MsigInfoFilter = {
  and?: InputMaybe<Array<InputMaybe<MsigInfoFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_proposalName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_treasurer_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_treasuryId_i?: InputMaybe<Int64Filter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<MsigInfoHasFilter>>>;
  not?: InputMaybe<MsigInfoFilter>;
  or?: InputMaybe<Array<InputMaybe<MsigInfoFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum MsigInfoHasFilter {
  Approvedby = 'approvedby',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsProposalNameN = 'details_proposalName_n',
  DetailsStateS = 'details_state_s',
  DetailsTreasurerN = 'details_treasurer_n',
  DetailsTreasuryIdI = 'details_treasuryId_i',
  DocId = 'docId',
  Payment = 'payment',
  Signer = 'signer',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type MsigInfoOrder = {
  asc?: InputMaybe<MsigInfoOrderable>;
  desc?: InputMaybe<MsigInfoOrderable>;
  then?: InputMaybe<MsigInfoOrder>;
};

export enum MsigInfoOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsProposalNameN = 'details_proposalName_n',
  DetailsStateS = 'details_state_s',
  DetailsTreasurerN = 'details_treasurer_n',
  DetailsTreasuryIdI = 'details_treasuryId_i',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type MsigInfoPatch = {
  approvedby?: InputMaybe<Array<MemberRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_proposalName_n?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_treasurer_n?: InputMaybe<Scalars['String']['input']>;
  details_treasuryId_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  payment?: InputMaybe<Array<TrsyPaymentRef>>;
  signer?: InputMaybe<Array<MemberRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type MsigInfoRef = {
  approvedby?: InputMaybe<Array<MemberRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_proposalName_n?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_treasurer_n?: InputMaybe<Scalars['String']['input']>;
  details_treasuryId_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  payment?: InputMaybe<Array<TrsyPaymentRef>>;
  signer?: InputMaybe<Array<MemberRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type MultiPolygon = {
  __typename?: 'MultiPolygon';
  polygons: Array<Polygon>;
};

export type MultiPolygonRef = {
  polygons: Array<PolygonRef>;
};

export type Multisig = Document & {
  __typename?: 'Multisig';
  approvedby?: Maybe<Array<Member>>;
  approvedbyAggregate?: Maybe<MemberAggregateResult>;
  canceledby?: Maybe<Array<Member>>;
  canceledbyAggregate?: Maybe<MemberAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  details_owner_n?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  executedby?: Maybe<Array<Member>>;
  executedbyAggregate?: Maybe<MemberAggregateResult>;
  settings_communityVotingAlignmentPercent_i?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingDurationSec_i?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingEnabled_i?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingMethod_s?: Maybe<Scalars['String']['output']>;
  settings_communityVotingQuorumPercent_i?: Maybe<Scalars['Int64']['output']>;
  settings_daoTitle_s?: Maybe<Scalars['String']['output']>;
  settings_daoUrl_s?: Maybe<Scalars['String']['output']>;
  settings_dashboardBackgroundImage_s?: Maybe<Scalars['String']['output']>;
  settings_dashboardParagraph_s?: Maybe<Scalars['String']['output']>;
  settings_dashboardTitle_s?: Maybe<Scalars['String']['output']>;
  settings_documentationButtonText_s?: Maybe<Scalars['String']['output']>;
  settings_documentationURL_s?: Maybe<Scalars['String']['output']>;
  settings_exploreBackgroundImage_s?: Maybe<Scalars['String']['output']>;
  settings_exploreParagraph_s?: Maybe<Scalars['String']['output']>;
  settings_exploreTitle_s?: Maybe<Scalars['String']['output']>;
  settings_extendedLogo_s?: Maybe<Scalars['String']['output']>;
  settings_logo_s?: Maybe<Scalars['String']['output']>;
  settings_membersApplicationEnabled_i?: Maybe<Scalars['Int64']['output']>;
  settings_membersBackgroundImage_s?: Maybe<Scalars['String']['output']>;
  settings_membersParagraph_s?: Maybe<Scalars['String']['output']>;
  settings_membersTitle_s?: Maybe<Scalars['String']['output']>;
  settings_msigApprovalAmount_i?: Maybe<Scalars['Int64']['output']>;
  settings_multisigEnabled_i?: Maybe<Scalars['Int64']['output']>;
  settings_organisationBackgroundImage_s?: Maybe<Scalars['String']['output']>;
  settings_organisationParagraph_s?: Maybe<Scalars['String']['output']>;
  settings_organisationTitle_s?: Maybe<Scalars['String']['output']>;
  settings_patternBase64_s?: Maybe<Scalars['String']['output']>;
  settings_patternColor_s?: Maybe<Scalars['String']['output']>;
  settings_patternOpacity_i?: Maybe<Scalars['Int64']['output']>;
  settings_pattern_s?: Maybe<Scalars['String']['output']>;
  settings_primaryColor_s?: Maybe<Scalars['String']['output']>;
  settings_proposalsBackgroundImage_s?: Maybe<Scalars['String']['output']>;
  settings_proposalsCreationEnabled_i?: Maybe<Scalars['Int64']['output']>;
  settings_proposalsParagraph_s?: Maybe<Scalars['String']['output']>;
  settings_proposalsTitle_s?: Maybe<Scalars['String']['output']>;
  settings_removableBannersEnabled_i?: Maybe<Scalars['Int64']['output']>;
  settings_secondaryColor_s?: Maybe<Scalars['String']['output']>;
  settings_socialChat_s?: Maybe<Scalars['String']['output']>;
  settings_splashBackgroundImage_s?: Maybe<Scalars['String']['output']>;
  settings_textColor_s?: Maybe<Scalars['String']['output']>;
  settings_title_s?: Maybe<Scalars['String']['output']>;
  settings_upvoteCheifDelegateCount_i?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteCheifDelegateDuration_i?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteDuration_i?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteHeadDelegateDuration_i?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteHeadDelegateRound_i?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteRounds_s?: Maybe<Scalars['String']['output']>;
  settings_upvoteStartDateTime_s?: Maybe<Scalars['String']['output']>;
  settings_url_s?: Maybe<Scalars['String']['output']>;
  settings_votingAlignmentPercent_i?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentX100_i?: Maybe<Scalars['Int64']['output']>;
  settings_votingDurationSec_i?: Maybe<Scalars['Int64']['output']>;
  settings_votingDurationSec_s?: Maybe<Scalars['String']['output']>;
  settings_votingQuorumPercent_i?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumX100_i?: Maybe<Scalars['Int64']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type MultisigApprovedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type MultisigApprovedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type MultisigCanceledbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type MultisigCanceledbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type MultisigExecutedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type MultisigExecutedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};

export type MultisigAggregateResult = {
  __typename?: 'MultisigAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  details_owner_nMax?: Maybe<Scalars['String']['output']>;
  details_owner_nMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  settings_communityVotingAlignmentPercent_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_communityVotingAlignmentPercent_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingAlignmentPercent_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingAlignmentPercent_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingDurationSec_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_communityVotingDurationSec_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingDurationSec_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingDurationSec_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingEnabled_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_communityVotingEnabled_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingEnabled_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingEnabled_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingMethod_sMax?: Maybe<Scalars['String']['output']>;
  settings_communityVotingMethod_sMin?: Maybe<Scalars['String']['output']>;
  settings_communityVotingQuorumPercent_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_communityVotingQuorumPercent_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingQuorumPercent_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingQuorumPercent_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_daoTitle_sMax?: Maybe<Scalars['String']['output']>;
  settings_daoTitle_sMin?: Maybe<Scalars['String']['output']>;
  settings_daoUrl_sMax?: Maybe<Scalars['String']['output']>;
  settings_daoUrl_sMin?: Maybe<Scalars['String']['output']>;
  settings_dashboardBackgroundImage_sMax?: Maybe<Scalars['String']['output']>;
  settings_dashboardBackgroundImage_sMin?: Maybe<Scalars['String']['output']>;
  settings_dashboardParagraph_sMax?: Maybe<Scalars['String']['output']>;
  settings_dashboardParagraph_sMin?: Maybe<Scalars['String']['output']>;
  settings_dashboardTitle_sMax?: Maybe<Scalars['String']['output']>;
  settings_dashboardTitle_sMin?: Maybe<Scalars['String']['output']>;
  settings_documentationButtonText_sMax?: Maybe<Scalars['String']['output']>;
  settings_documentationButtonText_sMin?: Maybe<Scalars['String']['output']>;
  settings_documentationURL_sMax?: Maybe<Scalars['String']['output']>;
  settings_documentationURL_sMin?: Maybe<Scalars['String']['output']>;
  settings_exploreBackgroundImage_sMax?: Maybe<Scalars['String']['output']>;
  settings_exploreBackgroundImage_sMin?: Maybe<Scalars['String']['output']>;
  settings_exploreParagraph_sMax?: Maybe<Scalars['String']['output']>;
  settings_exploreParagraph_sMin?: Maybe<Scalars['String']['output']>;
  settings_exploreTitle_sMax?: Maybe<Scalars['String']['output']>;
  settings_exploreTitle_sMin?: Maybe<Scalars['String']['output']>;
  settings_extendedLogo_sMax?: Maybe<Scalars['String']['output']>;
  settings_extendedLogo_sMin?: Maybe<Scalars['String']['output']>;
  settings_logo_sMax?: Maybe<Scalars['String']['output']>;
  settings_logo_sMin?: Maybe<Scalars['String']['output']>;
  settings_membersApplicationEnabled_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_membersApplicationEnabled_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_membersApplicationEnabled_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_membersApplicationEnabled_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_membersBackgroundImage_sMax?: Maybe<Scalars['String']['output']>;
  settings_membersBackgroundImage_sMin?: Maybe<Scalars['String']['output']>;
  settings_membersParagraph_sMax?: Maybe<Scalars['String']['output']>;
  settings_membersParagraph_sMin?: Maybe<Scalars['String']['output']>;
  settings_membersTitle_sMax?: Maybe<Scalars['String']['output']>;
  settings_membersTitle_sMin?: Maybe<Scalars['String']['output']>;
  settings_msigApprovalAmount_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_msigApprovalAmount_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_msigApprovalAmount_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_msigApprovalAmount_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_multisigEnabled_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_multisigEnabled_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_multisigEnabled_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_multisigEnabled_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_organisationBackgroundImage_sMax?: Maybe<Scalars['String']['output']>;
  settings_organisationBackgroundImage_sMin?: Maybe<Scalars['String']['output']>;
  settings_organisationParagraph_sMax?: Maybe<Scalars['String']['output']>;
  settings_organisationParagraph_sMin?: Maybe<Scalars['String']['output']>;
  settings_organisationTitle_sMax?: Maybe<Scalars['String']['output']>;
  settings_organisationTitle_sMin?: Maybe<Scalars['String']['output']>;
  settings_patternBase64_sMax?: Maybe<Scalars['String']['output']>;
  settings_patternBase64_sMin?: Maybe<Scalars['String']['output']>;
  settings_patternColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_patternColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_patternOpacity_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_patternOpacity_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_patternOpacity_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_patternOpacity_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_pattern_sMax?: Maybe<Scalars['String']['output']>;
  settings_pattern_sMin?: Maybe<Scalars['String']['output']>;
  settings_primaryColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_primaryColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_proposalsBackgroundImage_sMax?: Maybe<Scalars['String']['output']>;
  settings_proposalsBackgroundImage_sMin?: Maybe<Scalars['String']['output']>;
  settings_proposalsCreationEnabled_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_proposalsCreationEnabled_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_proposalsCreationEnabled_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_proposalsCreationEnabled_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_proposalsParagraph_sMax?: Maybe<Scalars['String']['output']>;
  settings_proposalsParagraph_sMin?: Maybe<Scalars['String']['output']>;
  settings_proposalsTitle_sMax?: Maybe<Scalars['String']['output']>;
  settings_proposalsTitle_sMin?: Maybe<Scalars['String']['output']>;
  settings_removableBannersEnabled_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_removableBannersEnabled_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_removableBannersEnabled_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_removableBannersEnabled_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_secondaryColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_secondaryColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_socialChat_sMax?: Maybe<Scalars['String']['output']>;
  settings_socialChat_sMin?: Maybe<Scalars['String']['output']>;
  settings_splashBackgroundImage_sMax?: Maybe<Scalars['String']['output']>;
  settings_splashBackgroundImage_sMin?: Maybe<Scalars['String']['output']>;
  settings_textColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_textColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_title_sMax?: Maybe<Scalars['String']['output']>;
  settings_title_sMin?: Maybe<Scalars['String']['output']>;
  settings_upvoteCheifDelegateCount_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_upvoteCheifDelegateCount_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteCheifDelegateCount_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteCheifDelegateCount_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteCheifDelegateDuration_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_upvoteCheifDelegateDuration_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteCheifDelegateDuration_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteCheifDelegateDuration_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteDuration_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_upvoteDuration_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteDuration_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteDuration_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteHeadDelegateDuration_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_upvoteHeadDelegateDuration_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteHeadDelegateDuration_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteHeadDelegateDuration_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteHeadDelegateRound_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_upvoteHeadDelegateRound_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteHeadDelegateRound_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteHeadDelegateRound_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteRounds_sMax?: Maybe<Scalars['String']['output']>;
  settings_upvoteRounds_sMin?: Maybe<Scalars['String']['output']>;
  settings_upvoteStartDateTime_sMax?: Maybe<Scalars['String']['output']>;
  settings_upvoteStartDateTime_sMin?: Maybe<Scalars['String']['output']>;
  settings_url_sMax?: Maybe<Scalars['String']['output']>;
  settings_url_sMin?: Maybe<Scalars['String']['output']>;
  settings_votingAlignmentPercent_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_votingAlignmentPercent_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentPercent_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentPercent_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentX100_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_votingAlignmentX100_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentX100_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentX100_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_votingDurationSec_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_votingDurationSec_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_votingDurationSec_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_votingDurationSec_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_votingDurationSec_sMax?: Maybe<Scalars['String']['output']>;
  settings_votingDurationSec_sMin?: Maybe<Scalars['String']['output']>;
  settings_votingQuorumPercent_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_votingQuorumPercent_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumPercent_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumPercent_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumX100_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_votingQuorumX100_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumX100_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumX100_iSum?: Maybe<Scalars['Int64']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type MultisigFilter = {
  and?: InputMaybe<Array<InputMaybe<MultisigFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_owner_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<MultisigHasFilter>>>;
  not?: InputMaybe<MultisigFilter>;
  or?: InputMaybe<Array<InputMaybe<MultisigFilter>>>;
  settings_communityVotingAlignmentPercent_i?: InputMaybe<Int64Filter>;
  settings_communityVotingDurationSec_i?: InputMaybe<Int64Filter>;
  settings_communityVotingEnabled_i?: InputMaybe<Int64Filter>;
  settings_communityVotingMethod_s?: InputMaybe<StringRegExpFilter>;
  settings_communityVotingQuorumPercent_i?: InputMaybe<Int64Filter>;
  settings_daoTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_daoUrl_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_documentationButtonText_s?: InputMaybe<StringRegExpFilter>;
  settings_documentationURL_s?: InputMaybe<StringRegExpFilter>;
  settings_exploreBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_exploreParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_exploreTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_extendedLogo_s?: InputMaybe<StringRegExpFilter>;
  settings_logo_s?: InputMaybe<StringRegExpFilter>;
  settings_membersApplicationEnabled_i?: InputMaybe<Int64Filter>;
  settings_membersBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_membersParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_membersTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_msigApprovalAmount_i?: InputMaybe<Int64Filter>;
  settings_multisigEnabled_i?: InputMaybe<Int64Filter>;
  settings_organisationBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_organisationParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_organisationTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_patternBase64_s?: InputMaybe<StringRegExpFilter>;
  settings_patternColor_s?: InputMaybe<StringRegExpFilter>;
  settings_patternOpacity_i?: InputMaybe<Int64Filter>;
  settings_pattern_s?: InputMaybe<StringRegExpFilter>;
  settings_primaryColor_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsCreationEnabled_i?: InputMaybe<Int64Filter>;
  settings_proposalsParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_removableBannersEnabled_i?: InputMaybe<Int64Filter>;
  settings_secondaryColor_s?: InputMaybe<StringRegExpFilter>;
  settings_socialChat_s?: InputMaybe<StringRegExpFilter>;
  settings_splashBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_textColor_s?: InputMaybe<StringRegExpFilter>;
  settings_title_s?: InputMaybe<StringRegExpFilter>;
  settings_upvoteCheifDelegateCount_i?: InputMaybe<Int64Filter>;
  settings_upvoteCheifDelegateDuration_i?: InputMaybe<Int64Filter>;
  settings_upvoteDuration_i?: InputMaybe<Int64Filter>;
  settings_upvoteHeadDelegateDuration_i?: InputMaybe<Int64Filter>;
  settings_upvoteHeadDelegateRound_i?: InputMaybe<Int64Filter>;
  settings_upvoteRounds_s?: InputMaybe<StringRegExpFilter>;
  settings_upvoteStartDateTime_s?: InputMaybe<StringRegExpFilter>;
  settings_url_s?: InputMaybe<StringRegExpFilter>;
  settings_votingAlignmentPercent_i?: InputMaybe<Int64Filter>;
  settings_votingAlignmentX100_i?: InputMaybe<Int64Filter>;
  settings_votingDurationSec_i?: InputMaybe<Int64Filter>;
  settings_votingDurationSec_s?: InputMaybe<StringRegExpFilter>;
  settings_votingQuorumPercent_i?: InputMaybe<Int64Filter>;
  settings_votingQuorumX100_i?: InputMaybe<Int64Filter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum MultisigHasFilter {
  Approvedby = 'approvedby',
  Canceledby = 'canceledby',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoI = 'details_dao_i',
  DetailsOwnerN = 'details_owner_n',
  DocId = 'docId',
  Executedby = 'executedby',
  SettingsCommunityVotingAlignmentPercentI = 'settings_communityVotingAlignmentPercent_i',
  SettingsCommunityVotingDurationSecI = 'settings_communityVotingDurationSec_i',
  SettingsCommunityVotingEnabledI = 'settings_communityVotingEnabled_i',
  SettingsCommunityVotingMethodS = 'settings_communityVotingMethod_s',
  SettingsCommunityVotingQuorumPercentI = 'settings_communityVotingQuorumPercent_i',
  SettingsDaoTitleS = 'settings_daoTitle_s',
  SettingsDaoUrlS = 'settings_daoUrl_s',
  SettingsDashboardBackgroundImageS = 'settings_dashboardBackgroundImage_s',
  SettingsDashboardParagraphS = 'settings_dashboardParagraph_s',
  SettingsDashboardTitleS = 'settings_dashboardTitle_s',
  SettingsDocumentationButtonTextS = 'settings_documentationButtonText_s',
  SettingsDocumentationUrlS = 'settings_documentationURL_s',
  SettingsExploreBackgroundImageS = 'settings_exploreBackgroundImage_s',
  SettingsExploreParagraphS = 'settings_exploreParagraph_s',
  SettingsExploreTitleS = 'settings_exploreTitle_s',
  SettingsExtendedLogoS = 'settings_extendedLogo_s',
  SettingsLogoS = 'settings_logo_s',
  SettingsMembersApplicationEnabledI = 'settings_membersApplicationEnabled_i',
  SettingsMembersBackgroundImageS = 'settings_membersBackgroundImage_s',
  SettingsMembersParagraphS = 'settings_membersParagraph_s',
  SettingsMembersTitleS = 'settings_membersTitle_s',
  SettingsMsigApprovalAmountI = 'settings_msigApprovalAmount_i',
  SettingsMultisigEnabledI = 'settings_multisigEnabled_i',
  SettingsOrganisationBackgroundImageS = 'settings_organisationBackgroundImage_s',
  SettingsOrganisationParagraphS = 'settings_organisationParagraph_s',
  SettingsOrganisationTitleS = 'settings_organisationTitle_s',
  SettingsPatternBase64S = 'settings_patternBase64_s',
  SettingsPatternColorS = 'settings_patternColor_s',
  SettingsPatternOpacityI = 'settings_patternOpacity_i',
  SettingsPatternS = 'settings_pattern_s',
  SettingsPrimaryColorS = 'settings_primaryColor_s',
  SettingsProposalsBackgroundImageS = 'settings_proposalsBackgroundImage_s',
  SettingsProposalsCreationEnabledI = 'settings_proposalsCreationEnabled_i',
  SettingsProposalsParagraphS = 'settings_proposalsParagraph_s',
  SettingsProposalsTitleS = 'settings_proposalsTitle_s',
  SettingsRemovableBannersEnabledI = 'settings_removableBannersEnabled_i',
  SettingsSecondaryColorS = 'settings_secondaryColor_s',
  SettingsSocialChatS = 'settings_socialChat_s',
  SettingsSplashBackgroundImageS = 'settings_splashBackgroundImage_s',
  SettingsTextColorS = 'settings_textColor_s',
  SettingsTitleS = 'settings_title_s',
  SettingsUpvoteCheifDelegateCountI = 'settings_upvoteCheifDelegateCount_i',
  SettingsUpvoteCheifDelegateDurationI = 'settings_upvoteCheifDelegateDuration_i',
  SettingsUpvoteDurationI = 'settings_upvoteDuration_i',
  SettingsUpvoteHeadDelegateDurationI = 'settings_upvoteHeadDelegateDuration_i',
  SettingsUpvoteHeadDelegateRoundI = 'settings_upvoteHeadDelegateRound_i',
  SettingsUpvoteRoundsS = 'settings_upvoteRounds_s',
  SettingsUpvoteStartDateTimeS = 'settings_upvoteStartDateTime_s',
  SettingsUrlS = 'settings_url_s',
  SettingsVotingAlignmentPercentI = 'settings_votingAlignmentPercent_i',
  SettingsVotingAlignmentX100I = 'settings_votingAlignmentX100_i',
  SettingsVotingDurationSecI = 'settings_votingDurationSec_i',
  SettingsVotingDurationSecS = 'settings_votingDurationSec_s',
  SettingsVotingQuorumPercentI = 'settings_votingQuorumPercent_i',
  SettingsVotingQuorumX100I = 'settings_votingQuorumX100_i',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type MultisigOrder = {
  asc?: InputMaybe<MultisigOrderable>;
  desc?: InputMaybe<MultisigOrderable>;
  then?: InputMaybe<MultisigOrder>;
};

export enum MultisigOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoI = 'details_dao_i',
  DetailsOwnerN = 'details_owner_n',
  DocId = 'docId',
  SettingsCommunityVotingAlignmentPercentI = 'settings_communityVotingAlignmentPercent_i',
  SettingsCommunityVotingDurationSecI = 'settings_communityVotingDurationSec_i',
  SettingsCommunityVotingEnabledI = 'settings_communityVotingEnabled_i',
  SettingsCommunityVotingMethodS = 'settings_communityVotingMethod_s',
  SettingsCommunityVotingQuorumPercentI = 'settings_communityVotingQuorumPercent_i',
  SettingsDaoTitleS = 'settings_daoTitle_s',
  SettingsDaoUrlS = 'settings_daoUrl_s',
  SettingsDashboardBackgroundImageS = 'settings_dashboardBackgroundImage_s',
  SettingsDashboardParagraphS = 'settings_dashboardParagraph_s',
  SettingsDashboardTitleS = 'settings_dashboardTitle_s',
  SettingsDocumentationButtonTextS = 'settings_documentationButtonText_s',
  SettingsDocumentationUrlS = 'settings_documentationURL_s',
  SettingsExploreBackgroundImageS = 'settings_exploreBackgroundImage_s',
  SettingsExploreParagraphS = 'settings_exploreParagraph_s',
  SettingsExploreTitleS = 'settings_exploreTitle_s',
  SettingsExtendedLogoS = 'settings_extendedLogo_s',
  SettingsLogoS = 'settings_logo_s',
  SettingsMembersApplicationEnabledI = 'settings_membersApplicationEnabled_i',
  SettingsMembersBackgroundImageS = 'settings_membersBackgroundImage_s',
  SettingsMembersParagraphS = 'settings_membersParagraph_s',
  SettingsMembersTitleS = 'settings_membersTitle_s',
  SettingsMsigApprovalAmountI = 'settings_msigApprovalAmount_i',
  SettingsMultisigEnabledI = 'settings_multisigEnabled_i',
  SettingsOrganisationBackgroundImageS = 'settings_organisationBackgroundImage_s',
  SettingsOrganisationParagraphS = 'settings_organisationParagraph_s',
  SettingsOrganisationTitleS = 'settings_organisationTitle_s',
  SettingsPatternBase64S = 'settings_patternBase64_s',
  SettingsPatternColorS = 'settings_patternColor_s',
  SettingsPatternOpacityI = 'settings_patternOpacity_i',
  SettingsPatternS = 'settings_pattern_s',
  SettingsPrimaryColorS = 'settings_primaryColor_s',
  SettingsProposalsBackgroundImageS = 'settings_proposalsBackgroundImage_s',
  SettingsProposalsCreationEnabledI = 'settings_proposalsCreationEnabled_i',
  SettingsProposalsParagraphS = 'settings_proposalsParagraph_s',
  SettingsProposalsTitleS = 'settings_proposalsTitle_s',
  SettingsRemovableBannersEnabledI = 'settings_removableBannersEnabled_i',
  SettingsSecondaryColorS = 'settings_secondaryColor_s',
  SettingsSocialChatS = 'settings_socialChat_s',
  SettingsSplashBackgroundImageS = 'settings_splashBackgroundImage_s',
  SettingsTextColorS = 'settings_textColor_s',
  SettingsTitleS = 'settings_title_s',
  SettingsUpvoteCheifDelegateCountI = 'settings_upvoteCheifDelegateCount_i',
  SettingsUpvoteCheifDelegateDurationI = 'settings_upvoteCheifDelegateDuration_i',
  SettingsUpvoteDurationI = 'settings_upvoteDuration_i',
  SettingsUpvoteHeadDelegateDurationI = 'settings_upvoteHeadDelegateDuration_i',
  SettingsUpvoteHeadDelegateRoundI = 'settings_upvoteHeadDelegateRound_i',
  SettingsUpvoteRoundsS = 'settings_upvoteRounds_s',
  SettingsUpvoteStartDateTimeS = 'settings_upvoteStartDateTime_s',
  SettingsUrlS = 'settings_url_s',
  SettingsVotingAlignmentPercentI = 'settings_votingAlignmentPercent_i',
  SettingsVotingAlignmentX100I = 'settings_votingAlignmentX100_i',
  SettingsVotingDurationSecI = 'settings_votingDurationSec_i',
  SettingsVotingDurationSecS = 'settings_votingDurationSec_s',
  SettingsVotingQuorumPercentI = 'settings_votingQuorumPercent_i',
  SettingsVotingQuorumX100I = 'settings_votingQuorumX100_i',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type MultisigPatch = {
  approvedby?: InputMaybe<Array<MemberRef>>;
  canceledby?: InputMaybe<Array<MemberRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_owner_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  executedby?: InputMaybe<Array<MemberRef>>;
  settings_communityVotingAlignmentPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingDurationSec_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingMethod_s?: InputMaybe<Scalars['String']['input']>;
  settings_communityVotingQuorumPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_daoTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_daoUrl_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_documentationButtonText_s?: InputMaybe<Scalars['String']['input']>;
  settings_documentationURL_s?: InputMaybe<Scalars['String']['input']>;
  settings_exploreBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_exploreParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_exploreTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_extendedLogo_s?: InputMaybe<Scalars['String']['input']>;
  settings_logo_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersApplicationEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_membersBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_msigApprovalAmount_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_multisigEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_organisationBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternBase64_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternOpacity_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_pattern_s?: InputMaybe<Scalars['String']['input']>;
  settings_primaryColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsCreationEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_proposalsParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_removableBannersEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_secondaryColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_socialChat_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_textColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_title_s?: InputMaybe<Scalars['String']['input']>;
  settings_upvoteCheifDelegateCount_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteCheifDelegateDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteHeadDelegateDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteHeadDelegateRound_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteRounds_s?: InputMaybe<Scalars['String']['input']>;
  settings_upvoteStartDateTime_s?: InputMaybe<Scalars['String']['input']>;
  settings_url_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingAlignmentPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingAlignmentX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingDurationSec_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingDurationSec_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingQuorumPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingQuorumX100_i?: InputMaybe<Scalars['Int64']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type MultisigRef = {
  approvedby?: InputMaybe<Array<MemberRef>>;
  canceledby?: InputMaybe<Array<MemberRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_owner_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  executedby?: InputMaybe<Array<MemberRef>>;
  settings_communityVotingAlignmentPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingDurationSec_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingMethod_s?: InputMaybe<Scalars['String']['input']>;
  settings_communityVotingQuorumPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_daoTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_daoUrl_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_documentationButtonText_s?: InputMaybe<Scalars['String']['input']>;
  settings_documentationURL_s?: InputMaybe<Scalars['String']['input']>;
  settings_exploreBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_exploreParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_exploreTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_extendedLogo_s?: InputMaybe<Scalars['String']['input']>;
  settings_logo_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersApplicationEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_membersBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_msigApprovalAmount_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_multisigEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_organisationBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternBase64_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternOpacity_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_pattern_s?: InputMaybe<Scalars['String']['input']>;
  settings_primaryColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsCreationEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_proposalsParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_removableBannersEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_secondaryColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_socialChat_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_textColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_title_s?: InputMaybe<Scalars['String']['input']>;
  settings_upvoteCheifDelegateCount_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteCheifDelegateDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteHeadDelegateDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteHeadDelegateRound_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteRounds_s?: InputMaybe<Scalars['String']['input']>;
  settings_upvoteStartDateTime_s?: InputMaybe<Scalars['String']['input']>;
  settings_url_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingAlignmentPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingAlignmentX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingDurationSec_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingDurationSec_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingQuorumPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingQuorumX100_i?: InputMaybe<Scalars['Int64']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addAlert?: Maybe<AddAlertPayload>;
  addAssignbadge?: Maybe<AddAssignbadgePayload>;
  addAssignment?: Maybe<AddAssignmentPayload>;
  addAttestation?: Maybe<AddAttestationPayload>;
  addBadge?: Maybe<AddBadgePayload>;
  addBalance?: Maybe<AddBalancePayload>;
  addBillingInfo?: Maybe<AddBillingInfoPayload>;
  addBudget?: Maybe<AddBudgetPayload>;
  addCalendar?: Maybe<AddCalendarPayload>;
  addCircle?: Maybe<AddCirclePayload>;
  addCmntSection?: Maybe<AddCmntSectionPayload>;
  addComment?: Maybe<AddCommentPayload>;
  addCursor?: Maybe<AddCursorPayload>;
  addDao?: Maybe<AddDaoPayload>;
  addDaoDraft?: Maybe<AddDaoDraftPayload>;
  addDho?: Maybe<AddDhoPayload>;
  addDoccacheConfig?: Maybe<AddDoccacheConfigPayload>;
  addEdit?: Maybe<AddEditPayload>;
  addElectnGroup?: Maybe<AddElectnGroupPayload>;
  addElectnRound?: Maybe<AddElectnRoundPayload>;
  addEvent?: Maybe<AddEventPayload>;
  addMember?: Maybe<AddMemberPayload>;
  addMemo?: Maybe<AddMemoPayload>;
  addMsigInfo?: Maybe<AddMsigInfoPayload>;
  addMultisig?: Maybe<AddMultisigPayload>;
  addNotification?: Maybe<AddNotificationPayload>;
  addPayment?: Maybe<AddPaymentPayload>;
  addPayout?: Maybe<AddPayoutPayload>;
  addPeriod?: Maybe<AddPeriodPayload>;
  addPlanManager?: Maybe<AddPlanManagerPayload>;
  addPolicy?: Maybe<AddPolicyPayload>;
  addPoll?: Maybe<AddPollPayload>;
  addPriceOffer?: Maybe<AddPriceOfferPayload>;
  addPricingPlan?: Maybe<AddPricingPlanPayload>;
  addQuestcomple?: Maybe<AddQuestcomplePayload>;
  addQuestcomplet?: Maybe<AddQuestcompletPayload>;
  addQueststart?: Maybe<AddQueststartPayload>;
  addReaction?: Maybe<AddReactionPayload>;
  addRedemption?: Maybe<AddRedemptionPayload>;
  addRole?: Maybe<AddRolePayload>;
  addSalaryband?: Maybe<AddSalarybandPayload>;
  addSettings?: Maybe<AddSettingsPayload>;
  addSuspend?: Maybe<AddSuspendPayload>;
  addTimeshare?: Maybe<AddTimesharePayload>;
  addTreasury?: Maybe<AddTreasuryPayload>;
  addTrsyPayment?: Maybe<AddTrsyPaymentPayload>;
  addTypeVersion?: Maybe<AddTypeVersionPayload>;
  addUpvtElectn?: Maybe<AddUpvtElectnPayload>;
  addUpvtVote?: Maybe<AddUpvtVotePayload>;
  addUser?: Maybe<AddUserPayload>;
  addVote?: Maybe<AddVotePayload>;
  addVoteGroup?: Maybe<AddVoteGroupPayload>;
  addVoteTally?: Maybe<AddVoteTallyPayload>;
  createCheckoutSession?: Maybe<StripeSession>;
  deleteAlert?: Maybe<DeleteAlertPayload>;
  deleteAssignbadge?: Maybe<DeleteAssignbadgePayload>;
  deleteAssignment?: Maybe<DeleteAssignmentPayload>;
  deleteAttestation?: Maybe<DeleteAttestationPayload>;
  deleteBadge?: Maybe<DeleteBadgePayload>;
  deleteBalance?: Maybe<DeleteBalancePayload>;
  deleteBillingInfo?: Maybe<DeleteBillingInfoPayload>;
  deleteBudget?: Maybe<DeleteBudgetPayload>;
  deleteCalendar?: Maybe<DeleteCalendarPayload>;
  deleteCircle?: Maybe<DeleteCirclePayload>;
  deleteCmntSection?: Maybe<DeleteCmntSectionPayload>;
  deleteComment?: Maybe<DeleteCommentPayload>;
  deleteCursor?: Maybe<DeleteCursorPayload>;
  deleteDao?: Maybe<DeleteDaoPayload>;
  deleteDaoDraft?: Maybe<DeleteDaoDraftPayload>;
  deleteDho?: Maybe<DeleteDhoPayload>;
  deleteDoccacheConfig?: Maybe<DeleteDoccacheConfigPayload>;
  deleteDocument?: Maybe<DeleteDocumentPayload>;
  deleteEdit?: Maybe<DeleteEditPayload>;
  deleteElectnGroup?: Maybe<DeleteElectnGroupPayload>;
  deleteElectnRound?: Maybe<DeleteElectnRoundPayload>;
  deleteEvent?: Maybe<DeleteEventPayload>;
  deleteMember?: Maybe<DeleteMemberPayload>;
  deleteMemo?: Maybe<DeleteMemoPayload>;
  deleteMsigInfo?: Maybe<DeleteMsigInfoPayload>;
  deleteMultisig?: Maybe<DeleteMultisigPayload>;
  deleteNotification?: Maybe<DeleteNotificationPayload>;
  deletePayment?: Maybe<DeletePaymentPayload>;
  deletePayout?: Maybe<DeletePayoutPayload>;
  deletePeriod?: Maybe<DeletePeriodPayload>;
  deletePlanManager?: Maybe<DeletePlanManagerPayload>;
  deletePolicy?: Maybe<DeletePolicyPayload>;
  deletePoll?: Maybe<DeletePollPayload>;
  deletePriceOffer?: Maybe<DeletePriceOfferPayload>;
  deletePricingPlan?: Maybe<DeletePricingPlanPayload>;
  deleteQuestcomple?: Maybe<DeleteQuestcomplePayload>;
  deleteQuestcomplet?: Maybe<DeleteQuestcompletPayload>;
  deleteQueststart?: Maybe<DeleteQueststartPayload>;
  deleteReaction?: Maybe<DeleteReactionPayload>;
  deleteRedemption?: Maybe<DeleteRedemptionPayload>;
  deleteRole?: Maybe<DeleteRolePayload>;
  deleteSalaryband?: Maybe<DeleteSalarybandPayload>;
  deleteSettings?: Maybe<DeleteSettingsPayload>;
  deleteSuspend?: Maybe<DeleteSuspendPayload>;
  deleteTimeshare?: Maybe<DeleteTimesharePayload>;
  deleteTreasury?: Maybe<DeleteTreasuryPayload>;
  deleteTrsyPayment?: Maybe<DeleteTrsyPaymentPayload>;
  deleteTypeVersion?: Maybe<DeleteTypeVersionPayload>;
  deleteUpvtElectn?: Maybe<DeleteUpvtElectnPayload>;
  deleteUpvtVote?: Maybe<DeleteUpvtVotePayload>;
  deleteUser?: Maybe<DeleteUserPayload>;
  deleteVotable?: Maybe<DeleteVotablePayload>;
  deleteVote?: Maybe<DeleteVotePayload>;
  deleteVoteGroup?: Maybe<DeleteVoteGroupPayload>;
  deleteVoteTally?: Maybe<DeleteVoteTallyPayload>;
  updateAlert?: Maybe<UpdateAlertPayload>;
  updateAssignbadge?: Maybe<UpdateAssignbadgePayload>;
  updateAssignment?: Maybe<UpdateAssignmentPayload>;
  updateAttestation?: Maybe<UpdateAttestationPayload>;
  updateBadge?: Maybe<UpdateBadgePayload>;
  updateBalance?: Maybe<UpdateBalancePayload>;
  updateBillingInfo?: Maybe<UpdateBillingInfoPayload>;
  updateBudget?: Maybe<UpdateBudgetPayload>;
  updateCalendar?: Maybe<UpdateCalendarPayload>;
  updateCircle?: Maybe<UpdateCirclePayload>;
  updateCmntSection?: Maybe<UpdateCmntSectionPayload>;
  updateComment?: Maybe<UpdateCommentPayload>;
  updateCursor?: Maybe<UpdateCursorPayload>;
  updateDao?: Maybe<UpdateDaoPayload>;
  updateDaoDraft?: Maybe<UpdateDaoDraftPayload>;
  updateDho?: Maybe<UpdateDhoPayload>;
  updateDoccacheConfig?: Maybe<UpdateDoccacheConfigPayload>;
  updateDocument?: Maybe<UpdateDocumentPayload>;
  updateEdit?: Maybe<UpdateEditPayload>;
  updateElectnGroup?: Maybe<UpdateElectnGroupPayload>;
  updateElectnRound?: Maybe<UpdateElectnRoundPayload>;
  updateEvent?: Maybe<UpdateEventPayload>;
  updateMember?: Maybe<UpdateMemberPayload>;
  updateMemo?: Maybe<UpdateMemoPayload>;
  updateMsigInfo?: Maybe<UpdateMsigInfoPayload>;
  updateMultisig?: Maybe<UpdateMultisigPayload>;
  updateNotification?: Maybe<UpdateNotificationPayload>;
  updatePayment?: Maybe<UpdatePaymentPayload>;
  updatePayout?: Maybe<UpdatePayoutPayload>;
  updatePeriod?: Maybe<UpdatePeriodPayload>;
  updatePlanManager?: Maybe<UpdatePlanManagerPayload>;
  updatePolicy?: Maybe<UpdatePolicyPayload>;
  updatePoll?: Maybe<UpdatePollPayload>;
  updatePriceOffer?: Maybe<UpdatePriceOfferPayload>;
  updatePricingPlan?: Maybe<UpdatePricingPlanPayload>;
  updateQuestcomple?: Maybe<UpdateQuestcomplePayload>;
  updateQuestcomplet?: Maybe<UpdateQuestcompletPayload>;
  updateQueststart?: Maybe<UpdateQueststartPayload>;
  updateReaction?: Maybe<UpdateReactionPayload>;
  updateRedemption?: Maybe<UpdateRedemptionPayload>;
  updateRole?: Maybe<UpdateRolePayload>;
  updateSalaryband?: Maybe<UpdateSalarybandPayload>;
  updateSettings?: Maybe<UpdateSettingsPayload>;
  updateSubscription?: Maybe<StripeAcivePlanAndSubscription>;
  updateSuspend?: Maybe<UpdateSuspendPayload>;
  updateTimeshare?: Maybe<UpdateTimesharePayload>;
  updateTreasury?: Maybe<UpdateTreasuryPayload>;
  updateTrsyPayment?: Maybe<UpdateTrsyPaymentPayload>;
  updateTypeVersion?: Maybe<UpdateTypeVersionPayload>;
  updateUpvtElectn?: Maybe<UpdateUpvtElectnPayload>;
  updateUpvtVote?: Maybe<UpdateUpvtVotePayload>;
  updateUser?: Maybe<UpdateUserPayload>;
  updateVotable?: Maybe<UpdateVotablePayload>;
  updateVote?: Maybe<UpdateVotePayload>;
  updateVoteGroup?: Maybe<UpdateVoteGroupPayload>;
  updateVoteTally?: Maybe<UpdateVoteTallyPayload>;
};


export type MutationAddAlertArgs = {
  input: Array<AddAlertInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddAssignbadgeArgs = {
  input: Array<AddAssignbadgeInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddAssignmentArgs = {
  input: Array<AddAssignmentInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddAttestationArgs = {
  input: Array<AddAttestationInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddBadgeArgs = {
  input: Array<AddBadgeInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddBalanceArgs = {
  input: Array<AddBalanceInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddBillingInfoArgs = {
  input: Array<AddBillingInfoInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddBudgetArgs = {
  input: Array<AddBudgetInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddCalendarArgs = {
  input: Array<AddCalendarInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddCircleArgs = {
  input: Array<AddCircleInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddCmntSectionArgs = {
  input: Array<AddCmntSectionInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddCommentArgs = {
  input: Array<AddCommentInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddCursorArgs = {
  input: Array<AddCursorInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddDaoArgs = {
  input: Array<AddDaoInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddDaoDraftArgs = {
  input: Array<AddDaoDraftInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddDhoArgs = {
  input: Array<AddDhoInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddDoccacheConfigArgs = {
  input: Array<AddDoccacheConfigInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddEditArgs = {
  input: Array<AddEditInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddElectnGroupArgs = {
  input: Array<AddElectnGroupInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddElectnRoundArgs = {
  input: Array<AddElectnRoundInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddEventArgs = {
  input: Array<AddEventInput>;
};


export type MutationAddMemberArgs = {
  input: Array<AddMemberInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddMemoArgs = {
  input: Array<AddMemoInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddMsigInfoArgs = {
  input: Array<AddMsigInfoInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddMultisigArgs = {
  input: Array<AddMultisigInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddNotificationArgs = {
  input: Array<AddNotificationInput>;
};


export type MutationAddPaymentArgs = {
  input: Array<AddPaymentInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddPayoutArgs = {
  input: Array<AddPayoutInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddPeriodArgs = {
  input: Array<AddPeriodInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddPlanManagerArgs = {
  input: Array<AddPlanManagerInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddPolicyArgs = {
  input: Array<AddPolicyInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddPollArgs = {
  input: Array<AddPollInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddPriceOfferArgs = {
  input: Array<AddPriceOfferInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddPricingPlanArgs = {
  input: Array<AddPricingPlanInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddQuestcompleArgs = {
  input: Array<AddQuestcompleInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddQuestcompletArgs = {
  input: Array<AddQuestcompletInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddQueststartArgs = {
  input: Array<AddQueststartInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddReactionArgs = {
  input: Array<AddReactionInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddRedemptionArgs = {
  input: Array<AddRedemptionInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddRoleArgs = {
  input: Array<AddRoleInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddSalarybandArgs = {
  input: Array<AddSalarybandInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddSettingsArgs = {
  input: Array<AddSettingsInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddSuspendArgs = {
  input: Array<AddSuspendInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddTimeshareArgs = {
  input: Array<AddTimeshareInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddTreasuryArgs = {
  input: Array<AddTreasuryInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddTrsyPaymentArgs = {
  input: Array<AddTrsyPaymentInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddTypeVersionArgs = {
  input: Array<AddTypeVersionInput>;
};


export type MutationAddUpvtElectnArgs = {
  input: Array<AddUpvtElectnInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddUpvtVoteArgs = {
  input: Array<AddUpvtVoteInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddUserArgs = {
  input: Array<AddUserInput>;
};


export type MutationAddVoteArgs = {
  input: Array<AddVoteInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddVoteGroupArgs = {
  input: Array<AddVoteGroupInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationAddVoteTallyArgs = {
  input: Array<AddVoteTallyInput>;
  upsert?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateCheckoutSessionArgs = {
  cancelUrl?: InputMaybe<Scalars['String']['input']>;
  daoId?: InputMaybe<Scalars['String']['input']>;
  daoName: Scalars['String']['input'];
  daoType: Scalars['String']['input'];
  daoUrl: Scalars['String']['input'];
  priceId: Scalars['String']['input'];
  redirectDomain?: InputMaybe<Scalars['String']['input']>;
  successUrl?: InputMaybe<Scalars['String']['input']>;
};


export type MutationDeleteAlertArgs = {
  filter: AlertFilter;
};


export type MutationDeleteAssignbadgeArgs = {
  filter: AssignbadgeFilter;
};


export type MutationDeleteAssignmentArgs = {
  filter: AssignmentFilter;
};


export type MutationDeleteAttestationArgs = {
  filter: AttestationFilter;
};


export type MutationDeleteBadgeArgs = {
  filter: BadgeFilter;
};


export type MutationDeleteBalanceArgs = {
  filter: BalanceFilter;
};


export type MutationDeleteBillingInfoArgs = {
  filter: BillingInfoFilter;
};


export type MutationDeleteBudgetArgs = {
  filter: BudgetFilter;
};


export type MutationDeleteCalendarArgs = {
  filter: CalendarFilter;
};


export type MutationDeleteCircleArgs = {
  filter: CircleFilter;
};


export type MutationDeleteCmntSectionArgs = {
  filter: CmntSectionFilter;
};


export type MutationDeleteCommentArgs = {
  filter: CommentFilter;
};


export type MutationDeleteCursorArgs = {
  filter: CursorFilter;
};


export type MutationDeleteDaoArgs = {
  filter: DaoFilter;
};


export type MutationDeleteDaoDraftArgs = {
  filter: DaoDraftFilter;
};


export type MutationDeleteDhoArgs = {
  filter: DhoFilter;
};


export type MutationDeleteDoccacheConfigArgs = {
  filter: DoccacheConfigFilter;
};


export type MutationDeleteDocumentArgs = {
  filter: DocumentFilter;
};


export type MutationDeleteEditArgs = {
  filter: EditFilter;
};


export type MutationDeleteElectnGroupArgs = {
  filter: ElectnGroupFilter;
};


export type MutationDeleteElectnRoundArgs = {
  filter: ElectnRoundFilter;
};


export type MutationDeleteEventArgs = {
  filter: EventFilter;
};


export type MutationDeleteMemberArgs = {
  filter: MemberFilter;
};


export type MutationDeleteMemoArgs = {
  filter: MemoFilter;
};


export type MutationDeleteMsigInfoArgs = {
  filter: MsigInfoFilter;
};


export type MutationDeleteMultisigArgs = {
  filter: MultisigFilter;
};


export type MutationDeleteNotificationArgs = {
  filter: NotificationFilter;
};


export type MutationDeletePaymentArgs = {
  filter: PaymentFilter;
};


export type MutationDeletePayoutArgs = {
  filter: PayoutFilter;
};


export type MutationDeletePeriodArgs = {
  filter: PeriodFilter;
};


export type MutationDeletePlanManagerArgs = {
  filter: PlanManagerFilter;
};


export type MutationDeletePolicyArgs = {
  filter: PolicyFilter;
};


export type MutationDeletePollArgs = {
  filter: PollFilter;
};


export type MutationDeletePriceOfferArgs = {
  filter: PriceOfferFilter;
};


export type MutationDeletePricingPlanArgs = {
  filter: PricingPlanFilter;
};


export type MutationDeleteQuestcompleArgs = {
  filter: QuestcompleFilter;
};


export type MutationDeleteQuestcompletArgs = {
  filter: QuestcompletFilter;
};


export type MutationDeleteQueststartArgs = {
  filter: QueststartFilter;
};


export type MutationDeleteReactionArgs = {
  filter: ReactionFilter;
};


export type MutationDeleteRedemptionArgs = {
  filter: RedemptionFilter;
};


export type MutationDeleteRoleArgs = {
  filter: RoleFilter;
};


export type MutationDeleteSalarybandArgs = {
  filter: SalarybandFilter;
};


export type MutationDeleteSettingsArgs = {
  filter: SettingsFilter;
};


export type MutationDeleteSuspendArgs = {
  filter: SuspendFilter;
};


export type MutationDeleteTimeshareArgs = {
  filter: TimeshareFilter;
};


export type MutationDeleteTreasuryArgs = {
  filter: TreasuryFilter;
};


export type MutationDeleteTrsyPaymentArgs = {
  filter: TrsyPaymentFilter;
};


export type MutationDeleteTypeVersionArgs = {
  filter: TypeVersionFilter;
};


export type MutationDeleteUpvtElectnArgs = {
  filter: UpvtElectnFilter;
};


export type MutationDeleteUpvtVoteArgs = {
  filter: UpvtVoteFilter;
};


export type MutationDeleteUserArgs = {
  filter: UserFilter;
};


export type MutationDeleteVotableArgs = {
  filter: VotableFilter;
};


export type MutationDeleteVoteArgs = {
  filter: VoteFilter;
};


export type MutationDeleteVoteGroupArgs = {
  filter: VoteGroupFilter;
};


export type MutationDeleteVoteTallyArgs = {
  filter: VoteTallyFilter;
};


export type MutationUpdateAlertArgs = {
  input: UpdateAlertInput;
};


export type MutationUpdateAssignbadgeArgs = {
  input: UpdateAssignbadgeInput;
};


export type MutationUpdateAssignmentArgs = {
  input: UpdateAssignmentInput;
};


export type MutationUpdateAttestationArgs = {
  input: UpdateAttestationInput;
};


export type MutationUpdateBadgeArgs = {
  input: UpdateBadgeInput;
};


export type MutationUpdateBalanceArgs = {
  input: UpdateBalanceInput;
};


export type MutationUpdateBillingInfoArgs = {
  input: UpdateBillingInfoInput;
};


export type MutationUpdateBudgetArgs = {
  input: UpdateBudgetInput;
};


export type MutationUpdateCalendarArgs = {
  input: UpdateCalendarInput;
};


export type MutationUpdateCircleArgs = {
  input: UpdateCircleInput;
};


export type MutationUpdateCmntSectionArgs = {
  input: UpdateCmntSectionInput;
};


export type MutationUpdateCommentArgs = {
  input: UpdateCommentInput;
};


export type MutationUpdateCursorArgs = {
  input: UpdateCursorInput;
};


export type MutationUpdateDaoArgs = {
  input: UpdateDaoInput;
};


export type MutationUpdateDaoDraftArgs = {
  input: UpdateDaoDraftInput;
};


export type MutationUpdateDhoArgs = {
  input: UpdateDhoInput;
};


export type MutationUpdateDoccacheConfigArgs = {
  input: UpdateDoccacheConfigInput;
};


export type MutationUpdateDocumentArgs = {
  input: UpdateDocumentInput;
};


export type MutationUpdateEditArgs = {
  input: UpdateEditInput;
};


export type MutationUpdateElectnGroupArgs = {
  input: UpdateElectnGroupInput;
};


export type MutationUpdateElectnRoundArgs = {
  input: UpdateElectnRoundInput;
};


export type MutationUpdateEventArgs = {
  input: UpdateEventInput;
};


export type MutationUpdateMemberArgs = {
  input: UpdateMemberInput;
};


export type MutationUpdateMemoArgs = {
  input: UpdateMemoInput;
};


export type MutationUpdateMsigInfoArgs = {
  input: UpdateMsigInfoInput;
};


export type MutationUpdateMultisigArgs = {
  input: UpdateMultisigInput;
};


export type MutationUpdateNotificationArgs = {
  input: UpdateNotificationInput;
};


export type MutationUpdatePaymentArgs = {
  input: UpdatePaymentInput;
};


export type MutationUpdatePayoutArgs = {
  input: UpdatePayoutInput;
};


export type MutationUpdatePeriodArgs = {
  input: UpdatePeriodInput;
};


export type MutationUpdatePlanManagerArgs = {
  input: UpdatePlanManagerInput;
};


export type MutationUpdatePolicyArgs = {
  input: UpdatePolicyInput;
};


export type MutationUpdatePollArgs = {
  input: UpdatePollInput;
};


export type MutationUpdatePriceOfferArgs = {
  input: UpdatePriceOfferInput;
};


export type MutationUpdatePricingPlanArgs = {
  input: UpdatePricingPlanInput;
};


export type MutationUpdateQuestcompleArgs = {
  input: UpdateQuestcompleInput;
};


export type MutationUpdateQuestcompletArgs = {
  input: UpdateQuestcompletInput;
};


export type MutationUpdateQueststartArgs = {
  input: UpdateQueststartInput;
};


export type MutationUpdateReactionArgs = {
  input: UpdateReactionInput;
};


export type MutationUpdateRedemptionArgs = {
  input: UpdateRedemptionInput;
};


export type MutationUpdateRoleArgs = {
  input: UpdateRoleInput;
};


export type MutationUpdateSalarybandArgs = {
  input: UpdateSalarybandInput;
};


export type MutationUpdateSettingsArgs = {
  input: UpdateSettingsInput;
};


export type MutationUpdateSubscriptionArgs = {
  daoType?: InputMaybe<Scalars['String']['input']>;
  priceId: Scalars['String']['input'];
  subscriptionId: Scalars['String']['input'];
  subscriptionItemId: Scalars['String']['input'];
};


export type MutationUpdateSuspendArgs = {
  input: UpdateSuspendInput;
};


export type MutationUpdateTimeshareArgs = {
  input: UpdateTimeshareInput;
};


export type MutationUpdateTreasuryArgs = {
  input: UpdateTreasuryInput;
};


export type MutationUpdateTrsyPaymentArgs = {
  input: UpdateTrsyPaymentInput;
};


export type MutationUpdateTypeVersionArgs = {
  input: UpdateTypeVersionInput;
};


export type MutationUpdateUpvtElectnArgs = {
  input: UpdateUpvtElectnInput;
};


export type MutationUpdateUpvtVoteArgs = {
  input: UpdateUpvtVoteInput;
};


export type MutationUpdateUserArgs = {
  input: UpdateUserInput;
};


export type MutationUpdateVotableArgs = {
  input: UpdateVotableInput;
};


export type MutationUpdateVoteArgs = {
  input: UpdateVoteInput;
};


export type MutationUpdateVoteGroupArgs = {
  input: UpdateVoteGroupInput;
};


export type MutationUpdateVoteTallyArgs = {
  input: UpdateVoteTallyInput;
};

export type NearFilter = {
  coordinate: PointRef;
  distance: Scalars['Float']['input'];
};

export type Notification = {
  __typename?: 'Notification';
  content: Scalars['String']['output'];
  event: Event;
  id: Scalars['ID']['output'];
  read: Scalars['Boolean']['output'];
  time: Scalars['DateTime']['output'];
  user: User;
};


export type NotificationEventArgs = {
  filter?: InputMaybe<EventFilter>;
};


export type NotificationUserArgs = {
  filter?: InputMaybe<UserFilter>;
};

export type NotificationAggregateResult = {
  __typename?: 'NotificationAggregateResult';
  contentMax?: Maybe<Scalars['String']['output']>;
  contentMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  timeMax?: Maybe<Scalars['DateTime']['output']>;
  timeMin?: Maybe<Scalars['DateTime']['output']>;
};

export type NotificationFilter = {
  and?: InputMaybe<Array<InputMaybe<NotificationFilter>>>;
  has?: InputMaybe<Array<InputMaybe<NotificationHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']['input']>>;
  not?: InputMaybe<NotificationFilter>;
  or?: InputMaybe<Array<InputMaybe<NotificationFilter>>>;
  read?: InputMaybe<Scalars['Boolean']['input']>;
  time?: InputMaybe<DateTimeFilter>;
};

export enum NotificationHasFilter {
  Content = 'content',
  Event = 'event',
  Read = 'read',
  Time = 'time',
  User = 'user'
}

export type NotificationOrder = {
  asc?: InputMaybe<NotificationOrderable>;
  desc?: InputMaybe<NotificationOrderable>;
  then?: InputMaybe<NotificationOrder>;
};

export enum NotificationOrderable {
  Content = 'content',
  Time = 'time'
}

export type NotificationPatch = {
  content?: InputMaybe<Scalars['String']['input']>;
  event?: InputMaybe<EventRef>;
  read?: InputMaybe<Scalars['Boolean']['input']>;
  time?: InputMaybe<Scalars['DateTime']['input']>;
  user?: InputMaybe<UserRef>;
};

export type NotificationRef = {
  content?: InputMaybe<Scalars['String']['input']>;
  event?: InputMaybe<EventRef>;
  id?: InputMaybe<Scalars['ID']['input']>;
  read?: InputMaybe<Scalars['Boolean']['input']>;
  time?: InputMaybe<Scalars['DateTime']['input']>;
  user?: InputMaybe<UserRef>;
};

export type Payment = Document & {
  __typename?: 'Payment';
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_amount_a?: Maybe<Scalars['String']['output']>;
  details_assignmentHash_c?: Maybe<Scalars['String']['output']>;
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  details_memo_s?: Maybe<Scalars['String']['output']>;
  details_paymentDate_t?: Maybe<Scalars['DateTime']['output']>;
  details_payoutHash_c?: Maybe<Scalars['String']['output']>;
  details_periodHash_c?: Maybe<Scalars['String']['output']>;
  details_recipientHash_c?: Maybe<Scalars['String']['output']>;
  details_recipient_n?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};

export type PaymentAggregateResult = {
  __typename?: 'PaymentAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_amount_aMax?: Maybe<Scalars['String']['output']>;
  details_amount_aMin?: Maybe<Scalars['String']['output']>;
  details_assignmentHash_cMax?: Maybe<Scalars['String']['output']>;
  details_assignmentHash_cMin?: Maybe<Scalars['String']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  details_memo_sMax?: Maybe<Scalars['String']['output']>;
  details_memo_sMin?: Maybe<Scalars['String']['output']>;
  details_paymentDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_paymentDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  details_payoutHash_cMax?: Maybe<Scalars['String']['output']>;
  details_payoutHash_cMin?: Maybe<Scalars['String']['output']>;
  details_periodHash_cMax?: Maybe<Scalars['String']['output']>;
  details_periodHash_cMin?: Maybe<Scalars['String']['output']>;
  details_recipientHash_cMax?: Maybe<Scalars['String']['output']>;
  details_recipientHash_cMin?: Maybe<Scalars['String']['output']>;
  details_recipient_nMax?: Maybe<Scalars['String']['output']>;
  details_recipient_nMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type PaymentFilter = {
  and?: InputMaybe<Array<InputMaybe<PaymentFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_amount_a?: InputMaybe<StringTermFilter>;
  details_assignmentHash_c?: InputMaybe<StringExactFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_memo_s?: InputMaybe<StringRegExpFilter>;
  details_paymentDate_t?: InputMaybe<DateTimeFilter>;
  details_payoutHash_c?: InputMaybe<StringExactFilter>;
  details_periodHash_c?: InputMaybe<StringExactFilter>;
  details_recipientHash_c?: InputMaybe<StringExactFilter>;
  details_recipient_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<PaymentHasFilter>>>;
  not?: InputMaybe<PaymentFilter>;
  or?: InputMaybe<Array<InputMaybe<PaymentFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum PaymentHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAmountA = 'details_amount_a',
  DetailsAssignmentHashC = 'details_assignmentHash_c',
  DetailsDaoI = 'details_dao_i',
  DetailsMemoS = 'details_memo_s',
  DetailsPaymentDateT = 'details_paymentDate_t',
  DetailsPayoutHashC = 'details_payoutHash_c',
  DetailsPeriodHashC = 'details_periodHash_c',
  DetailsRecipientHashC = 'details_recipientHash_c',
  DetailsRecipientN = 'details_recipient_n',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PaymentOrder = {
  asc?: InputMaybe<PaymentOrderable>;
  desc?: InputMaybe<PaymentOrderable>;
  then?: InputMaybe<PaymentOrder>;
};

export enum PaymentOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAmountA = 'details_amount_a',
  DetailsAssignmentHashC = 'details_assignmentHash_c',
  DetailsDaoI = 'details_dao_i',
  DetailsMemoS = 'details_memo_s',
  DetailsPaymentDateT = 'details_paymentDate_t',
  DetailsPayoutHashC = 'details_payoutHash_c',
  DetailsPeriodHashC = 'details_periodHash_c',
  DetailsRecipientHashC = 'details_recipientHash_c',
  DetailsRecipientN = 'details_recipient_n',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PaymentPatch = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_amount_a?: InputMaybe<Scalars['String']['input']>;
  details_assignmentHash_c?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_memo_s?: InputMaybe<Scalars['String']['input']>;
  details_paymentDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_payoutHash_c?: InputMaybe<Scalars['String']['input']>;
  details_periodHash_c?: InputMaybe<Scalars['String']['input']>;
  details_recipientHash_c?: InputMaybe<Scalars['String']['input']>;
  details_recipient_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PaymentRef = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_amount_a?: InputMaybe<Scalars['String']['input']>;
  details_assignmentHash_c?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_memo_s?: InputMaybe<Scalars['String']['input']>;
  details_paymentDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_payoutHash_c?: InputMaybe<Scalars['String']['input']>;
  details_periodHash_c?: InputMaybe<Scalars['String']['input']>;
  details_recipientHash_c?: InputMaybe<Scalars['String']['input']>;
  details_recipient_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type Payout = Document & Votable & {
  __typename?: 'Payout';
  ballotOptions_abstain_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']['output']>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']['output']>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  completed?: Maybe<Array<Payout>>;
  completedAggregate?: Maybe<PayoutAggregateResult>;
  completedby?: Maybe<Array<Payout>>;
  completedbyAggregate?: Maybe<PayoutAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_a?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_a?: Maybe<Scalars['String']['output']>;
  details_bypassEscrow_i?: Maybe<Scalars['Int64']['output']>;
  details_content_s?: Maybe<Scalars['String']['output']>;
  details_contributionDate_t?: Maybe<Scalars['DateTime']['output']>;
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_i?: Maybe<Scalars['Int64']['output']>;
  details_description_s?: Maybe<Scalars['String']['output']>;
  details_endPeriod_i?: Maybe<Scalars['Int64']['output']>;
  details_husdAmount_a?: Maybe<Scalars['String']['output']>;
  details_hvoiceAmount_a?: Maybe<Scalars['String']['output']>;
  details_hyphaAmount_a?: Maybe<Scalars['String']['output']>;
  details_instantHusdPercX100_i?: Maybe<Scalars['Int64']['output']>;
  details_isCustom_i?: Maybe<Scalars['Int64']['output']>;
  details_owner_n?: Maybe<Scalars['String']['output']>;
  details_paymentDate_t?: Maybe<Scalars['DateTime']['output']>;
  details_pegAmount_a?: Maybe<Scalars['String']['output']>;
  details_periodCount_i?: Maybe<Scalars['Int64']['output']>;
  details_proposalSubtype_n?: Maybe<Scalars['String']['output']>;
  details_proposalType_n?: Maybe<Scalars['String']['output']>;
  details_proposer_n?: Maybe<Scalars['String']['output']>;
  details_questStart_i?: Maybe<Scalars['Int64']['output']>;
  details_recipient_n?: Maybe<Scalars['String']['output']>;
  details_rewardAmount_a?: Maybe<Scalars['String']['output']>;
  details_seedsAmount_a?: Maybe<Scalars['String']['output']>;
  details_seedsEscrowAmount_a?: Maybe<Scalars['String']['output']>;
  details_seedsInstantAmount_a?: Maybe<Scalars['String']['output']>;
  details_startPeriod_c?: Maybe<Scalars['String']['output']>;
  details_startPeriod_i?: Maybe<Scalars['Int64']['output']>;
  details_state_s?: Maybe<Scalars['String']['output']>;
  details_title_s?: Maybe<Scalars['String']['output']>;
  details_url_s?: Maybe<Scalars['String']['output']>;
  details_usdAmount_a?: Maybe<Scalars['String']['output']>;
  details_voiceAmount_a?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  lockedby?: Maybe<Array<Payout>>;
  lockedbyAggregate?: Maybe<PayoutAggregateResult>;
  ownedby?: Maybe<Array<Document>>;
  ownedbyAggregate?: Maybe<DocumentAggregateResult>;
  payment?: Maybe<Array<Payment>>;
  paymentAggregate?: Maybe<PaymentAggregateResult>;
  queststart?: Maybe<Array<Payout>>;
  queststartAggregate?: Maybe<PayoutAggregateResult>;
  start?: Maybe<Array<Period>>;
  startAggregate?: Maybe<PeriodAggregateResult>;
  system_ballotId_n?: Maybe<Scalars['String']['output']>;
  system_clientVersion_s?: Maybe<Scalars['String']['output']>;
  system_commentName_n?: Maybe<Scalars['String']['output']>;
  system_contractVersion_s?: Maybe<Scalars['String']['output']>;
  system_description_s?: Maybe<Scalars['String']['output']>;
  system_legacyObjectCreatedDate_t?: Maybe<Scalars['DateTime']['output']>;
  system_legacyObjectId_i?: Maybe<Scalars['Int64']['output']>;
  system_legacyObjectScope_n?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type PayoutCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type PayoutCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type PayoutCompletedArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PayoutOrder>;
};


export type PayoutCompletedAggregateArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type PayoutCompletedbyArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PayoutOrder>;
};


export type PayoutCompletedbyAggregateArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type PayoutDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type PayoutDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type PayoutLockedbyArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PayoutOrder>;
};


export type PayoutLockedbyAggregateArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type PayoutOwnedbyArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type PayoutOwnedbyAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type PayoutPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PaymentOrder>;
};


export type PayoutPaymentAggregateArgs = {
  filter?: InputMaybe<PaymentFilter>;
};


export type PayoutQueststartArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PayoutOrder>;
};


export type PayoutQueststartAggregateArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type PayoutStartArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};


export type PayoutStartAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type PayoutVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type PayoutVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type PayoutVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type PayoutVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type PayoutAggregateResult = {
  __typename?: 'PayoutAggregateResult';
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']['output']>;
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']['output']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_aMin?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']['output']>;
  details_bypassEscrow_iAvg?: Maybe<Scalars['Float']['output']>;
  details_bypassEscrow_iMax?: Maybe<Scalars['Int64']['output']>;
  details_bypassEscrow_iMin?: Maybe<Scalars['Int64']['output']>;
  details_bypassEscrow_iSum?: Maybe<Scalars['Int64']['output']>;
  details_content_sMax?: Maybe<Scalars['String']['output']>;
  details_content_sMin?: Maybe<Scalars['String']['output']>;
  details_contributionDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_contributionDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_deferredPercX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_description_sMax?: Maybe<Scalars['String']['output']>;
  details_description_sMin?: Maybe<Scalars['String']['output']>;
  details_endPeriod_iAvg?: Maybe<Scalars['Float']['output']>;
  details_endPeriod_iMax?: Maybe<Scalars['Int64']['output']>;
  details_endPeriod_iMin?: Maybe<Scalars['Int64']['output']>;
  details_endPeriod_iSum?: Maybe<Scalars['Int64']['output']>;
  details_husdAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_husdAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_hvoiceAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_hvoiceAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_hyphaAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_hyphaAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_instantHusdPercX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_instantHusdPercX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_instantHusdPercX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_instantHusdPercX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_isCustom_iAvg?: Maybe<Scalars['Float']['output']>;
  details_isCustom_iMax?: Maybe<Scalars['Int64']['output']>;
  details_isCustom_iMin?: Maybe<Scalars['Int64']['output']>;
  details_isCustom_iSum?: Maybe<Scalars['Int64']['output']>;
  details_owner_nMax?: Maybe<Scalars['String']['output']>;
  details_owner_nMin?: Maybe<Scalars['String']['output']>;
  details_paymentDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_paymentDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  details_pegAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_pegAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_periodCount_iAvg?: Maybe<Scalars['Float']['output']>;
  details_periodCount_iMax?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iMin?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iSum?: Maybe<Scalars['Int64']['output']>;
  details_proposalSubtype_nMax?: Maybe<Scalars['String']['output']>;
  details_proposalSubtype_nMin?: Maybe<Scalars['String']['output']>;
  details_proposalType_nMax?: Maybe<Scalars['String']['output']>;
  details_proposalType_nMin?: Maybe<Scalars['String']['output']>;
  details_proposer_nMax?: Maybe<Scalars['String']['output']>;
  details_proposer_nMin?: Maybe<Scalars['String']['output']>;
  details_questStart_iAvg?: Maybe<Scalars['Float']['output']>;
  details_questStart_iMax?: Maybe<Scalars['Int64']['output']>;
  details_questStart_iMin?: Maybe<Scalars['Int64']['output']>;
  details_questStart_iSum?: Maybe<Scalars['Int64']['output']>;
  details_recipient_nMax?: Maybe<Scalars['String']['output']>;
  details_recipient_nMin?: Maybe<Scalars['String']['output']>;
  details_rewardAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_rewardAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_seedsAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_seedsAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_seedsEscrowAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_seedsEscrowAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_seedsInstantAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_seedsInstantAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_startPeriod_cMax?: Maybe<Scalars['String']['output']>;
  details_startPeriod_cMin?: Maybe<Scalars['String']['output']>;
  details_startPeriod_iAvg?: Maybe<Scalars['Float']['output']>;
  details_startPeriod_iMax?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_iMin?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_iSum?: Maybe<Scalars['Int64']['output']>;
  details_state_sMax?: Maybe<Scalars['String']['output']>;
  details_state_sMin?: Maybe<Scalars['String']['output']>;
  details_title_sMax?: Maybe<Scalars['String']['output']>;
  details_title_sMin?: Maybe<Scalars['String']['output']>;
  details_url_sMax?: Maybe<Scalars['String']['output']>;
  details_url_sMin?: Maybe<Scalars['String']['output']>;
  details_usdAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_usdAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_voiceAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_voiceAmount_aMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_ballotId_nMax?: Maybe<Scalars['String']['output']>;
  system_ballotId_nMin?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_commentName_nMax?: Maybe<Scalars['String']['output']>;
  system_commentName_nMin?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_description_sMax?: Maybe<Scalars['String']['output']>;
  system_description_sMin?: Maybe<Scalars['String']['output']>;
  system_legacyObjectCreatedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_legacyObjectCreatedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  system_legacyObjectId_iAvg?: Maybe<Scalars['Float']['output']>;
  system_legacyObjectId_iMax?: Maybe<Scalars['Int64']['output']>;
  system_legacyObjectId_iMin?: Maybe<Scalars['Int64']['output']>;
  system_legacyObjectId_iSum?: Maybe<Scalars['Int64']['output']>;
  system_legacyObjectScope_nMax?: Maybe<Scalars['String']['output']>;
  system_legacyObjectScope_nMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type PayoutFilter = {
  and?: InputMaybe<Array<InputMaybe<PayoutFilter>>>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_a?: InputMaybe<StringTermFilter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_bypassEscrow_i?: InputMaybe<Int64Filter>;
  details_content_s?: InputMaybe<StringRegExpFilter>;
  details_contributionDate_t?: InputMaybe<DateTimeFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_deferredPercX100_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_endPeriod_i?: InputMaybe<Int64Filter>;
  details_husdAmount_a?: InputMaybe<StringTermFilter>;
  details_hvoiceAmount_a?: InputMaybe<StringTermFilter>;
  details_hyphaAmount_a?: InputMaybe<StringTermFilter>;
  details_instantHusdPercX100_i?: InputMaybe<Int64Filter>;
  details_isCustom_i?: InputMaybe<Int64Filter>;
  details_owner_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_paymentDate_t?: InputMaybe<DateTimeFilter>;
  details_pegAmount_a?: InputMaybe<StringTermFilter>;
  details_periodCount_i?: InputMaybe<Int64Filter>;
  details_proposalSubtype_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_proposalType_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_proposer_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_questStart_i?: InputMaybe<Int64Filter>;
  details_recipient_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_rewardAmount_a?: InputMaybe<StringTermFilter>;
  details_seedsAmount_a?: InputMaybe<StringTermFilter>;
  details_seedsEscrowAmount_a?: InputMaybe<StringTermFilter>;
  details_seedsInstantAmount_a?: InputMaybe<StringTermFilter>;
  details_startPeriod_c?: InputMaybe<StringExactFilter>;
  details_startPeriod_i?: InputMaybe<Int64Filter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_url_s?: InputMaybe<StringRegExpFilter>;
  details_usdAmount_a?: InputMaybe<StringTermFilter>;
  details_voiceAmount_a?: InputMaybe<StringTermFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<PayoutHasFilter>>>;
  not?: InputMaybe<PayoutFilter>;
  or?: InputMaybe<Array<InputMaybe<PayoutFilter>>>;
  system_ballotId_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_legacyObjectCreatedDate_t?: InputMaybe<DateTimeFilter>;
  system_legacyObjectId_i?: InputMaybe<Int64Filter>;
  system_legacyObjectScope_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum PayoutHasFilter {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Cmntsect = 'cmntsect',
  Completed = 'completed',
  Completedby = 'completedby',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsBypassEscrowI = 'details_bypassEscrow_i',
  DetailsContentS = 'details_content_s',
  DetailsContributionDateT = 'details_contributionDate_t',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsHusdAmountA = 'details_husdAmount_a',
  DetailsHvoiceAmountA = 'details_hvoiceAmount_a',
  DetailsHyphaAmountA = 'details_hyphaAmount_a',
  DetailsInstantHusdPercX100I = 'details_instantHusdPercX100_i',
  DetailsIsCustomI = 'details_isCustom_i',
  DetailsOwnerN = 'details_owner_n',
  DetailsPaymentDateT = 'details_paymentDate_t',
  DetailsPegAmountA = 'details_pegAmount_a',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsProposalSubtypeN = 'details_proposalSubtype_n',
  DetailsProposalTypeN = 'details_proposalType_n',
  DetailsProposerN = 'details_proposer_n',
  DetailsQuestStartI = 'details_questStart_i',
  DetailsRecipientN = 'details_recipient_n',
  DetailsRewardAmountA = 'details_rewardAmount_a',
  DetailsSeedsAmountA = 'details_seedsAmount_a',
  DetailsSeedsEscrowAmountA = 'details_seedsEscrowAmount_a',
  DetailsSeedsInstantAmountA = 'details_seedsInstantAmount_a',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DetailsUsdAmountA = 'details_usdAmount_a',
  DetailsVoiceAmountA = 'details_voiceAmount_a',
  DocId = 'docId',
  Lockedby = 'lockedby',
  Ownedby = 'ownedby',
  Payment = 'payment',
  Queststart = 'queststart',
  Start = 'start',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemLegacyObjectCreatedDateT = 'system_legacyObjectCreatedDate_t',
  SystemLegacyObjectIdI = 'system_legacyObjectId_i',
  SystemLegacyObjectScopeN = 'system_legacyObjectScope_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type PayoutOrder = {
  asc?: InputMaybe<PayoutOrderable>;
  desc?: InputMaybe<PayoutOrderable>;
  then?: InputMaybe<PayoutOrder>;
};

export enum PayoutOrderable {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsBypassEscrowI = 'details_bypassEscrow_i',
  DetailsContentS = 'details_content_s',
  DetailsContributionDateT = 'details_contributionDate_t',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsHusdAmountA = 'details_husdAmount_a',
  DetailsHvoiceAmountA = 'details_hvoiceAmount_a',
  DetailsHyphaAmountA = 'details_hyphaAmount_a',
  DetailsInstantHusdPercX100I = 'details_instantHusdPercX100_i',
  DetailsIsCustomI = 'details_isCustom_i',
  DetailsOwnerN = 'details_owner_n',
  DetailsPaymentDateT = 'details_paymentDate_t',
  DetailsPegAmountA = 'details_pegAmount_a',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsProposalSubtypeN = 'details_proposalSubtype_n',
  DetailsProposalTypeN = 'details_proposalType_n',
  DetailsProposerN = 'details_proposer_n',
  DetailsQuestStartI = 'details_questStart_i',
  DetailsRecipientN = 'details_recipient_n',
  DetailsRewardAmountA = 'details_rewardAmount_a',
  DetailsSeedsAmountA = 'details_seedsAmount_a',
  DetailsSeedsEscrowAmountA = 'details_seedsEscrowAmount_a',
  DetailsSeedsInstantAmountA = 'details_seedsInstantAmount_a',
  DetailsStartPeriodC = 'details_startPeriod_c',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DetailsUsdAmountA = 'details_usdAmount_a',
  DetailsVoiceAmountA = 'details_voiceAmount_a',
  DocId = 'docId',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemLegacyObjectCreatedDateT = 'system_legacyObjectCreatedDate_t',
  SystemLegacyObjectIdI = 'system_legacyObjectId_i',
  SystemLegacyObjectScopeN = 'system_legacyObjectScope_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PayoutPatch = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completed?: InputMaybe<Array<PayoutRef>>;
  completedby?: InputMaybe<Array<PayoutRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_bypassEscrow_i?: InputMaybe<Scalars['Int64']['input']>;
  details_content_s?: InputMaybe<Scalars['String']['input']>;
  details_contributionDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_husdAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_hvoiceAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_hyphaAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_instantHusdPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_isCustom_i?: InputMaybe<Scalars['Int64']['input']>;
  details_owner_n?: InputMaybe<Scalars['String']['input']>;
  details_paymentDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_proposalSubtype_n?: InputMaybe<Scalars['String']['input']>;
  details_proposalType_n?: InputMaybe<Scalars['String']['input']>;
  details_proposer_n?: InputMaybe<Scalars['String']['input']>;
  details_questStart_i?: InputMaybe<Scalars['Int64']['input']>;
  details_recipient_n?: InputMaybe<Scalars['String']['input']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_seedsAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_seedsEscrowAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_seedsInstantAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  details_usdAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  lockedby?: InputMaybe<Array<PayoutRef>>;
  ownedby?: InputMaybe<Array<DocumentRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  queststart?: InputMaybe<Array<PayoutRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']['input']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type PayoutRef = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completed?: InputMaybe<Array<PayoutRef>>;
  completedby?: InputMaybe<Array<PayoutRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_bypassEscrow_i?: InputMaybe<Scalars['Int64']['input']>;
  details_content_s?: InputMaybe<Scalars['String']['input']>;
  details_contributionDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_husdAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_hvoiceAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_hyphaAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_instantHusdPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_isCustom_i?: InputMaybe<Scalars['Int64']['input']>;
  details_owner_n?: InputMaybe<Scalars['String']['input']>;
  details_paymentDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_proposalSubtype_n?: InputMaybe<Scalars['String']['input']>;
  details_proposalType_n?: InputMaybe<Scalars['String']['input']>;
  details_proposer_n?: InputMaybe<Scalars['String']['input']>;
  details_questStart_i?: InputMaybe<Scalars['Int64']['input']>;
  details_recipient_n?: InputMaybe<Scalars['String']['input']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_seedsAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_seedsEscrowAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_seedsInstantAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_c?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  details_usdAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  lockedby?: InputMaybe<Array<PayoutRef>>;
  ownedby?: InputMaybe<Array<DocumentRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  queststart?: InputMaybe<Array<PayoutRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']['input']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type Period = Document & {
  __typename?: 'Period';
  calendar?: Maybe<Array<Calendar>>;
  calendarAggregate?: Maybe<CalendarAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_label_s?: Maybe<Scalars['String']['output']>;
  details_startTime_t?: Maybe<Scalars['DateTime']['output']>;
  docId: Scalars['String']['output'];
  next?: Maybe<Array<Period>>;
  nextAggregate?: Maybe<PeriodAggregateResult>;
  payment?: Maybe<Array<Payment>>;
  paymentAggregate?: Maybe<PaymentAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  system_readableStartDate_s?: Maybe<Scalars['String']['output']>;
  system_readableStartTime_s?: Maybe<Scalars['String']['output']>;
  system_updatedDate_t?: Maybe<Scalars['DateTime']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type PeriodCalendarArgs = {
  filter?: InputMaybe<CalendarFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CalendarOrder>;
};


export type PeriodCalendarAggregateArgs = {
  filter?: InputMaybe<CalendarFilter>;
};


export type PeriodDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type PeriodDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type PeriodNextArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};


export type PeriodNextAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type PeriodPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PaymentOrder>;
};


export type PeriodPaymentAggregateArgs = {
  filter?: InputMaybe<PaymentFilter>;
};

export type PeriodAggregateResult = {
  __typename?: 'PeriodAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_label_sMax?: Maybe<Scalars['String']['output']>;
  details_label_sMin?: Maybe<Scalars['String']['output']>;
  details_startTime_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_startTime_tMin?: Maybe<Scalars['DateTime']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  system_readableStartDate_sMax?: Maybe<Scalars['String']['output']>;
  system_readableStartDate_sMin?: Maybe<Scalars['String']['output']>;
  system_readableStartTime_sMax?: Maybe<Scalars['String']['output']>;
  system_readableStartTime_sMin?: Maybe<Scalars['String']['output']>;
  system_updatedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_updatedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type PeriodFilter = {
  and?: InputMaybe<Array<InputMaybe<PeriodFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_label_s?: InputMaybe<StringRegExpFilter>;
  details_startTime_t?: InputMaybe<DateTimeFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<PeriodHasFilter>>>;
  not?: InputMaybe<PeriodFilter>;
  or?: InputMaybe<Array<InputMaybe<PeriodFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_readableStartDate_s?: InputMaybe<StringRegExpFilter>;
  system_readableStartTime_s?: InputMaybe<StringRegExpFilter>;
  system_updatedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum PeriodHasFilter {
  Calendar = 'calendar',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsLabelS = 'details_label_s',
  DetailsStartTimeT = 'details_startTime_t',
  DocId = 'docId',
  Next = 'next',
  Payment = 'payment',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemReadableStartDateS = 'system_readableStartDate_s',
  SystemReadableStartTimeS = 'system_readableStartTime_s',
  SystemUpdatedDateT = 'system_updatedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PeriodOrder = {
  asc?: InputMaybe<PeriodOrderable>;
  desc?: InputMaybe<PeriodOrderable>;
  then?: InputMaybe<PeriodOrder>;
};

export enum PeriodOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsLabelS = 'details_label_s',
  DetailsStartTimeT = 'details_startTime_t',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemReadableStartDateS = 'system_readableStartDate_s',
  SystemReadableStartTimeS = 'system_readableStartTime_s',
  SystemUpdatedDateT = 'system_updatedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PeriodPatch = {
  calendar?: InputMaybe<Array<CalendarRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_label_s?: InputMaybe<Scalars['String']['input']>;
  details_startTime_t?: InputMaybe<Scalars['DateTime']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  next?: InputMaybe<Array<PeriodRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_readableStartDate_s?: InputMaybe<Scalars['String']['input']>;
  system_readableStartTime_s?: InputMaybe<Scalars['String']['input']>;
  system_updatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PeriodRef = {
  calendar?: InputMaybe<Array<CalendarRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_label_s?: InputMaybe<Scalars['String']['input']>;
  details_startTime_t?: InputMaybe<Scalars['DateTime']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  next?: InputMaybe<Array<PeriodRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_readableStartDate_s?: InputMaybe<Scalars['String']['input']>;
  system_readableStartTime_s?: InputMaybe<Scalars['String']['input']>;
  system_updatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PlanManager = Document & {
  __typename?: 'PlanManager';
  bill?: Maybe<Array<BillingInfo>>;
  billAggregate?: Maybe<BillingInfoAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  currentbill?: Maybe<Array<BillingInfo>>;
  currentbillAggregate?: Maybe<BillingInfoAggregateResult>;
  details_credit_a?: Maybe<Scalars['String']['output']>;
  details_type_s?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  lastbill?: Maybe<Array<BillingInfo>>;
  lastbillAggregate?: Maybe<BillingInfoAggregateResult>;
  prevstartbil?: Maybe<Array<BillingInfo>>;
  prevstartbilAggregate?: Maybe<BillingInfoAggregateResult>;
  startbill?: Maybe<Array<BillingInfo>>;
  startbillAggregate?: Maybe<BillingInfoAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type PlanManagerBillArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BillingInfoOrder>;
};


export type PlanManagerBillAggregateArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
};


export type PlanManagerCurrentbillArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BillingInfoOrder>;
};


export type PlanManagerCurrentbillAggregateArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
};


export type PlanManagerLastbillArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BillingInfoOrder>;
};


export type PlanManagerLastbillAggregateArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
};


export type PlanManagerPrevstartbilArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BillingInfoOrder>;
};


export type PlanManagerPrevstartbilAggregateArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
};


export type PlanManagerStartbillArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BillingInfoOrder>;
};


export type PlanManagerStartbillAggregateArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
};

export type PlanManagerAggregateResult = {
  __typename?: 'PlanManagerAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_credit_aMax?: Maybe<Scalars['String']['output']>;
  details_credit_aMin?: Maybe<Scalars['String']['output']>;
  details_type_sMax?: Maybe<Scalars['String']['output']>;
  details_type_sMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type PlanManagerFilter = {
  and?: InputMaybe<Array<InputMaybe<PlanManagerFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_credit_a?: InputMaybe<StringTermFilter>;
  details_type_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<PlanManagerHasFilter>>>;
  not?: InputMaybe<PlanManagerFilter>;
  or?: InputMaybe<Array<InputMaybe<PlanManagerFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum PlanManagerHasFilter {
  Bill = 'bill',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Currentbill = 'currentbill',
  DetailsCreditA = 'details_credit_a',
  DetailsTypeS = 'details_type_s',
  DocId = 'docId',
  Lastbill = 'lastbill',
  Prevstartbil = 'prevstartbil',
  Startbill = 'startbill',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PlanManagerOrder = {
  asc?: InputMaybe<PlanManagerOrderable>;
  desc?: InputMaybe<PlanManagerOrderable>;
  then?: InputMaybe<PlanManagerOrder>;
};

export enum PlanManagerOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsCreditA = 'details_credit_a',
  DetailsTypeS = 'details_type_s',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PlanManagerPatch = {
  bill?: InputMaybe<Array<BillingInfoRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  currentbill?: InputMaybe<Array<BillingInfoRef>>;
  details_credit_a?: InputMaybe<Scalars['String']['input']>;
  details_type_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  lastbill?: InputMaybe<Array<BillingInfoRef>>;
  prevstartbil?: InputMaybe<Array<BillingInfoRef>>;
  startbill?: InputMaybe<Array<BillingInfoRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PlanManagerRef = {
  bill?: InputMaybe<Array<BillingInfoRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  currentbill?: InputMaybe<Array<BillingInfoRef>>;
  details_credit_a?: InputMaybe<Scalars['String']['input']>;
  details_type_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  lastbill?: InputMaybe<Array<BillingInfoRef>>;
  prevstartbil?: InputMaybe<Array<BillingInfoRef>>;
  startbill?: InputMaybe<Array<BillingInfoRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type Point = {
  __typename?: 'Point';
  latitude: Scalars['Float']['output'];
  longitude: Scalars['Float']['output'];
};

export type PointGeoFilter = {
  near?: InputMaybe<NearFilter>;
  within?: InputMaybe<WithinFilter>;
};

export type PointList = {
  __typename?: 'PointList';
  points: Array<Point>;
};

export type PointListRef = {
  points: Array<PointRef>;
};

export type PointRef = {
  latitude: Scalars['Float']['input'];
  longitude: Scalars['Float']['input'];
};

export type Policy = Document & Votable & {
  __typename?: 'Policy';
  ascendant?: Maybe<Array<Policy>>;
  ascendantAggregate?: Maybe<PolicyAggregateResult>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']['output']>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']['output']>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  descendant?: Maybe<Array<Policy>>;
  descendantAggregate?: Maybe<PolicyAggregateResult>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_a?: Maybe<Scalars['String']['output']>;
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  details_description_s?: Maybe<Scalars['String']['output']>;
  details_masterPolicy_i?: Maybe<Scalars['Int64']['output']>;
  details_name_s?: Maybe<Scalars['String']['output']>;
  details_parentCircle_i?: Maybe<Scalars['Int64']['output']>;
  details_purpose_s?: Maybe<Scalars['String']['output']>;
  details_state_s?: Maybe<Scalars['String']['output']>;
  details_title_s?: Maybe<Scalars['String']['output']>;
  details_url_s?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  masterpolicy?: Maybe<Array<Policy>>;
  masterpolicyAggregate?: Maybe<PolicyAggregateResult>;
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  parentcircle?: Maybe<Array<Circle>>;
  parentcircleAggregate?: Maybe<CircleAggregateResult>;
  system_clientVersion_s?: Maybe<Scalars['String']['output']>;
  system_contractVersion_s?: Maybe<Scalars['String']['output']>;
  system_description_s?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type PolicyAscendantArgs = {
  filter?: InputMaybe<PolicyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PolicyOrder>;
};


export type PolicyAscendantAggregateArgs = {
  filter?: InputMaybe<PolicyFilter>;
};


export type PolicyCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type PolicyCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type PolicyDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type PolicyDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type PolicyDescendantArgs = {
  filter?: InputMaybe<PolicyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PolicyOrder>;
};


export type PolicyDescendantAggregateArgs = {
  filter?: InputMaybe<PolicyFilter>;
};


export type PolicyMasterpolicyArgs = {
  filter?: InputMaybe<PolicyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PolicyOrder>;
};


export type PolicyMasterpolicyAggregateArgs = {
  filter?: InputMaybe<PolicyFilter>;
};


export type PolicyOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type PolicyOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type PolicyParentcircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CircleOrder>;
};


export type PolicyParentcircleAggregateArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type PolicyVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type PolicyVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type PolicyVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type PolicyVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type PolicyAggregateResult = {
  __typename?: 'PolicyAggregateResult';
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']['output']>;
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']['output']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  details_description_sMax?: Maybe<Scalars['String']['output']>;
  details_description_sMin?: Maybe<Scalars['String']['output']>;
  details_masterPolicy_iAvg?: Maybe<Scalars['Float']['output']>;
  details_masterPolicy_iMax?: Maybe<Scalars['Int64']['output']>;
  details_masterPolicy_iMin?: Maybe<Scalars['Int64']['output']>;
  details_masterPolicy_iSum?: Maybe<Scalars['Int64']['output']>;
  details_name_sMax?: Maybe<Scalars['String']['output']>;
  details_name_sMin?: Maybe<Scalars['String']['output']>;
  details_parentCircle_iAvg?: Maybe<Scalars['Float']['output']>;
  details_parentCircle_iMax?: Maybe<Scalars['Int64']['output']>;
  details_parentCircle_iMin?: Maybe<Scalars['Int64']['output']>;
  details_parentCircle_iSum?: Maybe<Scalars['Int64']['output']>;
  details_purpose_sMax?: Maybe<Scalars['String']['output']>;
  details_purpose_sMin?: Maybe<Scalars['String']['output']>;
  details_state_sMax?: Maybe<Scalars['String']['output']>;
  details_state_sMin?: Maybe<Scalars['String']['output']>;
  details_title_sMax?: Maybe<Scalars['String']['output']>;
  details_title_sMin?: Maybe<Scalars['String']['output']>;
  details_url_sMax?: Maybe<Scalars['String']['output']>;
  details_url_sMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_description_sMax?: Maybe<Scalars['String']['output']>;
  system_description_sMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type PolicyFilter = {
  and?: InputMaybe<Array<InputMaybe<PolicyFilter>>>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_masterPolicy_i?: InputMaybe<Int64Filter>;
  details_name_s?: InputMaybe<StringRegExpFilter>;
  details_parentCircle_i?: InputMaybe<Int64Filter>;
  details_purpose_s?: InputMaybe<StringRegExpFilter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_url_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<PolicyHasFilter>>>;
  not?: InputMaybe<PolicyFilter>;
  or?: InputMaybe<Array<InputMaybe<PolicyFilter>>>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum PolicyHasFilter {
  Ascendant = 'ascendant',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  Descendant = 'descendant',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsMasterPolicyI = 'details_masterPolicy_i',
  DetailsNameS = 'details_name_s',
  DetailsParentCircleI = 'details_parentCircle_i',
  DetailsPurposeS = 'details_purpose_s',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DocId = 'docId',
  Masterpolicy = 'masterpolicy',
  Ownedby = 'ownedby',
  Parentcircle = 'parentcircle',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type PolicyOrder = {
  asc?: InputMaybe<PolicyOrderable>;
  desc?: InputMaybe<PolicyOrderable>;
  then?: InputMaybe<PolicyOrder>;
};

export enum PolicyOrderable {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsMasterPolicyI = 'details_masterPolicy_i',
  DetailsNameS = 'details_name_s',
  DetailsParentCircleI = 'details_parentCircle_i',
  DetailsPurposeS = 'details_purpose_s',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DocId = 'docId',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PolicyPatch = {
  ascendant?: InputMaybe<Array<PolicyRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  descendant?: InputMaybe<Array<PolicyRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_masterPolicy_i?: InputMaybe<Scalars['Int64']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']['input']>;
  details_purpose_s?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  masterpolicy?: InputMaybe<Array<PolicyRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentcircle?: InputMaybe<Array<CircleRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type PolicyRef = {
  ascendant?: InputMaybe<Array<PolicyRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  descendant?: InputMaybe<Array<PolicyRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_masterPolicy_i?: InputMaybe<Scalars['Int64']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']['input']>;
  details_purpose_s?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  masterpolicy?: InputMaybe<Array<PolicyRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentcircle?: InputMaybe<Array<CircleRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type Poll = Document & Votable & {
  __typename?: 'Poll';
  ballotOptions_abstain_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']['output']>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']['output']>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_a?: Maybe<Scalars['String']['output']>;
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  details_description_s?: Maybe<Scalars['String']['output']>;
  details_state_s?: Maybe<Scalars['String']['output']>;
  details_title_s?: Maybe<Scalars['String']['output']>;
  details_votingMethod_s?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  system_clientVersion_s?: Maybe<Scalars['String']['output']>;
  system_contractVersion_s?: Maybe<Scalars['String']['output']>;
  system_description_s?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type PollCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type PollCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type PollDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type PollDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type PollOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type PollOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type PollVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type PollVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type PollVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type PollVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type PollAggregateResult = {
  __typename?: 'PollAggregateResult';
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']['output']>;
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']['output']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  details_description_sMax?: Maybe<Scalars['String']['output']>;
  details_description_sMin?: Maybe<Scalars['String']['output']>;
  details_state_sMax?: Maybe<Scalars['String']['output']>;
  details_state_sMin?: Maybe<Scalars['String']['output']>;
  details_title_sMax?: Maybe<Scalars['String']['output']>;
  details_title_sMin?: Maybe<Scalars['String']['output']>;
  details_votingMethod_sMax?: Maybe<Scalars['String']['output']>;
  details_votingMethod_sMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_description_sMax?: Maybe<Scalars['String']['output']>;
  system_description_sMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type PollFilter = {
  and?: InputMaybe<Array<InputMaybe<PollFilter>>>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_votingMethod_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<PollHasFilter>>>;
  not?: InputMaybe<PollFilter>;
  or?: InputMaybe<Array<InputMaybe<PollFilter>>>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum PollHasFilter {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsVotingMethodS = 'details_votingMethod_s',
  DocId = 'docId',
  Ownedby = 'ownedby',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type PollOrder = {
  asc?: InputMaybe<PollOrderable>;
  desc?: InputMaybe<PollOrderable>;
  then?: InputMaybe<PollOrder>;
};

export enum PollOrderable {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsVotingMethodS = 'details_votingMethod_s',
  DocId = 'docId',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PollPatch = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_votingMethod_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type PollRef = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_votingMethod_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type Polygon = {
  __typename?: 'Polygon';
  coordinates: Array<PointList>;
};

export type PolygonGeoFilter = {
  contains?: InputMaybe<ContainsFilter>;
  intersects?: InputMaybe<IntersectsFilter>;
  near?: InputMaybe<NearFilter>;
  within?: InputMaybe<WithinFilter>;
};

export type PolygonRef = {
  coordinates: Array<PointListRef>;
};

export type PriceOffer = Document & {
  __typename?: 'PriceOffer';
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_discountPercX10000_i?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_i?: Maybe<Scalars['Int64']['output']>;
  details_tag_s?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};

export type PriceOfferAggregateResult = {
  __typename?: 'PriceOfferAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_discountPercX10000_iAvg?: Maybe<Scalars['Float']['output']>;
  details_discountPercX10000_iMax?: Maybe<Scalars['Int64']['output']>;
  details_discountPercX10000_iMin?: Maybe<Scalars['Int64']['output']>;
  details_discountPercX10000_iSum?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iAvg?: Maybe<Scalars['Float']['output']>;
  details_periodCount_iMax?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iMin?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iSum?: Maybe<Scalars['Int64']['output']>;
  details_tag_sMax?: Maybe<Scalars['String']['output']>;
  details_tag_sMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type PriceOfferFilter = {
  and?: InputMaybe<Array<InputMaybe<PriceOfferFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_discountPercX10000_i?: InputMaybe<Int64Filter>;
  details_periodCount_i?: InputMaybe<Int64Filter>;
  details_tag_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<PriceOfferHasFilter>>>;
  not?: InputMaybe<PriceOfferFilter>;
  or?: InputMaybe<Array<InputMaybe<PriceOfferFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum PriceOfferHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDiscountPercX10000I = 'details_discountPercX10000_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsTagS = 'details_tag_s',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PriceOfferOrder = {
  asc?: InputMaybe<PriceOfferOrderable>;
  desc?: InputMaybe<PriceOfferOrderable>;
  then?: InputMaybe<PriceOfferOrder>;
};

export enum PriceOfferOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDiscountPercX10000I = 'details_discountPercX10000_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsTagS = 'details_tag_s',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PriceOfferPatch = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_tag_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PriceOfferRef = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_tag_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PricingPlan = Document & {
  __typename?: 'PricingPlan';
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_discountPercX10000_i?: Maybe<Scalars['Int64']['output']>;
  details_maxMemberCount_i?: Maybe<Scalars['Int64']['output']>;
  details_name_s?: Maybe<Scalars['String']['output']>;
  details_price_a?: Maybe<Scalars['String']['output']>;
  details_reactivationPeriodSec_i?: Maybe<Scalars['Int64']['output']>;
  docId: Scalars['String']['output'];
  priceoffer?: Maybe<Array<PriceOffer>>;
  priceofferAggregate?: Maybe<PriceOfferAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type PricingPlanPriceofferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PriceOfferOrder>;
};


export type PricingPlanPriceofferAggregateArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
};

export type PricingPlanAggregateResult = {
  __typename?: 'PricingPlanAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_discountPercX10000_iAvg?: Maybe<Scalars['Float']['output']>;
  details_discountPercX10000_iMax?: Maybe<Scalars['Int64']['output']>;
  details_discountPercX10000_iMin?: Maybe<Scalars['Int64']['output']>;
  details_discountPercX10000_iSum?: Maybe<Scalars['Int64']['output']>;
  details_maxMemberCount_iAvg?: Maybe<Scalars['Float']['output']>;
  details_maxMemberCount_iMax?: Maybe<Scalars['Int64']['output']>;
  details_maxMemberCount_iMin?: Maybe<Scalars['Int64']['output']>;
  details_maxMemberCount_iSum?: Maybe<Scalars['Int64']['output']>;
  details_name_sMax?: Maybe<Scalars['String']['output']>;
  details_name_sMin?: Maybe<Scalars['String']['output']>;
  details_price_aMax?: Maybe<Scalars['String']['output']>;
  details_price_aMin?: Maybe<Scalars['String']['output']>;
  details_reactivationPeriodSec_iAvg?: Maybe<Scalars['Float']['output']>;
  details_reactivationPeriodSec_iMax?: Maybe<Scalars['Int64']['output']>;
  details_reactivationPeriodSec_iMin?: Maybe<Scalars['Int64']['output']>;
  details_reactivationPeriodSec_iSum?: Maybe<Scalars['Int64']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type PricingPlanFilter = {
  and?: InputMaybe<Array<InputMaybe<PricingPlanFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_discountPercX10000_i?: InputMaybe<Int64Filter>;
  details_maxMemberCount_i?: InputMaybe<Int64Filter>;
  details_name_s?: InputMaybe<StringRegExpFilter>;
  details_price_a?: InputMaybe<StringTermFilter>;
  details_reactivationPeriodSec_i?: InputMaybe<Int64Filter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<PricingPlanHasFilter>>>;
  not?: InputMaybe<PricingPlanFilter>;
  or?: InputMaybe<Array<InputMaybe<PricingPlanFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum PricingPlanHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDiscountPercX10000I = 'details_discountPercX10000_i',
  DetailsMaxMemberCountI = 'details_maxMemberCount_i',
  DetailsNameS = 'details_name_s',
  DetailsPriceA = 'details_price_a',
  DetailsReactivationPeriodSecI = 'details_reactivationPeriodSec_i',
  DocId = 'docId',
  Priceoffer = 'priceoffer',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PricingPlanOrder = {
  asc?: InputMaybe<PricingPlanOrderable>;
  desc?: InputMaybe<PricingPlanOrderable>;
  then?: InputMaybe<PricingPlanOrder>;
};

export enum PricingPlanOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDiscountPercX10000I = 'details_discountPercX10000_i',
  DetailsMaxMemberCountI = 'details_maxMemberCount_i',
  DetailsNameS = 'details_name_s',
  DetailsPriceA = 'details_price_a',
  DetailsReactivationPeriodSecI = 'details_reactivationPeriodSec_i',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type PricingPlanPatch = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_maxMemberCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  details_price_a?: InputMaybe<Scalars['String']['input']>;
  details_reactivationPeriodSec_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  priceoffer?: InputMaybe<Array<PriceOfferRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PricingPlanRef = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_discountPercX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_maxMemberCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  details_price_a?: InputMaybe<Scalars['String']['input']>;
  details_reactivationPeriodSec_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  priceoffer?: InputMaybe<Array<PriceOfferRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type Query = {
  __typename?: 'Query';
  activePlan?: Maybe<StripeAcivePlanAndSubscription>;
  aggregateAlert?: Maybe<AlertAggregateResult>;
  aggregateAssignbadge?: Maybe<AssignbadgeAggregateResult>;
  aggregateAssignment?: Maybe<AssignmentAggregateResult>;
  aggregateAttestation?: Maybe<AttestationAggregateResult>;
  aggregateBadge?: Maybe<BadgeAggregateResult>;
  aggregateBalance?: Maybe<BalanceAggregateResult>;
  aggregateBillingInfo?: Maybe<BillingInfoAggregateResult>;
  aggregateBudget?: Maybe<BudgetAggregateResult>;
  aggregateCalendar?: Maybe<CalendarAggregateResult>;
  aggregateCircle?: Maybe<CircleAggregateResult>;
  aggregateCmntSection?: Maybe<CmntSectionAggregateResult>;
  aggregateComment?: Maybe<CommentAggregateResult>;
  aggregateCursor?: Maybe<CursorAggregateResult>;
  aggregateDao?: Maybe<DaoAggregateResult>;
  aggregateDaoDraft?: Maybe<DaoDraftAggregateResult>;
  aggregateDho?: Maybe<DhoAggregateResult>;
  aggregateDoccacheConfig?: Maybe<DoccacheConfigAggregateResult>;
  aggregateDocument?: Maybe<DocumentAggregateResult>;
  aggregateEdit?: Maybe<EditAggregateResult>;
  aggregateElectnGroup?: Maybe<ElectnGroupAggregateResult>;
  aggregateElectnRound?: Maybe<ElectnRoundAggregateResult>;
  aggregateEvent?: Maybe<EventAggregateResult>;
  aggregateMember?: Maybe<MemberAggregateResult>;
  aggregateMemo?: Maybe<MemoAggregateResult>;
  aggregateMsigInfo?: Maybe<MsigInfoAggregateResult>;
  aggregateMultisig?: Maybe<MultisigAggregateResult>;
  aggregateNotification?: Maybe<NotificationAggregateResult>;
  aggregatePayment?: Maybe<PaymentAggregateResult>;
  aggregatePayout?: Maybe<PayoutAggregateResult>;
  aggregatePeriod?: Maybe<PeriodAggregateResult>;
  aggregatePlanManager?: Maybe<PlanManagerAggregateResult>;
  aggregatePolicy?: Maybe<PolicyAggregateResult>;
  aggregatePoll?: Maybe<PollAggregateResult>;
  aggregatePriceOffer?: Maybe<PriceOfferAggregateResult>;
  aggregatePricingPlan?: Maybe<PricingPlanAggregateResult>;
  aggregateQuestcomple?: Maybe<QuestcompleAggregateResult>;
  aggregateQuestcomplet?: Maybe<QuestcompletAggregateResult>;
  aggregateQueststart?: Maybe<QueststartAggregateResult>;
  aggregateReaction?: Maybe<ReactionAggregateResult>;
  aggregateRedemption?: Maybe<RedemptionAggregateResult>;
  aggregateRole?: Maybe<RoleAggregateResult>;
  aggregateSalaryband?: Maybe<SalarybandAggregateResult>;
  aggregateSettings?: Maybe<SettingsAggregateResult>;
  aggregateSuspend?: Maybe<SuspendAggregateResult>;
  aggregateTimeshare?: Maybe<TimeshareAggregateResult>;
  aggregateTreasury?: Maybe<TreasuryAggregateResult>;
  aggregateTrsyPayment?: Maybe<TrsyPaymentAggregateResult>;
  aggregateTypeVersion?: Maybe<TypeVersionAggregateResult>;
  aggregateUpvtElectn?: Maybe<UpvtElectnAggregateResult>;
  aggregateUpvtVote?: Maybe<UpvtVoteAggregateResult>;
  aggregateUser?: Maybe<UserAggregateResult>;
  aggregateVotable?: Maybe<VotableAggregateResult>;
  aggregateVote?: Maybe<VoteAggregateResult>;
  aggregateVoteGroup?: Maybe<VoteGroupAggregateResult>;
  aggregateVoteTally?: Maybe<VoteTallyAggregateResult>;
  getAlert?: Maybe<Alert>;
  getAssignbadge?: Maybe<Assignbadge>;
  getAssignment?: Maybe<Assignment>;
  getAttestation?: Maybe<Attestation>;
  getBadge?: Maybe<Badge>;
  getBalance?: Maybe<Balance>;
  getBillingInfo?: Maybe<BillingInfo>;
  getBudget?: Maybe<Budget>;
  getCalendar?: Maybe<Calendar>;
  getCircle?: Maybe<Circle>;
  getCmntSection?: Maybe<CmntSection>;
  getComment?: Maybe<Comment>;
  getCursor?: Maybe<Cursor>;
  getDao?: Maybe<Dao>;
  getDaoDraft?: Maybe<DaoDraft>;
  getDho?: Maybe<Dho>;
  getDoccacheConfig?: Maybe<DoccacheConfig>;
  /** @deprecated @id argument for get query on interface is being deprecated. Only those @id fields which have interface argument set to true will be available in getQuery argument on interface post v21.11.0, please update your schema accordingly. */
  getDocument?: Maybe<Document>;
  getEdit?: Maybe<Edit>;
  getElectnGroup?: Maybe<ElectnGroup>;
  getElectnRound?: Maybe<ElectnRound>;
  getEvent?: Maybe<Event>;
  getInvoices?: Maybe<Array<Maybe<StripeInvoices>>>;
  getMember?: Maybe<Member>;
  getMemo?: Maybe<Memo>;
  getMsigInfo?: Maybe<MsigInfo>;
  getMultisig?: Maybe<Multisig>;
  getNotification?: Maybe<Notification>;
  getPayment?: Maybe<Payment>;
  getPayout?: Maybe<Payout>;
  getPeriod?: Maybe<Period>;
  getPlanManager?: Maybe<PlanManager>;
  getPolicy?: Maybe<Policy>;
  getPoll?: Maybe<Poll>;
  getPriceOffer?: Maybe<PriceOffer>;
  getPricingPlan?: Maybe<PricingPlan>;
  getQuestcomple?: Maybe<Questcomple>;
  getQuestcomplet?: Maybe<Questcomplet>;
  getQueststart?: Maybe<Queststart>;
  getReaction?: Maybe<Reaction>;
  getRedemption?: Maybe<Redemption>;
  getRole?: Maybe<Role>;
  getSalaryband?: Maybe<Salaryband>;
  getSettings?: Maybe<Settings>;
  getStripePrices?: Maybe<Array<Maybe<StripePrices>>>;
  getSuspend?: Maybe<Suspend>;
  getTimeshare?: Maybe<Timeshare>;
  getTreasury?: Maybe<Treasury>;
  getTrsyPayment?: Maybe<TrsyPayment>;
  getUpvtElectn?: Maybe<UpvtElectn>;
  getUpvtVote?: Maybe<UpvtVote>;
  getUser?: Maybe<User>;
  getVote?: Maybe<Vote>;
  getVoteGroup?: Maybe<VoteGroup>;
  getVoteTally?: Maybe<VoteTally>;
  queryAlert?: Maybe<Array<Maybe<Alert>>>;
  queryAssignbadge?: Maybe<Array<Maybe<Assignbadge>>>;
  queryAssignment?: Maybe<Array<Maybe<Assignment>>>;
  queryAttestation?: Maybe<Array<Maybe<Attestation>>>;
  queryBadge?: Maybe<Array<Maybe<Badge>>>;
  queryBalance?: Maybe<Array<Maybe<Balance>>>;
  queryBillingInfo?: Maybe<Array<Maybe<BillingInfo>>>;
  queryBudget?: Maybe<Array<Maybe<Budget>>>;
  queryCalendar?: Maybe<Array<Maybe<Calendar>>>;
  queryCircle?: Maybe<Array<Maybe<Circle>>>;
  queryCmntSection?: Maybe<Array<Maybe<CmntSection>>>;
  queryComment?: Maybe<Array<Maybe<Comment>>>;
  queryCursor?: Maybe<Array<Maybe<Cursor>>>;
  queryDao?: Maybe<Array<Maybe<Dao>>>;
  queryDaoDraft?: Maybe<Array<Maybe<DaoDraft>>>;
  queryDho?: Maybe<Array<Maybe<Dho>>>;
  queryDoccacheConfig?: Maybe<Array<Maybe<DoccacheConfig>>>;
  queryDocument?: Maybe<Array<Maybe<Document>>>;
  queryEdit?: Maybe<Array<Maybe<Edit>>>;
  queryElectnGroup?: Maybe<Array<Maybe<ElectnGroup>>>;
  queryElectnRound?: Maybe<Array<Maybe<ElectnRound>>>;
  queryEvent?: Maybe<Array<Maybe<Event>>>;
  queryMember?: Maybe<Array<Maybe<Member>>>;
  queryMemo?: Maybe<Array<Maybe<Memo>>>;
  queryMsigInfo?: Maybe<Array<Maybe<MsigInfo>>>;
  queryMultisig?: Maybe<Array<Maybe<Multisig>>>;
  queryNotification?: Maybe<Array<Maybe<Notification>>>;
  queryPayment?: Maybe<Array<Maybe<Payment>>>;
  queryPayout?: Maybe<Array<Maybe<Payout>>>;
  queryPeriod?: Maybe<Array<Maybe<Period>>>;
  queryPlanManager?: Maybe<Array<Maybe<PlanManager>>>;
  queryPolicy?: Maybe<Array<Maybe<Policy>>>;
  queryPoll?: Maybe<Array<Maybe<Poll>>>;
  queryPriceOffer?: Maybe<Array<Maybe<PriceOffer>>>;
  queryPricingPlan?: Maybe<Array<Maybe<PricingPlan>>>;
  queryQuestcomple?: Maybe<Array<Maybe<Questcomple>>>;
  queryQuestcomplet?: Maybe<Array<Maybe<Questcomplet>>>;
  queryQueststart?: Maybe<Array<Maybe<Queststart>>>;
  queryReaction?: Maybe<Array<Maybe<Reaction>>>;
  queryRedemption?: Maybe<Array<Maybe<Redemption>>>;
  queryRole?: Maybe<Array<Maybe<Role>>>;
  querySalaryband?: Maybe<Array<Maybe<Salaryband>>>;
  querySettings?: Maybe<Array<Maybe<Settings>>>;
  querySuspend?: Maybe<Array<Maybe<Suspend>>>;
  queryTimeshare?: Maybe<Array<Maybe<Timeshare>>>;
  queryTreasury?: Maybe<Array<Maybe<Treasury>>>;
  queryTrsyPayment?: Maybe<Array<Maybe<TrsyPayment>>>;
  queryTypeVersion?: Maybe<Array<Maybe<TypeVersion>>>;
  queryUpvtElectn?: Maybe<Array<Maybe<UpvtElectn>>>;
  queryUpvtVote?: Maybe<Array<Maybe<UpvtVote>>>;
  queryUser?: Maybe<Array<Maybe<User>>>;
  queryVotable?: Maybe<Array<Maybe<Votable>>>;
  queryVote?: Maybe<Array<Maybe<Vote>>>;
  queryVoteGroup?: Maybe<Array<Maybe<VoteGroup>>>;
  queryVoteTally?: Maybe<Array<Maybe<VoteTally>>>;
};


export type QueryActivePlanArgs = {
  daoUrl: Scalars['String']['input'];
};


export type QueryAggregateAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
};


export type QueryAggregateAssignbadgeArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
};


export type QueryAggregateAssignmentArgs = {
  filter?: InputMaybe<AssignmentFilter>;
};


export type QueryAggregateAttestationArgs = {
  filter?: InputMaybe<AttestationFilter>;
};


export type QueryAggregateBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type QueryAggregateBalanceArgs = {
  filter?: InputMaybe<BalanceFilter>;
};


export type QueryAggregateBillingInfoArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
};


export type QueryAggregateBudgetArgs = {
  filter?: InputMaybe<BudgetFilter>;
};


export type QueryAggregateCalendarArgs = {
  filter?: InputMaybe<CalendarFilter>;
};


export type QueryAggregateCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type QueryAggregateCmntSectionArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type QueryAggregateCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
};


export type QueryAggregateCursorArgs = {
  filter?: InputMaybe<CursorFilter>;
};


export type QueryAggregateDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type QueryAggregateDaoDraftArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
};


export type QueryAggregateDhoArgs = {
  filter?: InputMaybe<DhoFilter>;
};


export type QueryAggregateDoccacheConfigArgs = {
  filter?: InputMaybe<DoccacheConfigFilter>;
};


export type QueryAggregateDocumentArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type QueryAggregateEditArgs = {
  filter?: InputMaybe<EditFilter>;
};


export type QueryAggregateElectnGroupArgs = {
  filter?: InputMaybe<ElectnGroupFilter>;
};


export type QueryAggregateElectnRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type QueryAggregateEventArgs = {
  filter?: InputMaybe<EventFilter>;
};


export type QueryAggregateMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type QueryAggregateMemoArgs = {
  filter?: InputMaybe<MemoFilter>;
};


export type QueryAggregateMsigInfoArgs = {
  filter?: InputMaybe<MsigInfoFilter>;
};


export type QueryAggregateMultisigArgs = {
  filter?: InputMaybe<MultisigFilter>;
};


export type QueryAggregateNotificationArgs = {
  filter?: InputMaybe<NotificationFilter>;
};


export type QueryAggregatePaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
};


export type QueryAggregatePayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type QueryAggregatePeriodArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type QueryAggregatePlanManagerArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
};


export type QueryAggregatePolicyArgs = {
  filter?: InputMaybe<PolicyFilter>;
};


export type QueryAggregatePollArgs = {
  filter?: InputMaybe<PollFilter>;
};


export type QueryAggregatePriceOfferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
};


export type QueryAggregatePricingPlanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
};


export type QueryAggregateQuestcompleArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
};


export type QueryAggregateQuestcompletArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
};


export type QueryAggregateQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type QueryAggregateReactionArgs = {
  filter?: InputMaybe<ReactionFilter>;
};


export type QueryAggregateRedemptionArgs = {
  filter?: InputMaybe<RedemptionFilter>;
};


export type QueryAggregateRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
};


export type QueryAggregateSalarybandArgs = {
  filter?: InputMaybe<SalarybandFilter>;
};


export type QueryAggregateSettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
};


export type QueryAggregateSuspendArgs = {
  filter?: InputMaybe<SuspendFilter>;
};


export type QueryAggregateTimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
};


export type QueryAggregateTreasuryArgs = {
  filter?: InputMaybe<TreasuryFilter>;
};


export type QueryAggregateTrsyPaymentArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
};


export type QueryAggregateTypeVersionArgs = {
  filter?: InputMaybe<TypeVersionFilter>;
};


export type QueryAggregateUpvtElectnArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type QueryAggregateUpvtVoteArgs = {
  filter?: InputMaybe<UpvtVoteFilter>;
};


export type QueryAggregateUserArgs = {
  filter?: InputMaybe<UserFilter>;
};


export type QueryAggregateVotableArgs = {
  filter?: InputMaybe<VotableFilter>;
};


export type QueryAggregateVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type QueryAggregateVoteGroupArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
};


export type QueryAggregateVoteTallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};


export type QueryGetAlertArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetAssignbadgeArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetAssignmentArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetAttestationArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetBadgeArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetBalanceArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetBillingInfoArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetBudgetArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetCalendarArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetCircleArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetCmntSectionArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetCommentArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetCursorArgs = {
  id: Scalars['String']['input'];
};


export type QueryGetDaoArgs = {
  details_daoName_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
};


export type QueryGetDaoDraftArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetDhoArgs = {
  details_rootNode_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
};


export type QueryGetDoccacheConfigArgs = {
  id: Scalars['String']['input'];
};


export type QueryGetDocumentArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetEditArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetElectnGroupArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetElectnRoundArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetEventArgs = {
  id: Scalars['ID']['input'];
};


export type QueryGetInvoicesArgs = {
  daoUrl: Scalars['String']['input'];
};


export type QueryGetMemberArgs = {
  details_member_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
};


export type QueryGetMemoArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetMsigInfoArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetMultisigArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetNotificationArgs = {
  id: Scalars['ID']['input'];
};


export type QueryGetPaymentArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetPayoutArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetPeriodArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetPlanManagerArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetPolicyArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetPollArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetPriceOfferArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetPricingPlanArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetQuestcompleArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetQuestcompletArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetQueststartArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetReactionArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetRedemptionArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetRoleArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetSalarybandArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetSettingsArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetSuspendArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetTimeshareArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetTreasuryArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetTrsyPaymentArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetUpvtElectnArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetUpvtVoteArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetUserArgs = {
  id: Scalars['ID']['input'];
};


export type QueryGetVoteArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetVoteGroupArgs = {
  docId: Scalars['String']['input'];
};


export type QueryGetVoteTallyArgs = {
  docId: Scalars['String']['input'];
};


export type QueryQueryAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AlertOrder>;
};


export type QueryQueryAssignbadgeArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignbadgeOrder>;
};


export type QueryQueryAssignmentArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignmentOrder>;
};


export type QueryQueryAttestationArgs = {
  filter?: InputMaybe<AttestationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AttestationOrder>;
};


export type QueryQueryBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BadgeOrder>;
};


export type QueryQueryBalanceArgs = {
  filter?: InputMaybe<BalanceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BalanceOrder>;
};


export type QueryQueryBillingInfoArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BillingInfoOrder>;
};


export type QueryQueryBudgetArgs = {
  filter?: InputMaybe<BudgetFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BudgetOrder>;
};


export type QueryQueryCalendarArgs = {
  filter?: InputMaybe<CalendarFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CalendarOrder>;
};


export type QueryQueryCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CircleOrder>;
};


export type QueryQueryCmntSectionArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type QueryQueryCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CommentOrder>;
};


export type QueryQueryCursorArgs = {
  filter?: InputMaybe<CursorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CursorOrder>;
};


export type QueryQueryDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type QueryQueryDaoDraftArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoDraftOrder>;
};


export type QueryQueryDhoArgs = {
  filter?: InputMaybe<DhoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DhoOrder>;
};


export type QueryQueryDoccacheConfigArgs = {
  filter?: InputMaybe<DoccacheConfigFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DoccacheConfigOrder>;
};


export type QueryQueryDocumentArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type QueryQueryEditArgs = {
  filter?: InputMaybe<EditFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<EditOrder>;
};


export type QueryQueryElectnGroupArgs = {
  filter?: InputMaybe<ElectnGroupFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnGroupOrder>;
};


export type QueryQueryElectnRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type QueryQueryEventArgs = {
  filter?: InputMaybe<EventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<EventOrder>;
};


export type QueryQueryMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type QueryQueryMemoArgs = {
  filter?: InputMaybe<MemoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemoOrder>;
};


export type QueryQueryMsigInfoArgs = {
  filter?: InputMaybe<MsigInfoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MsigInfoOrder>;
};


export type QueryQueryMultisigArgs = {
  filter?: InputMaybe<MultisigFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MultisigOrder>;
};


export type QueryQueryNotificationArgs = {
  filter?: InputMaybe<NotificationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<NotificationOrder>;
};


export type QueryQueryPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PaymentOrder>;
};


export type QueryQueryPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PayoutOrder>;
};


export type QueryQueryPeriodArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};


export type QueryQueryPlanManagerArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PlanManagerOrder>;
};


export type QueryQueryPolicyArgs = {
  filter?: InputMaybe<PolicyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PolicyOrder>;
};


export type QueryQueryPollArgs = {
  filter?: InputMaybe<PollFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PollOrder>;
};


export type QueryQueryPriceOfferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PriceOfferOrder>;
};


export type QueryQueryPricingPlanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PricingPlanOrder>;
};


export type QueryQueryQuestcompleArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QuestcompleOrder>;
};


export type QueryQueryQuestcompletArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QuestcompletOrder>;
};


export type QueryQueryQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QueststartOrder>;
};


export type QueryQueryReactionArgs = {
  filter?: InputMaybe<ReactionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ReactionOrder>;
};


export type QueryQueryRedemptionArgs = {
  filter?: InputMaybe<RedemptionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<RedemptionOrder>;
};


export type QueryQueryRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<RoleOrder>;
};


export type QueryQuerySalarybandArgs = {
  filter?: InputMaybe<SalarybandFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SalarybandOrder>;
};


export type QueryQuerySettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SettingsOrder>;
};


export type QueryQuerySuspendArgs = {
  filter?: InputMaybe<SuspendFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SuspendOrder>;
};


export type QueryQueryTimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TimeshareOrder>;
};


export type QueryQueryTreasuryArgs = {
  filter?: InputMaybe<TreasuryFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TreasuryOrder>;
};


export type QueryQueryTrsyPaymentArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TrsyPaymentOrder>;
};


export type QueryQueryTypeVersionArgs = {
  filter?: InputMaybe<TypeVersionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TypeVersionOrder>;
};


export type QueryQueryUpvtElectnArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type QueryQueryUpvtVoteArgs = {
  filter?: InputMaybe<UpvtVoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtVoteOrder>;
};


export type QueryQueryUserArgs = {
  filter?: InputMaybe<UserFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UserOrder>;
};


export type QueryQueryVotableArgs = {
  filter?: InputMaybe<VotableFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VotableOrder>;
};


export type QueryQueryVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type QueryQueryVoteGroupArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteGroupOrder>;
};


export type QueryQueryVoteTallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};

export type Questcomple = Document & Votable & {
  __typename?: 'Questcomple';
  ballotOptions_abstain_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']['output']>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']['output']>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_description_s?: Maybe<Scalars['String']['output']>;
  details_pegAmount_a?: Maybe<Scalars['String']['output']>;
  details_questStart_c?: Maybe<Scalars['String']['output']>;
  details_recipient_n?: Maybe<Scalars['String']['output']>;
  details_rewardAmount_a?: Maybe<Scalars['String']['output']>;
  details_state_s?: Maybe<Scalars['String']['output']>;
  details_title_s?: Maybe<Scalars['String']['output']>;
  details_voiceAmount_a?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  payment?: Maybe<Array<Payment>>;
  paymentAggregate?: Maybe<PaymentAggregateResult>;
  queststart?: Maybe<Array<Queststart>>;
  queststartAggregate?: Maybe<QueststartAggregateResult>;
  system_clientVersion_s?: Maybe<Scalars['String']['output']>;
  system_commentName_n?: Maybe<Scalars['String']['output']>;
  system_contractVersion_s?: Maybe<Scalars['String']['output']>;
  system_description_s?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type QuestcompleDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type QuestcompleDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type QuestcompleOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type QuestcompleOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type QuestcomplePaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PaymentOrder>;
};


export type QuestcomplePaymentAggregateArgs = {
  filter?: InputMaybe<PaymentFilter>;
};


export type QuestcompleQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QueststartOrder>;
};


export type QuestcompleQueststartAggregateArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type QuestcompleVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type QuestcompleVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type QuestcompleVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type QuestcompleVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type QuestcompleAggregateResult = {
  __typename?: 'QuestcompleAggregateResult';
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']['output']>;
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']['output']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_description_sMax?: Maybe<Scalars['String']['output']>;
  details_description_sMin?: Maybe<Scalars['String']['output']>;
  details_pegAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_pegAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_questStart_cMax?: Maybe<Scalars['String']['output']>;
  details_questStart_cMin?: Maybe<Scalars['String']['output']>;
  details_recipient_nMax?: Maybe<Scalars['String']['output']>;
  details_recipient_nMin?: Maybe<Scalars['String']['output']>;
  details_rewardAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_rewardAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_state_sMax?: Maybe<Scalars['String']['output']>;
  details_state_sMin?: Maybe<Scalars['String']['output']>;
  details_title_sMax?: Maybe<Scalars['String']['output']>;
  details_title_sMin?: Maybe<Scalars['String']['output']>;
  details_voiceAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_voiceAmount_aMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_commentName_nMax?: Maybe<Scalars['String']['output']>;
  system_commentName_nMin?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_description_sMax?: Maybe<Scalars['String']['output']>;
  system_description_sMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type QuestcompleFilter = {
  and?: InputMaybe<Array<InputMaybe<QuestcompleFilter>>>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_pegAmount_a?: InputMaybe<StringTermFilter>;
  details_questStart_c?: InputMaybe<StringExactFilter>;
  details_recipient_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_rewardAmount_a?: InputMaybe<StringTermFilter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_voiceAmount_a?: InputMaybe<StringTermFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<QuestcompleHasFilter>>>;
  not?: InputMaybe<QuestcompleFilter>;
  or?: InputMaybe<Array<InputMaybe<QuestcompleFilter>>>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum QuestcompleHasFilter {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsDescriptionS = 'details_description_s',
  DetailsPegAmountA = 'details_pegAmount_a',
  DetailsQuestStartC = 'details_questStart_c',
  DetailsRecipientN = 'details_recipient_n',
  DetailsRewardAmountA = 'details_rewardAmount_a',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsVoiceAmountA = 'details_voiceAmount_a',
  DocId = 'docId',
  Ownedby = 'ownedby',
  Payment = 'payment',
  Queststart = 'queststart',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type QuestcompleOrder = {
  asc?: InputMaybe<QuestcompleOrderable>;
  desc?: InputMaybe<QuestcompleOrderable>;
  then?: InputMaybe<QuestcompleOrder>;
};

export enum QuestcompleOrderable {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDescriptionS = 'details_description_s',
  DetailsPegAmountA = 'details_pegAmount_a',
  DetailsQuestStartC = 'details_questStart_c',
  DetailsRecipientN = 'details_recipient_n',
  DetailsRewardAmountA = 'details_rewardAmount_a',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsVoiceAmountA = 'details_voiceAmount_a',
  DocId = 'docId',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type QuestcomplePatch = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_questStart_c?: InputMaybe<Scalars['String']['input']>;
  details_recipient_n?: InputMaybe<Scalars['String']['input']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type QuestcompleRef = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_questStart_c?: InputMaybe<Scalars['String']['input']>;
  details_recipient_n?: InputMaybe<Scalars['String']['input']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type Questcomplet = Document & Votable & {
  __typename?: 'Questcomplet';
  ballotOptions_abstain_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']['output']>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']['output']>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  completed?: Maybe<Array<Queststart>>;
  completedAggregate?: Maybe<QueststartAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_a?: Maybe<Scalars['String']['output']>;
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  details_description_s?: Maybe<Scalars['String']['output']>;
  details_proposalSubtype_n?: Maybe<Scalars['String']['output']>;
  details_questStart_i?: Maybe<Scalars['Int64']['output']>;
  details_state_s?: Maybe<Scalars['String']['output']>;
  details_title_s?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  queststart?: Maybe<Array<Queststart>>;
  queststartAggregate?: Maybe<QueststartAggregateResult>;
  system_clientVersion_s?: Maybe<Scalars['String']['output']>;
  system_contractVersion_s?: Maybe<Scalars['String']['output']>;
  system_description_s?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type QuestcompletCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type QuestcompletCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type QuestcompletCompletedArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QueststartOrder>;
};


export type QuestcompletCompletedAggregateArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type QuestcompletDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type QuestcompletDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type QuestcompletOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type QuestcompletOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type QuestcompletQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QueststartOrder>;
};


export type QuestcompletQueststartAggregateArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type QuestcompletVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type QuestcompletVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type QuestcompletVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type QuestcompletVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type QuestcompletAggregateResult = {
  __typename?: 'QuestcompletAggregateResult';
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']['output']>;
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']['output']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  details_description_sMax?: Maybe<Scalars['String']['output']>;
  details_description_sMin?: Maybe<Scalars['String']['output']>;
  details_proposalSubtype_nMax?: Maybe<Scalars['String']['output']>;
  details_proposalSubtype_nMin?: Maybe<Scalars['String']['output']>;
  details_questStart_iAvg?: Maybe<Scalars['Float']['output']>;
  details_questStart_iMax?: Maybe<Scalars['Int64']['output']>;
  details_questStart_iMin?: Maybe<Scalars['Int64']['output']>;
  details_questStart_iSum?: Maybe<Scalars['Int64']['output']>;
  details_state_sMax?: Maybe<Scalars['String']['output']>;
  details_state_sMin?: Maybe<Scalars['String']['output']>;
  details_title_sMax?: Maybe<Scalars['String']['output']>;
  details_title_sMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_description_sMax?: Maybe<Scalars['String']['output']>;
  system_description_sMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type QuestcompletFilter = {
  and?: InputMaybe<Array<InputMaybe<QuestcompletFilter>>>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_proposalSubtype_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_questStart_i?: InputMaybe<Int64Filter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<QuestcompletHasFilter>>>;
  not?: InputMaybe<QuestcompletFilter>;
  or?: InputMaybe<Array<InputMaybe<QuestcompletFilter>>>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum QuestcompletHasFilter {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Cmntsect = 'cmntsect',
  Completed = 'completed',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsProposalSubtypeN = 'details_proposalSubtype_n',
  DetailsQuestStartI = 'details_questStart_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DocId = 'docId',
  Ownedby = 'ownedby',
  Queststart = 'queststart',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type QuestcompletOrder = {
  asc?: InputMaybe<QuestcompletOrderable>;
  desc?: InputMaybe<QuestcompletOrderable>;
  then?: InputMaybe<QuestcompletOrder>;
};

export enum QuestcompletOrderable {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsProposalSubtypeN = 'details_proposalSubtype_n',
  DetailsQuestStartI = 'details_questStart_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DocId = 'docId',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type QuestcompletPatch = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completed?: InputMaybe<Array<QueststartRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_proposalSubtype_n?: InputMaybe<Scalars['String']['input']>;
  details_questStart_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type QuestcompletRef = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completed?: InputMaybe<Array<QueststartRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_proposalSubtype_n?: InputMaybe<Scalars['String']['input']>;
  details_questStart_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  queststart?: InputMaybe<Array<QueststartRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type Queststart = Document & Votable & {
  __typename?: 'Queststart';
  ascendant?: Maybe<Array<Queststart>>;
  ascendantAggregate?: Maybe<QueststartAggregateResult>;
  assignee?: Maybe<Array<Member>>;
  assigneeAggregate?: Maybe<MemberAggregateResult>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']['output']>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']['output']>;
  circle?: Maybe<Array<Circle>>;
  circleAggregate?: Maybe<CircleAggregateResult>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  completedby?: Maybe<Array<Document>>;
  completedbyAggregate?: Maybe<DocumentAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  descendant?: Maybe<Array<Queststart>>;
  descendantAggregate?: Maybe<QueststartAggregateResult>;
  details_annualUsdSalary_a?: Maybe<Scalars['String']['output']>;
  details_assignee_n?: Maybe<Scalars['String']['output']>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_a?: Maybe<Scalars['String']['output']>;
  details_circleId_i?: Maybe<Scalars['Int64']['output']>;
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_i?: Maybe<Scalars['Int64']['output']>;
  details_description_s?: Maybe<Scalars['String']['output']>;
  details_fulltimeCapacityX100_i?: Maybe<Scalars['Int64']['output']>;
  details_minDeferredX100_i?: Maybe<Scalars['Int64']['output']>;
  details_parentCircle_i?: Maybe<Scalars['Int64']['output']>;
  details_parentQuest_i?: Maybe<Scalars['Int64']['output']>;
  details_pegAmount_a?: Maybe<Scalars['String']['output']>;
  details_pegCoefficientX10000_i?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_i?: Maybe<Scalars['Int64']['output']>;
  details_recipient_n?: Maybe<Scalars['String']['output']>;
  details_rewardAmount_a?: Maybe<Scalars['String']['output']>;
  details_rewardCoefficientX10000_i?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_i?: Maybe<Scalars['Int64']['output']>;
  details_state_s?: Maybe<Scalars['String']['output']>;
  details_title_s?: Maybe<Scalars['String']['output']>;
  details_url_s?: Maybe<Scalars['String']['output']>;
  details_usdAmount_a?: Maybe<Scalars['String']['output']>;
  details_voiceAmount_a?: Maybe<Scalars['String']['output']>;
  details_voiceCoefficientX10000_i?: Maybe<Scalars['Int64']['output']>;
  docId: Scalars['String']['output'];
  failedprops?: Maybe<Array<Questcomplet>>;
  failedpropsAggregate?: Maybe<QuestcompletAggregateResult>;
  lockedby?: Maybe<Array<Questcomplet>>;
  lockedbyAggregate?: Maybe<QuestcompletAggregateResult>;
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  parentquest?: Maybe<Array<Queststart>>;
  parentquestAggregate?: Maybe<QueststartAggregateResult>;
  payment?: Maybe<Array<Payment>>;
  paymentAggregate?: Maybe<PaymentAggregateResult>;
  start?: Maybe<Array<Period>>;
  startAggregate?: Maybe<PeriodAggregateResult>;
  system_clientVersion_s?: Maybe<Scalars['String']['output']>;
  system_commentName_n?: Maybe<Scalars['String']['output']>;
  system_contractVersion_s?: Maybe<Scalars['String']['output']>;
  system_description_s?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type QueststartAscendantArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QueststartOrder>;
};


export type QueststartAscendantAggregateArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type QueststartAssigneeArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type QueststartAssigneeAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type QueststartCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CircleOrder>;
};


export type QueststartCircleAggregateArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type QueststartCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type QueststartCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type QueststartCompletedbyArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type QueststartCompletedbyAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type QueststartDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type QueststartDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type QueststartDescendantArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QueststartOrder>;
};


export type QueststartDescendantAggregateArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type QueststartFailedpropsArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QuestcompletOrder>;
};


export type QueststartFailedpropsAggregateArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
};


export type QueststartLockedbyArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QuestcompletOrder>;
};


export type QueststartLockedbyAggregateArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
};


export type QueststartOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type QueststartOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type QueststartParentquestArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QueststartOrder>;
};


export type QueststartParentquestAggregateArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type QueststartPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PaymentOrder>;
};


export type QueststartPaymentAggregateArgs = {
  filter?: InputMaybe<PaymentFilter>;
};


export type QueststartStartArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};


export type QueststartStartAggregateArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type QueststartVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type QueststartVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type QueststartVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type QueststartVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type QueststartAggregateResult = {
  __typename?: 'QueststartAggregateResult';
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']['output']>;
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']['output']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_annualUsdSalary_aMax?: Maybe<Scalars['String']['output']>;
  details_annualUsdSalary_aMin?: Maybe<Scalars['String']['output']>;
  details_assignee_nMax?: Maybe<Scalars['String']['output']>;
  details_assignee_nMin?: Maybe<Scalars['String']['output']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']['output']>;
  details_circleId_iAvg?: Maybe<Scalars['Float']['output']>;
  details_circleId_iMax?: Maybe<Scalars['Int64']['output']>;
  details_circleId_iMin?: Maybe<Scalars['Int64']['output']>;
  details_circleId_iSum?: Maybe<Scalars['Int64']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_deferredPercX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_deferredPercX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_description_sMax?: Maybe<Scalars['String']['output']>;
  details_description_sMin?: Maybe<Scalars['String']['output']>;
  details_fulltimeCapacityX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_fulltimeCapacityX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_fulltimeCapacityX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_fulltimeCapacityX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_minDeferredX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_minDeferredX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_minDeferredX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_minDeferredX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_parentCircle_iAvg?: Maybe<Scalars['Float']['output']>;
  details_parentCircle_iMax?: Maybe<Scalars['Int64']['output']>;
  details_parentCircle_iMin?: Maybe<Scalars['Int64']['output']>;
  details_parentCircle_iSum?: Maybe<Scalars['Int64']['output']>;
  details_parentQuest_iAvg?: Maybe<Scalars['Float']['output']>;
  details_parentQuest_iMax?: Maybe<Scalars['Int64']['output']>;
  details_parentQuest_iMin?: Maybe<Scalars['Int64']['output']>;
  details_parentQuest_iSum?: Maybe<Scalars['Int64']['output']>;
  details_pegAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_pegAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_pegCoefficientX10000_iAvg?: Maybe<Scalars['Float']['output']>;
  details_pegCoefficientX10000_iMax?: Maybe<Scalars['Int64']['output']>;
  details_pegCoefficientX10000_iMin?: Maybe<Scalars['Int64']['output']>;
  details_pegCoefficientX10000_iSum?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iAvg?: Maybe<Scalars['Float']['output']>;
  details_periodCount_iMax?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iMin?: Maybe<Scalars['Int64']['output']>;
  details_periodCount_iSum?: Maybe<Scalars['Int64']['output']>;
  details_recipient_nMax?: Maybe<Scalars['String']['output']>;
  details_recipient_nMin?: Maybe<Scalars['String']['output']>;
  details_rewardAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_rewardAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_rewardCoefficientX10000_iAvg?: Maybe<Scalars['Float']['output']>;
  details_rewardCoefficientX10000_iMax?: Maybe<Scalars['Int64']['output']>;
  details_rewardCoefficientX10000_iMin?: Maybe<Scalars['Int64']['output']>;
  details_rewardCoefficientX10000_iSum?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_iAvg?: Maybe<Scalars['Float']['output']>;
  details_startPeriod_iMax?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_iMin?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_iSum?: Maybe<Scalars['Int64']['output']>;
  details_state_sMax?: Maybe<Scalars['String']['output']>;
  details_state_sMin?: Maybe<Scalars['String']['output']>;
  details_title_sMax?: Maybe<Scalars['String']['output']>;
  details_title_sMin?: Maybe<Scalars['String']['output']>;
  details_url_sMax?: Maybe<Scalars['String']['output']>;
  details_url_sMin?: Maybe<Scalars['String']['output']>;
  details_usdAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_usdAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_voiceAmount_aMax?: Maybe<Scalars['String']['output']>;
  details_voiceAmount_aMin?: Maybe<Scalars['String']['output']>;
  details_voiceCoefficientX10000_iAvg?: Maybe<Scalars['Float']['output']>;
  details_voiceCoefficientX10000_iMax?: Maybe<Scalars['Int64']['output']>;
  details_voiceCoefficientX10000_iMin?: Maybe<Scalars['Int64']['output']>;
  details_voiceCoefficientX10000_iSum?: Maybe<Scalars['Int64']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_commentName_nMax?: Maybe<Scalars['String']['output']>;
  system_commentName_nMin?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_description_sMax?: Maybe<Scalars['String']['output']>;
  system_description_sMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type QueststartFilter = {
  and?: InputMaybe<Array<InputMaybe<QueststartFilter>>>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_annualUsdSalary_a?: InputMaybe<StringTermFilter>;
  details_assignee_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_circleId_i?: InputMaybe<Int64Filter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_deferredPercX100_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_fulltimeCapacityX100_i?: InputMaybe<Int64Filter>;
  details_minDeferredX100_i?: InputMaybe<Int64Filter>;
  details_parentCircle_i?: InputMaybe<Int64Filter>;
  details_parentQuest_i?: InputMaybe<Int64Filter>;
  details_pegAmount_a?: InputMaybe<StringTermFilter>;
  details_pegCoefficientX10000_i?: InputMaybe<Int64Filter>;
  details_periodCount_i?: InputMaybe<Int64Filter>;
  details_recipient_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_rewardAmount_a?: InputMaybe<StringTermFilter>;
  details_rewardCoefficientX10000_i?: InputMaybe<Int64Filter>;
  details_startPeriod_i?: InputMaybe<Int64Filter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_url_s?: InputMaybe<StringRegExpFilter>;
  details_usdAmount_a?: InputMaybe<StringTermFilter>;
  details_voiceAmount_a?: InputMaybe<StringTermFilter>;
  details_voiceCoefficientX10000_i?: InputMaybe<Int64Filter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<QueststartHasFilter>>>;
  not?: InputMaybe<QueststartFilter>;
  or?: InputMaybe<Array<InputMaybe<QueststartFilter>>>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum QueststartHasFilter {
  Ascendant = 'ascendant',
  Assignee = 'assignee',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Circle = 'circle',
  Cmntsect = 'cmntsect',
  Completedby = 'completedby',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  Descendant = 'descendant',
  DetailsAnnualUsdSalaryA = 'details_annualUsdSalary_a',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsCircleIdI = 'details_circleId_i',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsFulltimeCapacityX100I = 'details_fulltimeCapacityX100_i',
  DetailsMinDeferredX100I = 'details_minDeferredX100_i',
  DetailsParentCircleI = 'details_parentCircle_i',
  DetailsParentQuestI = 'details_parentQuest_i',
  DetailsPegAmountA = 'details_pegAmount_a',
  DetailsPegCoefficientX10000I = 'details_pegCoefficientX10000_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsRecipientN = 'details_recipient_n',
  DetailsRewardAmountA = 'details_rewardAmount_a',
  DetailsRewardCoefficientX10000I = 'details_rewardCoefficientX10000_i',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DetailsUsdAmountA = 'details_usdAmount_a',
  DetailsVoiceAmountA = 'details_voiceAmount_a',
  DetailsVoiceCoefficientX10000I = 'details_voiceCoefficientX10000_i',
  DocId = 'docId',
  Failedprops = 'failedprops',
  Lockedby = 'lockedby',
  Ownedby = 'ownedby',
  Parentquest = 'parentquest',
  Payment = 'payment',
  Start = 'start',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type QueststartOrder = {
  asc?: InputMaybe<QueststartOrderable>;
  desc?: InputMaybe<QueststartOrderable>;
  then?: InputMaybe<QueststartOrder>;
};

export enum QueststartOrderable {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAnnualUsdSalaryA = 'details_annualUsdSalary_a',
  DetailsAssigneeN = 'details_assignee_n',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsCircleIdI = 'details_circleId_i',
  DetailsDaoI = 'details_dao_i',
  DetailsDeferredPercX100I = 'details_deferredPercX100_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsFulltimeCapacityX100I = 'details_fulltimeCapacityX100_i',
  DetailsMinDeferredX100I = 'details_minDeferredX100_i',
  DetailsParentCircleI = 'details_parentCircle_i',
  DetailsParentQuestI = 'details_parentQuest_i',
  DetailsPegAmountA = 'details_pegAmount_a',
  DetailsPegCoefficientX10000I = 'details_pegCoefficientX10000_i',
  DetailsPeriodCountI = 'details_periodCount_i',
  DetailsRecipientN = 'details_recipient_n',
  DetailsRewardAmountA = 'details_rewardAmount_a',
  DetailsRewardCoefficientX10000I = 'details_rewardCoefficientX10000_i',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DetailsUsdAmountA = 'details_usdAmount_a',
  DetailsVoiceAmountA = 'details_voiceAmount_a',
  DetailsVoiceCoefficientX10000I = 'details_voiceCoefficientX10000_i',
  DocId = 'docId',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type QueststartPatch = {
  ascendant?: InputMaybe<Array<QueststartRef>>;
  assignee?: InputMaybe<Array<MemberRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  circle?: InputMaybe<Array<CircleRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completedby?: InputMaybe<Array<DocumentRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  descendant?: InputMaybe<Array<QueststartRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']['input']>;
  details_assignee_n?: InputMaybe<Scalars['String']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_circleId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_fulltimeCapacityX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']['input']>;
  details_parentQuest_i?: InputMaybe<Scalars['Int64']['input']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_pegCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_recipient_n?: InputMaybe<Scalars['String']['input']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_rewardCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  details_usdAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_voiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  failedprops?: InputMaybe<Array<QuestcompletRef>>;
  lockedby?: InputMaybe<Array<QuestcompletRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentquest?: InputMaybe<Array<QueststartRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type QueststartRef = {
  ascendant?: InputMaybe<Array<QueststartRef>>;
  assignee?: InputMaybe<Array<MemberRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  circle?: InputMaybe<Array<CircleRef>>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  completedby?: InputMaybe<Array<DocumentRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  descendant?: InputMaybe<Array<QueststartRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']['input']>;
  details_assignee_n?: InputMaybe<Scalars['String']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_circleId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_deferredPercX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_fulltimeCapacityX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_parentCircle_i?: InputMaybe<Scalars['Int64']['input']>;
  details_parentQuest_i?: InputMaybe<Scalars['Int64']['input']>;
  details_pegAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_pegCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_periodCount_i?: InputMaybe<Scalars['Int64']['input']>;
  details_recipient_n?: InputMaybe<Scalars['String']['input']>;
  details_rewardAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_rewardCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  details_usdAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_voiceAmount_a?: InputMaybe<Scalars['String']['input']>;
  details_voiceCoefficientX10000_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  failedprops?: InputMaybe<Array<QuestcompletRef>>;
  lockedby?: InputMaybe<Array<QuestcompletRef>>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  parentquest?: InputMaybe<Array<QueststartRef>>;
  payment?: InputMaybe<Array<PaymentRef>>;
  start?: InputMaybe<Array<PeriodRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type Reaction = Document & {
  __typename?: 'Reaction';
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  docId: Scalars['String']['output'];
  reaction_type_n?: Maybe<Scalars['String']['output']>;
  reactionlnkr?: Maybe<Array<Member>>;
  reactionlnkrAggregate?: Maybe<MemberAggregateResult>;
  reactionof?: Maybe<Array<Comment>>;
  reactionofAggregate?: Maybe<CommentAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type ReactionReactionlnkrArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type ReactionReactionlnkrAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type ReactionReactionofArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CommentOrder>;
};


export type ReactionReactionofAggregateArgs = {
  filter?: InputMaybe<CommentFilter>;
};

export type ReactionAggregateResult = {
  __typename?: 'ReactionAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  reaction_type_nMax?: Maybe<Scalars['String']['output']>;
  reaction_type_nMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type ReactionFilter = {
  and?: InputMaybe<Array<InputMaybe<ReactionFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<ReactionHasFilter>>>;
  not?: InputMaybe<ReactionFilter>;
  or?: InputMaybe<Array<InputMaybe<ReactionFilter>>>;
  reaction_type_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum ReactionHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  ReactionTypeN = 'reaction_type_n',
  Reactionlnkr = 'reactionlnkr',
  Reactionof = 'reactionof',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type ReactionOrder = {
  asc?: InputMaybe<ReactionOrderable>;
  desc?: InputMaybe<ReactionOrderable>;
  then?: InputMaybe<ReactionOrder>;
};

export enum ReactionOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  ReactionTypeN = 'reaction_type_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type ReactionPatch = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  reaction_type_n?: InputMaybe<Scalars['String']['input']>;
  reactionlnkr?: InputMaybe<Array<MemberRef>>;
  reactionof?: InputMaybe<Array<CommentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ReactionRef = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  reaction_type_n?: InputMaybe<Scalars['String']['input']>;
  reactionlnkr?: InputMaybe<Array<MemberRef>>;
  reactionof?: InputMaybe<Array<CommentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type Redemption = Document & {
  __typename?: 'Redemption';
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_amountPaid_a?: Maybe<Scalars['String']['output']>;
  details_amountRequested_a?: Maybe<Scalars['String']['output']>;
  details_requestor_n?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  legacy_id_i?: Maybe<Scalars['Int64']['output']>;
  legacy_notes_s?: Maybe<Scalars['String']['output']>;
  paidby?: Maybe<Array<TrsyPayment>>;
  paidbyAggregate?: Maybe<TrsyPaymentAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type RedemptionPaidbyArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TrsyPaymentOrder>;
};


export type RedemptionPaidbyAggregateArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
};

export type RedemptionAggregateResult = {
  __typename?: 'RedemptionAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_amountPaid_aMax?: Maybe<Scalars['String']['output']>;
  details_amountPaid_aMin?: Maybe<Scalars['String']['output']>;
  details_amountRequested_aMax?: Maybe<Scalars['String']['output']>;
  details_amountRequested_aMin?: Maybe<Scalars['String']['output']>;
  details_requestor_nMax?: Maybe<Scalars['String']['output']>;
  details_requestor_nMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  legacy_id_iAvg?: Maybe<Scalars['Float']['output']>;
  legacy_id_iMax?: Maybe<Scalars['Int64']['output']>;
  legacy_id_iMin?: Maybe<Scalars['Int64']['output']>;
  legacy_id_iSum?: Maybe<Scalars['Int64']['output']>;
  legacy_notes_sMax?: Maybe<Scalars['String']['output']>;
  legacy_notes_sMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type RedemptionFilter = {
  and?: InputMaybe<Array<InputMaybe<RedemptionFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_amountPaid_a?: InputMaybe<StringTermFilter>;
  details_amountRequested_a?: InputMaybe<StringTermFilter>;
  details_requestor_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<RedemptionHasFilter>>>;
  legacy_id_i?: InputMaybe<Int64Filter>;
  legacy_notes_s?: InputMaybe<StringRegExpFilter>;
  not?: InputMaybe<RedemptionFilter>;
  or?: InputMaybe<Array<InputMaybe<RedemptionFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum RedemptionHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAmountPaidA = 'details_amountPaid_a',
  DetailsAmountRequestedA = 'details_amountRequested_a',
  DetailsRequestorN = 'details_requestor_n',
  DocId = 'docId',
  LegacyIdI = 'legacy_id_i',
  LegacyNotesS = 'legacy_notes_s',
  Paidby = 'paidby',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type RedemptionOrder = {
  asc?: InputMaybe<RedemptionOrderable>;
  desc?: InputMaybe<RedemptionOrderable>;
  then?: InputMaybe<RedemptionOrder>;
};

export enum RedemptionOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAmountPaidA = 'details_amountPaid_a',
  DetailsAmountRequestedA = 'details_amountRequested_a',
  DetailsRequestorN = 'details_requestor_n',
  DocId = 'docId',
  LegacyIdI = 'legacy_id_i',
  LegacyNotesS = 'legacy_notes_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type RedemptionPatch = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_amountPaid_a?: InputMaybe<Scalars['String']['input']>;
  details_amountRequested_a?: InputMaybe<Scalars['String']['input']>;
  details_requestor_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  legacy_id_i?: InputMaybe<Scalars['Int64']['input']>;
  legacy_notes_s?: InputMaybe<Scalars['String']['input']>;
  paidby?: InputMaybe<Array<TrsyPaymentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type RedemptionRef = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_amountPaid_a?: InputMaybe<Scalars['String']['input']>;
  details_amountRequested_a?: InputMaybe<Scalars['String']['input']>;
  details_requestor_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  legacy_id_i?: InputMaybe<Scalars['Int64']['input']>;
  legacy_notes_s?: InputMaybe<Scalars['String']['input']>;
  paidby?: InputMaybe<Array<TrsyPaymentRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type Role = Document & Votable & {
  __typename?: 'Role';
  assignment?: Maybe<Array<Assignment>>;
  assignmentAggregate?: Maybe<AssignmentAggregateResult>;
  ballotOptions_abstain_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']['output']>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']['output']>;
  cmntsect?: Maybe<Array<CmntSection>>;
  cmntsectAggregate?: Maybe<CmntSectionAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_annualUsdSalary_a?: Maybe<Scalars['String']['output']>;
  details_autoApprove_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_a?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_a?: Maybe<Scalars['String']['output']>;
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  details_description_s?: Maybe<Scalars['String']['output']>;
  details_endPeriod_i?: Maybe<Scalars['Int64']['output']>;
  details_fulltimeCapacityX100_i?: Maybe<Scalars['Int64']['output']>;
  details_minDeferredX100_i?: Maybe<Scalars['Int64']['output']>;
  details_minTimeShareX100_i?: Maybe<Scalars['Int64']['output']>;
  details_name_s?: Maybe<Scalars['String']['output']>;
  details_originId_i?: Maybe<Scalars['Int64']['output']>;
  details_owner_n?: Maybe<Scalars['String']['output']>;
  details_startPeriod_i?: Maybe<Scalars['Int64']['output']>;
  details_state_s?: Maybe<Scalars['String']['output']>;
  details_suspensionDate_t?: Maybe<Scalars['DateTime']['output']>;
  details_title_s?: Maybe<Scalars['String']['output']>;
  details_url_s?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  system_ballotId_n?: Maybe<Scalars['String']['output']>;
  system_clientVersion_s?: Maybe<Scalars['String']['output']>;
  system_commentName_n?: Maybe<Scalars['String']['output']>;
  system_contractVersion_s?: Maybe<Scalars['String']['output']>;
  system_defaultAsset_i?: Maybe<Scalars['Int64']['output']>;
  system_description_s?: Maybe<Scalars['String']['output']>;
  system_legacyObjectCreatedDate_t?: Maybe<Scalars['DateTime']['output']>;
  system_legacyObjectId_i?: Maybe<Scalars['Int64']['output']>;
  system_legacyObjectScope_n?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']['output']>;
  system_selfApproved_i?: Maybe<Scalars['Int64']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type RoleAssignmentArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignmentOrder>;
};


export type RoleAssignmentAggregateArgs = {
  filter?: InputMaybe<AssignmentFilter>;
};


export type RoleCmntsectArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type RoleCmntsectAggregateArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type RoleDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type RoleDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type RoleOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type RoleOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type RoleVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type RoleVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type RoleVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type RoleVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type RoleAggregateResult = {
  __typename?: 'RoleAggregateResult';
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']['output']>;
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']['output']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_annualUsdSalary_aMax?: Maybe<Scalars['String']['output']>;
  details_annualUsdSalary_aMin?: Maybe<Scalars['String']['output']>;
  details_autoApprove_iAvg?: Maybe<Scalars['Float']['output']>;
  details_autoApprove_iMax?: Maybe<Scalars['Int64']['output']>;
  details_autoApprove_iMin?: Maybe<Scalars['Int64']['output']>;
  details_autoApprove_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_aMin?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  details_description_sMax?: Maybe<Scalars['String']['output']>;
  details_description_sMin?: Maybe<Scalars['String']['output']>;
  details_endPeriod_iAvg?: Maybe<Scalars['Float']['output']>;
  details_endPeriod_iMax?: Maybe<Scalars['Int64']['output']>;
  details_endPeriod_iMin?: Maybe<Scalars['Int64']['output']>;
  details_endPeriod_iSum?: Maybe<Scalars['Int64']['output']>;
  details_fulltimeCapacityX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_fulltimeCapacityX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_fulltimeCapacityX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_fulltimeCapacityX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_minDeferredX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_minDeferredX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_minDeferredX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_minDeferredX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_minTimeShareX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_minTimeShareX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_minTimeShareX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_minTimeShareX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_name_sMax?: Maybe<Scalars['String']['output']>;
  details_name_sMin?: Maybe<Scalars['String']['output']>;
  details_originId_iAvg?: Maybe<Scalars['Float']['output']>;
  details_originId_iMax?: Maybe<Scalars['Int64']['output']>;
  details_originId_iMin?: Maybe<Scalars['Int64']['output']>;
  details_originId_iSum?: Maybe<Scalars['Int64']['output']>;
  details_owner_nMax?: Maybe<Scalars['String']['output']>;
  details_owner_nMin?: Maybe<Scalars['String']['output']>;
  details_startPeriod_iAvg?: Maybe<Scalars['Float']['output']>;
  details_startPeriod_iMax?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_iMin?: Maybe<Scalars['Int64']['output']>;
  details_startPeriod_iSum?: Maybe<Scalars['Int64']['output']>;
  details_state_sMax?: Maybe<Scalars['String']['output']>;
  details_state_sMin?: Maybe<Scalars['String']['output']>;
  details_suspensionDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_suspensionDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  details_title_sMax?: Maybe<Scalars['String']['output']>;
  details_title_sMin?: Maybe<Scalars['String']['output']>;
  details_url_sMax?: Maybe<Scalars['String']['output']>;
  details_url_sMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_ballotId_nMax?: Maybe<Scalars['String']['output']>;
  system_ballotId_nMin?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_commentName_nMax?: Maybe<Scalars['String']['output']>;
  system_commentName_nMin?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_defaultAsset_iAvg?: Maybe<Scalars['Float']['output']>;
  system_defaultAsset_iMax?: Maybe<Scalars['Int64']['output']>;
  system_defaultAsset_iMin?: Maybe<Scalars['Int64']['output']>;
  system_defaultAsset_iSum?: Maybe<Scalars['Int64']['output']>;
  system_description_sMax?: Maybe<Scalars['String']['output']>;
  system_description_sMin?: Maybe<Scalars['String']['output']>;
  system_legacyObjectCreatedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_legacyObjectCreatedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  system_legacyObjectId_iAvg?: Maybe<Scalars['Float']['output']>;
  system_legacyObjectId_iMax?: Maybe<Scalars['Int64']['output']>;
  system_legacyObjectId_iMin?: Maybe<Scalars['Int64']['output']>;
  system_legacyObjectId_iSum?: Maybe<Scalars['Int64']['output']>;
  system_legacyObjectScope_nMax?: Maybe<Scalars['String']['output']>;
  system_legacyObjectScope_nMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  system_selfApproved_iAvg?: Maybe<Scalars['Float']['output']>;
  system_selfApproved_iMax?: Maybe<Scalars['Int64']['output']>;
  system_selfApproved_iMin?: Maybe<Scalars['Int64']['output']>;
  system_selfApproved_iSum?: Maybe<Scalars['Int64']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type RoleFilter = {
  and?: InputMaybe<Array<InputMaybe<RoleFilter>>>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_annualUsdSalary_a?: InputMaybe<StringTermFilter>;
  details_autoApprove_i?: InputMaybe<Int64Filter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_a?: InputMaybe<StringTermFilter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_endPeriod_i?: InputMaybe<Int64Filter>;
  details_fulltimeCapacityX100_i?: InputMaybe<Int64Filter>;
  details_minDeferredX100_i?: InputMaybe<Int64Filter>;
  details_minTimeShareX100_i?: InputMaybe<Int64Filter>;
  details_name_s?: InputMaybe<StringRegExpFilter>;
  details_originId_i?: InputMaybe<Int64Filter>;
  details_owner_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_startPeriod_i?: InputMaybe<Int64Filter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_suspensionDate_t?: InputMaybe<DateTimeFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  details_url_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<RoleHasFilter>>>;
  not?: InputMaybe<RoleFilter>;
  or?: InputMaybe<Array<InputMaybe<RoleFilter>>>;
  system_ballotId_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_defaultAsset_i?: InputMaybe<Int64Filter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_legacyObjectCreatedDate_t?: InputMaybe<DateTimeFilter>;
  system_legacyObjectId_i?: InputMaybe<Int64Filter>;
  system_legacyObjectScope_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  system_selfApproved_i?: InputMaybe<Int64Filter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum RoleHasFilter {
  Assignment = 'assignment',
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Cmntsect = 'cmntsect',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsAnnualUsdSalaryA = 'details_annualUsdSalary_a',
  DetailsAutoApproveI = 'details_autoApprove_i',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsFulltimeCapacityX100I = 'details_fulltimeCapacityX100_i',
  DetailsMinDeferredX100I = 'details_minDeferredX100_i',
  DetailsMinTimeShareX100I = 'details_minTimeShareX100_i',
  DetailsNameS = 'details_name_s',
  DetailsOriginIdI = 'details_originId_i',
  DetailsOwnerN = 'details_owner_n',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsSuspensionDateT = 'details_suspensionDate_t',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DocId = 'docId',
  Ownedby = 'ownedby',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDefaultAssetI = 'system_defaultAsset_i',
  SystemDescriptionS = 'system_description_s',
  SystemLegacyObjectCreatedDateT = 'system_legacyObjectCreatedDate_t',
  SystemLegacyObjectIdI = 'system_legacyObjectId_i',
  SystemLegacyObjectScopeN = 'system_legacyObjectScope_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  SystemSelfApprovedI = 'system_selfApproved_i',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type RoleOrder = {
  asc?: InputMaybe<RoleOrderable>;
  desc?: InputMaybe<RoleOrderable>;
  then?: InputMaybe<RoleOrder>;
};

export enum RoleOrderable {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAnnualUsdSalaryA = 'details_annualUsdSalary_a',
  DetailsAutoApproveI = 'details_autoApprove_i',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsEndPeriodI = 'details_endPeriod_i',
  DetailsFulltimeCapacityX100I = 'details_fulltimeCapacityX100_i',
  DetailsMinDeferredX100I = 'details_minDeferredX100_i',
  DetailsMinTimeShareX100I = 'details_minTimeShareX100_i',
  DetailsNameS = 'details_name_s',
  DetailsOriginIdI = 'details_originId_i',
  DetailsOwnerN = 'details_owner_n',
  DetailsStartPeriodI = 'details_startPeriod_i',
  DetailsStateS = 'details_state_s',
  DetailsSuspensionDateT = 'details_suspensionDate_t',
  DetailsTitleS = 'details_title_s',
  DetailsUrlS = 'details_url_s',
  DocId = 'docId',
  SystemBallotIdN = 'system_ballotId_n',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDefaultAssetI = 'system_defaultAsset_i',
  SystemDescriptionS = 'system_description_s',
  SystemLegacyObjectCreatedDateT = 'system_legacyObjectCreatedDate_t',
  SystemLegacyObjectIdI = 'system_legacyObjectId_i',
  SystemLegacyObjectScopeN = 'system_legacyObjectScope_n',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  SystemSelfApprovedI = 'system_selfApproved_i',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type RolePatch = {
  assignment?: InputMaybe<Array<AssignmentRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']['input']>;
  details_autoApprove_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_fulltimeCapacityX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_minTimeShareX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  details_originId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_owner_n?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_suspensionDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_defaultAsset_i?: InputMaybe<Scalars['Int64']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']['input']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_selfApproved_i?: InputMaybe<Scalars['Int64']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type RoleRef = {
  assignment?: InputMaybe<Array<AssignmentRef>>;
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  cmntsect?: InputMaybe<Array<CmntSectionRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']['input']>;
  details_autoApprove_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_endPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_fulltimeCapacityX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_minTimeShareX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  details_originId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_owner_n?: InputMaybe<Scalars['String']['input']>;
  details_startPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_suspensionDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  details_url_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_ballotId_n?: InputMaybe<Scalars['String']['input']>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_defaultAsset_i?: InputMaybe<Scalars['Int64']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_legacyObjectCreatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_legacyObjectId_i?: InputMaybe<Scalars['Int64']['input']>;
  system_legacyObjectScope_n?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  system_selfApproved_i?: InputMaybe<Scalars['Int64']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type Salaryband = Document & {
  __typename?: 'Salaryband';
  assignment?: Maybe<Array<Assignment>>;
  assignmentAggregate?: Maybe<AssignmentAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_annualUsdSalary_a?: Maybe<Scalars['String']['output']>;
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  details_minDeferredX100_i?: Maybe<Scalars['Int64']['output']>;
  details_name_s?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  system_defaultAsset_i?: Maybe<Scalars['Int64']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type SalarybandAssignmentArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignmentOrder>;
};


export type SalarybandAssignmentAggregateArgs = {
  filter?: InputMaybe<AssignmentFilter>;
};


export type SalarybandDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type SalarybandDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};

export type SalarybandAggregateResult = {
  __typename?: 'SalarybandAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_annualUsdSalary_aMax?: Maybe<Scalars['String']['output']>;
  details_annualUsdSalary_aMin?: Maybe<Scalars['String']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  details_minDeferredX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_minDeferredX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_minDeferredX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_minDeferredX100_iSum?: Maybe<Scalars['Int64']['output']>;
  details_name_sMax?: Maybe<Scalars['String']['output']>;
  details_name_sMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_defaultAsset_iAvg?: Maybe<Scalars['Float']['output']>;
  system_defaultAsset_iMax?: Maybe<Scalars['Int64']['output']>;
  system_defaultAsset_iMin?: Maybe<Scalars['Int64']['output']>;
  system_defaultAsset_iSum?: Maybe<Scalars['Int64']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type SalarybandFilter = {
  and?: InputMaybe<Array<InputMaybe<SalarybandFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_annualUsdSalary_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_minDeferredX100_i?: InputMaybe<Int64Filter>;
  details_name_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<SalarybandHasFilter>>>;
  not?: InputMaybe<SalarybandFilter>;
  or?: InputMaybe<Array<InputMaybe<SalarybandFilter>>>;
  system_defaultAsset_i?: InputMaybe<Int64Filter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum SalarybandHasFilter {
  Assignment = 'assignment',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsAnnualUsdSalaryA = 'details_annualUsdSalary_a',
  DetailsDaoI = 'details_dao_i',
  DetailsMinDeferredX100I = 'details_minDeferredX100_i',
  DetailsNameS = 'details_name_s',
  DocId = 'docId',
  SystemDefaultAssetI = 'system_defaultAsset_i',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type SalarybandOrder = {
  asc?: InputMaybe<SalarybandOrderable>;
  desc?: InputMaybe<SalarybandOrderable>;
  then?: InputMaybe<SalarybandOrder>;
};

export enum SalarybandOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAnnualUsdSalaryA = 'details_annualUsdSalary_a',
  DetailsDaoI = 'details_dao_i',
  DetailsMinDeferredX100I = 'details_minDeferredX100_i',
  DetailsNameS = 'details_name_s',
  DocId = 'docId',
  SystemDefaultAssetI = 'system_defaultAsset_i',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type SalarybandPatch = {
  assignment?: InputMaybe<Array<AssignmentRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  system_defaultAsset_i?: InputMaybe<Scalars['Int64']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SalarybandRef = {
  assignment?: InputMaybe<Array<AssignmentRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_annualUsdSalary_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_minDeferredX100_i?: InputMaybe<Scalars['Int64']['input']>;
  details_name_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  system_defaultAsset_i?: InputMaybe<Scalars['Int64']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type Settings = Document & {
  __typename?: 'Settings';
  admins_account_n?: Maybe<Scalars['String']['output']>;
  admins_updatedDate_t?: Maybe<Scalars['DateTime']['output']>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  docId: Scalars['String']['output'];
  ecosystem_domain_s?: Maybe<Scalars['String']['output']>;
  ecosystem_logo_s?: Maybe<Scalars['String']['output']>;
  ecosystem_name_s?: Maybe<Scalars['String']['output']>;
  ecosystem_purpose_s?: Maybe<Scalars['String']['output']>;
  onboarders_account_n?: Maybe<Scalars['String']['output']>;
  onboarders_updatedDate_t?: Maybe<Scalars['DateTime']['output']>;
  otherSettings_logo_s?: Maybe<Scalars['String']['output']>;
  settings_account_i?: Maybe<Scalars['Int64']['output']>;
  settings_addAdminsEnabled_i?: Maybe<Scalars['Int64']['output']>;
  settings_claimEnabled_i?: Maybe<Scalars['Int64']['output']>;
  settings_commentsContract_n?: Maybe<Scalars['String']['output']>;
  settings_commentsContract_s?: Maybe<Scalars['String']['output']>;
  settings_communityVotingAlignmentPercent_i?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingDurationSec_i?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingEnabled_i?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingMethod_s?: Maybe<Scalars['String']['output']>;
  settings_communityVotingQuorumPercent_i?: Maybe<Scalars['Int64']['output']>;
  settings_communityotingQuorumPercent_i?: Maybe<Scalars['Int64']['output']>;
  settings_communityotingQuorumPercent_s?: Maybe<Scalars['String']['output']>;
  settings_contractVersion_s?: Maybe<Scalars['String']['output']>;
  settings_contractsVersion_s?: Maybe<Scalars['String']['output']>;
  settings_daoDescription_s?: Maybe<Scalars['String']['output']>;
  settings_daoName_n?: Maybe<Scalars['String']['output']>;
  settings_daoSuper_s?: Maybe<Scalars['String']['output']>;
  settings_daoTitle_s?: Maybe<Scalars['String']['output']>;
  settings_daoUrl_s?: Maybe<Scalars['String']['output']>;
  settings_dashboardBackgroundImage_s?: Maybe<Scalars['String']['output']>;
  settings_dashboardOverlayColor_s?: Maybe<Scalars['String']['output']>;
  settings_dashboardOverlayOpacity_s?: Maybe<Scalars['String']['output']>;
  settings_dashboardParagraph_s?: Maybe<Scalars['String']['output']>;
  settings_dashboardPatternColor_s?: Maybe<Scalars['String']['output']>;
  settings_dashboardPatternOpacity_s?: Maybe<Scalars['String']['output']>;
  settings_dashboardTitle_s?: Maybe<Scalars['String']['output']>;
  settings_discordURL_s?: Maybe<Scalars['String']['output']>;
  settings_discordUrl_s?: Maybe<Scalars['String']['output']>;
  settings_documentationButtonText_s?: Maybe<Scalars['String']['output']>;
  settings_documentationURL_s?: Maybe<Scalars['String']['output']>;
  settings_documentationUrl_s?: Maybe<Scalars['String']['output']>;
  settings_ecosystemChildPriceStaked_a?: Maybe<Scalars['String']['output']>;
  settings_ecosystemChildPrice_a?: Maybe<Scalars['String']['output']>;
  settings_ecosystemPriceStaked_a?: Maybe<Scalars['String']['output']>;
  settings_ecosystemPrice_a?: Maybe<Scalars['String']['output']>;
  settings_exploreBackgroundImage_s?: Maybe<Scalars['String']['output']>;
  settings_exploreParagraph_s?: Maybe<Scalars['String']['output']>;
  settings_exploreTitle_s?: Maybe<Scalars['String']['output']>;
  settings_extendedLogo_s?: Maybe<Scalars['String']['output']>;
  settings_governanceTokenContract_n?: Maybe<Scalars['String']['output']>;
  settings_headerPattern_s?: Maybe<Scalars['String']['output']>;
  settings_homepageHeader_s?: Maybe<Scalars['String']['output']>;
  settings_homepageSubtitle_s?: Maybe<Scalars['String']['output']>;
  settings_husdTokenContract_n?: Maybe<Scalars['String']['output']>;
  settings_hvoiceTokenContract_n?: Maybe<Scalars['String']['output']>;
  settings_hyphaCosaleContract_n?: Maybe<Scalars['String']['output']>;
  settings_hyphaDeferralFactorX100_i?: Maybe<Scalars['Int64']['output']>;
  settings_hyphaTokenContract_n?: Maybe<Scalars['String']['output']>;
  settings_hyphaUsdValue_a?: Maybe<Scalars['String']['output']>;
  settings_isHypha_i?: Maybe<Scalars['Int64']['output']>;
  settings_logo_s?: Maybe<Scalars['String']['output']>;
  settings_membersApplicationEnabled_i?: Maybe<Scalars['Int64']['output']>;
  settings_membersBackgroundImage_s?: Maybe<Scalars['String']['output']>;
  settings_membersHeader_s?: Maybe<Scalars['String']['output']>;
  settings_membersOverlayColor_s?: Maybe<Scalars['String']['output']>;
  settings_membersOverlayOpacity_s?: Maybe<Scalars['String']['output']>;
  settings_membersParagraph_s?: Maybe<Scalars['String']['output']>;
  settings_membersPatternColor_s?: Maybe<Scalars['String']['output']>;
  settings_membersPatternOpacity_s?: Maybe<Scalars['String']['output']>;
  settings_membersSubtitle_s?: Maybe<Scalars['String']['output']>;
  settings_membersTitle_s?: Maybe<Scalars['String']['output']>;
  settings_msigApprovalAmount_i?: Maybe<Scalars['Int64']['output']>;
  settings_multisigEnabled_i?: Maybe<Scalars['Int64']['output']>;
  settings_myOtherOtherSetting_i?: Maybe<Scalars['Int64']['output']>;
  settings_myOtherSetting_i?: Maybe<Scalars['Int64']['output']>;
  settings_mySetting_i?: Maybe<Scalars['Int64']['output']>;
  settings_name_s?: Maybe<Scalars['String']['output']>;
  settings_nativeToken_a?: Maybe<Scalars['String']['output']>;
  settings_nextCommentSection_n?: Maybe<Scalars['String']['output']>;
  settings_nextProposalNameInt_i?: Maybe<Scalars['Int64']['output']>;
  settings_nextScheduleId_i?: Maybe<Scalars['Int64']['output']>;
  settings_nextScheduledId_i?: Maybe<Scalars['Int64']['output']>;
  settings_onboarderAccount_n?: Maybe<Scalars['String']['output']>;
  settings_organisationBackgroundImage_s?: Maybe<Scalars['String']['output']>;
  settings_organisationOverlayColor_s?: Maybe<Scalars['String']['output']>;
  settings_organisationOverlayOpacity_s?: Maybe<Scalars['String']['output']>;
  settings_organisationParagraph_s?: Maybe<Scalars['String']['output']>;
  settings_organisationPatternColor_s?: Maybe<Scalars['String']['output']>;
  settings_organisationPatternOpacity_s?: Maybe<Scalars['String']['output']>;
  settings_organisationTitle_s?: Maybe<Scalars['String']['output']>;
  settings_organizationHeader_s?: Maybe<Scalars['String']['output']>;
  settings_organizationSubtitle_s?: Maybe<Scalars['String']['output']>;
  settings_patternBase64_s?: Maybe<Scalars['String']['output']>;
  settings_patternColor_s?: Maybe<Scalars['String']['output']>;
  settings_patternOpacity_i?: Maybe<Scalars['Int64']['output']>;
  settings_patternOpacity_s?: Maybe<Scalars['String']['output']>;
  settings_pattern_s?: Maybe<Scalars['String']['output']>;
  settings_paused_i?: Maybe<Scalars['Int64']['output']>;
  settings_pegTokenContract_n?: Maybe<Scalars['String']['output']>;
  settings_pegTokenName_s?: Maybe<Scalars['String']['output']>;
  settings_pegToken_a?: Maybe<Scalars['String']['output']>;
  settings_periodDurationSec_i?: Maybe<Scalars['Int64']['output']>;
  settings_periodDurationSec_s?: Maybe<Scalars['String']['output']>;
  settings_primaryColor_s?: Maybe<Scalars['String']['output']>;
  settings_proposalsBackgroundImage_s?: Maybe<Scalars['String']['output']>;
  settings_proposalsCreationEnabled_i?: Maybe<Scalars['Int64']['output']>;
  settings_proposalsHeader_s?: Maybe<Scalars['String']['output']>;
  settings_proposalsOverlayColor_s?: Maybe<Scalars['String']['output']>;
  settings_proposalsOverlayOpacity_s?: Maybe<Scalars['String']['output']>;
  settings_proposalsParagraph_s?: Maybe<Scalars['String']['output']>;
  settings_proposalsPatternColor_s?: Maybe<Scalars['String']['output']>;
  settings_proposalsPatternOpacity_s?: Maybe<Scalars['String']['output']>;
  settings_proposalsSubtitle_s?: Maybe<Scalars['String']['output']>;
  settings_proposalsTitle_s?: Maybe<Scalars['String']['output']>;
  settings_publisherContract_n?: Maybe<Scalars['String']['output']>;
  settings_redemptionsEnabled_i?: Maybe<Scalars['Int64']['output']>;
  settings_removableBannersEnabled_i?: Maybe<Scalars['Int64']['output']>;
  settings_rewardToPegRatio_a?: Maybe<Scalars['String']['output']>;
  settings_rewardTokenContract_n?: Maybe<Scalars['String']['output']>;
  settings_rewardTokenMaxSupply_a?: Maybe<Scalars['String']['output']>;
  settings_rewardTokenName_s?: Maybe<Scalars['String']['output']>;
  settings_rewardToken_a?: Maybe<Scalars['String']['output']>;
  settings_rootNode_s?: Maybe<Scalars['String']['output']>;
  settings_saleHyphaUsdValue_a?: Maybe<Scalars['String']['output']>;
  settings_secondaryColor_s?: Maybe<Scalars['String']['output']>;
  settings_seedsDeferralFactorX100_i?: Maybe<Scalars['Int64']['output']>;
  settings_seedsEscrowContract_n?: Maybe<Scalars['String']['output']>;
  settings_seedsTokenContract_n?: Maybe<Scalars['String']['output']>;
  settings_settingsPatternBase64S_s?: Maybe<Scalars['String']['output']>;
  settings_settingsVotingAlignmentX100I_i?: Maybe<Scalars['Int64']['output']>;
  settings_settingsVotingQuorumX100I_i?: Maybe<Scalars['Int64']['output']>;
  settings_socialChat_s?: Maybe<Scalars['String']['output']>;
  settings_splashBackgroundImage_s?: Maybe<Scalars['String']['output']>;
  settings_splashOverlayColor_s?: Maybe<Scalars['String']['output']>;
  settings_splashOverlayOpacity_s?: Maybe<Scalars['String']['output']>;
  settings_splashPatternColor_s?: Maybe<Scalars['String']['output']>;
  settings_splashPatternOpacity_s?: Maybe<Scalars['String']['output']>;
  settings_testSet_i?: Maybe<Scalars['Int64']['output']>;
  settings_testSetting_a?: Maybe<Scalars['String']['output']>;
  settings_testSetting_s?: Maybe<Scalars['String']['output']>;
  settings_textColor_s?: Maybe<Scalars['String']['output']>;
  settings_threshold_i?: Maybe<Scalars['Int64']['output']>;
  settings_title_s?: Maybe<Scalars['String']['output']>;
  settings_treasuryAccount_n?: Maybe<Scalars['String']['output']>;
  settings_treasuryContract_n?: Maybe<Scalars['String']['output']>;
  settings_treasuryTokenMultiplier_i?: Maybe<Scalars['Int64']['output']>;
  settings_updatedDate_t?: Maybe<Scalars['DateTime']['output']>;
  settings_upvoteCheifDelegateCount_i?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteCheifDelegateDuration_i?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteChiefDelegateCount_i?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteDuration_i?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteHeadDelegateDuration_i?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteHeadDelegateRound_i?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteRounds_s?: Maybe<Scalars['String']['output']>;
  settings_upvoteStartDateTime_s?: Maybe<Scalars['String']['output']>;
  settings_upvoteStartDate_s?: Maybe<Scalars['String']['output']>;
  settings_upvoteStartTime_s?: Maybe<Scalars['String']['output']>;
  settings_url_s?: Maybe<Scalars['String']['output']>;
  settings_usesSeeds_i?: Maybe<Scalars['Int64']['output']>;
  settings_utilityTokenMultiplier_i?: Maybe<Scalars['Int64']['output']>;
  settings_vOTINGDURATIONSEC_i?: Maybe<Scalars['Int64']['output']>;
  settings_voiceTokenDecayPerPeriodX10M_i?: Maybe<Scalars['Int64']['output']>;
  settings_voiceTokenDecayPeriod_i?: Maybe<Scalars['Int64']['output']>;
  settings_voiceTokenDecayPeriod_s?: Maybe<Scalars['String']['output']>;
  settings_voiceTokenMultiplier_i?: Maybe<Scalars['Int64']['output']>;
  settings_voiceToken_a?: Maybe<Scalars['String']['output']>;
  settings_votingAlignmentPercentX100_i?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentPercent_i?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentPercent_s?: Maybe<Scalars['String']['output']>;
  settings_votingAlignmentX100_i?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentX100_s?: Maybe<Scalars['String']['output']>;
  settings_votingDurationSec_i?: Maybe<Scalars['Int64']['output']>;
  settings_votingDurationSec_s?: Maybe<Scalars['String']['output']>;
  settings_votingDurationSeconds_i?: Maybe<Scalars['Int64']['output']>;
  settings_votingMethod_s?: Maybe<Scalars['String']['output']>;
  settings_votingQuorumPercentX100_i?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumPercent_i?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumPercent_s?: Maybe<Scalars['String']['output']>;
  settings_votingQuorumX100_i?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumX100_s?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  tests_testingsettings_i?: Maybe<Scalars['Int64']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  urls_url1Bk1Yxby2Tie_s?: Maybe<Scalars['String']['output']>;
  urls_url1Fmizk1Zuyi2_s?: Maybe<Scalars['String']['output']>;
  urls_url1Fvbfectvsxc_s?: Maybe<Scalars['String']['output']>;
  urls_url1Mmp4Pfmrerr_s?: Maybe<Scalars['String']['output']>;
  urls_url1N5Kz3Gemseg_s?: Maybe<Scalars['String']['output']>;
  urls_url1Ovembm4Jczo_s?: Maybe<Scalars['String']['output']>;
  urls_url1Qfetejflafl_s?: Maybe<Scalars['String']['output']>;
  urls_url2Q3Pz2Hn43Gq_s?: Maybe<Scalars['String']['output']>;
  urls_url2T3Aybfvqorw_s?: Maybe<Scalars['String']['output']>;
  urls_url2T4Fdni1Styb_s?: Maybe<Scalars['String']['output']>;
  urls_url2Xegtmj2Jdsf_s?: Maybe<Scalars['String']['output']>;
  urls_url2Yfg3Nvby1Zl_s?: Maybe<Scalars['String']['output']>;
  urls_url3Cen4Uzdy2Es_s?: Maybe<Scalars['String']['output']>;
  urls_url3G2Adxfbf4Yt_s?: Maybe<Scalars['String']['output']>;
  urls_url3Lk4Nzggpubi_s?: Maybe<Scalars['String']['output']>;
  urls_url3O3W1Ggvkkax_s?: Maybe<Scalars['String']['output']>;
  urls_url3Qgrntosyxiz_s?: Maybe<Scalars['String']['output']>;
  urls_url3Vf2X13Lcepd_s?: Maybe<Scalars['String']['output']>;
  urls_url4D2V4Xmgbir2_s?: Maybe<Scalars['String']['output']>;
  urls_url4Ehml2Vqzp5C_s?: Maybe<Scalars['String']['output']>;
  urls_url4Ezfoukyd4K2_s?: Maybe<Scalars['String']['output']>;
  urls_url4Fewyw1Qtrek_s?: Maybe<Scalars['String']['output']>;
  urls_url4Jaepm23Od5W_s?: Maybe<Scalars['String']['output']>;
  urls_url4K4Gcongezpv_s?: Maybe<Scalars['String']['output']>;
  urls_url4Qkkymwtssjj_s?: Maybe<Scalars['String']['output']>;
  urls_url4U5F1Ppy4Xan_s?: Maybe<Scalars['String']['output']>;
  urls_url4Urhwj1Paeo5_s?: Maybe<Scalars['String']['output']>;
  urls_url4Uvjpanvhvtl_s?: Maybe<Scalars['String']['output']>;
  urls_url5Kkb3Tpwjiho_s?: Maybe<Scalars['String']['output']>;
  urls_url5Lsfqinc2Zyb_s?: Maybe<Scalars['String']['output']>;
  urls_url5Qakaspwwetv_s?: Maybe<Scalars['String']['output']>;
  urls_url5Vn4Ybbadgjj_s?: Maybe<Scalars['String']['output']>;
  urls_url5Z4Qztkwnbkk_s?: Maybe<Scalars['String']['output']>;
  urls_url15Mgh14Vkqke_s?: Maybe<Scalars['String']['output']>;
  urls_url22Vnqfsm3Q3S_s?: Maybe<Scalars['String']['output']>;
  urls_url25Dkrzm3Pr5R_s?: Maybe<Scalars['String']['output']>;
  urls_url32Xgw4Lmfaxh_s?: Maybe<Scalars['String']['output']>;
  urls_url34Vxjg3Npjih_s?: Maybe<Scalars['String']['output']>;
  urls_url35U3Jkcydkur_s?: Maybe<Scalars['String']['output']>;
  urls_url54Eb13Kaahtj_s?: Maybe<Scalars['String']['output']>;
  urls_url55Lqnw53A3V3_s?: Maybe<Scalars['String']['output']>;
  urls_urlA4Tm1Gd5Nb52_s?: Maybe<Scalars['String']['output']>;
  urls_urlAbh12Dbbhrtt_s?: Maybe<Scalars['String']['output']>;
  urls_urlAdhsdaccieey_s?: Maybe<Scalars['String']['output']>;
  urls_urlAikwmmc5Uf2X_s?: Maybe<Scalars['String']['output']>;
  urls_urlAjxblzgtavwl_s?: Maybe<Scalars['String']['output']>;
  urls_urlAn4Magusqjef_s?: Maybe<Scalars['String']['output']>;
  urls_urlAo4Cz1Fwtq4V_s?: Maybe<Scalars['String']['output']>;
  urls_urlAzpexlyerb3N_s?: Maybe<Scalars['String']['output']>;
  urls_urlB1Qzplmrrhiz_s?: Maybe<Scalars['String']['output']>;
  urls_urlB1Z2Znjsedtr_s?: Maybe<Scalars['String']['output']>;
  urls_urlB14Mblffsutj_s?: Maybe<Scalars['String']['output']>;
  urls_urlBamamaps_s?: Maybe<Scalars['String']['output']>;
  urls_urlBblegacy_s?: Maybe<Scalars['String']['output']>;
  urls_urlBbxp5Sxonbia_s?: Maybe<Scalars['String']['output']>;
  urls_urlBcrdm2Xqkdmb_s?: Maybe<Scalars['String']['output']>;
  urls_urlBethenewdao_s?: Maybe<Scalars['String']['output']>;
  urls_urlBjsmt2Esdzib_s?: Maybe<Scalars['String']['output']>;
  urls_urlBmhh3Zcw5Xmr_s?: Maybe<Scalars['String']['output']>;
  urls_urlBmvy1F4Jyxpk_s?: Maybe<Scalars['String']['output']>;
  urls_urlBoevvh44Prqa_s?: Maybe<Scalars['String']['output']>;
  urls_urlBsdkpibjyzkg_s?: Maybe<Scalars['String']['output']>;
  urls_urlBtchanged_s?: Maybe<Scalars['String']['output']>;
  urls_urlBtchangedho_s?: Maybe<Scalars['String']['output']>;
  urls_urlBtchangedno_s?: Maybe<Scalars['String']['output']>;
  urls_urlBwnmqskbvs5C_s?: Maybe<Scalars['String']['output']>;
  urls_urlBwr1Upma2Yjf_s?: Maybe<Scalars['String']['output']>;
  urls_urlC3Jxagqsq4C3_s?: Maybe<Scalars['String']['output']>;
  urls_urlCatalyst23_s?: Maybe<Scalars['String']['output']>;
  urls_urlCdviq1Ltflhf_s?: Maybe<Scalars['String']['output']>;
  urls_urlCgpvbclbywfg_s?: Maybe<Scalars['String']['output']>;
  urls_urlChildalphadx_s?: Maybe<Scalars['String']['output']>;
  urls_urlChildttrx_s?: Maybe<Scalars['String']['output']>;
  urls_urlCjxpo4Yaulrl_s?: Maybe<Scalars['String']['output']>;
  urls_urlCloser_s?: Maybe<Scalars['String']['output']>;
  urls_urlClubdaounive_s?: Maybe<Scalars['String']['output']>;
  urls_urlCpqveafwtbun_s?: Maybe<Scalars['String']['output']>;
  urls_urlCwiab3Vsqw5T_s?: Maybe<Scalars['String']['output']>;
  urls_urlCy22K5T4N2Tu_s?: Maybe<Scalars['String']['output']>;
  urls_urlD4Kdbzvzgrt5_s?: Maybe<Scalars['String']['output']>;
  urls_urlDd3Ymiavtdcy_s?: Maybe<Scalars['String']['output']>;
  urls_urlDearwisearth_s?: Maybe<Scalars['String']['output']>;
  urls_urlDemoeosdao_s?: Maybe<Scalars['String']['output']>;
  urls_urlDemoxdaox2_s?: Maybe<Scalars['String']['output']>;
  urls_urlDemoxdaox_s?: Maybe<Scalars['String']['output']>;
  urls_urlDevatarswrld_s?: Maybe<Scalars['String']['output']>;
  urls_urlDhotell_s?: Maybe<Scalars['String']['output']>;
  urls_urlDht5Wzq2Kjyk_s?: Maybe<Scalars['String']['output']>;
  urls_urlDjmtdxgjiorc_s?: Maybe<Scalars['String']['output']>;
  urls_urlDkpke5Idbkvd_s?: Maybe<Scalars['String']['output']>;
  urls_urlDl51Qmvjsego_s?: Maybe<Scalars['String']['output']>;
  urls_urlDmp5Bw4Gzxkr_s?: Maybe<Scalars['String']['output']>;
  urls_urlDnsz1Cbwxpap_s?: Maybe<Scalars['String']['output']>;
  urls_urlDoqxuyw5Ciem_s?: Maybe<Scalars['String']['output']>;
  urls_urlDriuukputcgz_s?: Maybe<Scalars['String']['output']>;
  urls_urlDtmiyxuodgkp_s?: Maybe<Scalars['String']['output']>;
  urls_urlDvqpp5Sdtrdg_s?: Maybe<Scalars['String']['output']>;
  urls_urlDxyzf1Ukies3_s?: Maybe<Scalars['String']['output']>;
  urls_urlE1Esoh1Keajs_s?: Maybe<Scalars['String']['output']>;
  urls_urlEarthwisefut_s?: Maybe<Scalars['String']['output']>;
  urls_urlEdm3Mnsg1Hns_s?: Maybe<Scalars['String']['output']>;
  urls_urlEghlh3Znzqwr_s?: Maybe<Scalars['String']['output']>;
  urls_urlEhgegumzynw3_s?: Maybe<Scalars['String']['output']>;
  urls_urlEk4Lpxh2Ma4S_s?: Maybe<Scalars['String']['output']>;
  urls_urlEnn5C2Fkbs3W_s?: Maybe<Scalars['String']['output']>;
  urls_urlEoctlpr3Jd5I_s?: Maybe<Scalars['String']['output']>;
  urls_urlEqi5Rxrwzjbs_s?: Maybe<Scalars['String']['output']>;
  urls_urlEv4Hb5Obkagx_s?: Maybe<Scalars['String']['output']>;
  urls_urlEwk4Xoaqeisc_s?: Maybe<Scalars['String']['output']>;
  urls_urlEz2Elj1Cje1Z_s?: Maybe<Scalars['String']['output']>;
  urls_urlFastdao_s?: Maybe<Scalars['String']['output']>;
  urls_urlFbbu5Diqmx5P_s?: Maybe<Scalars['String']['output']>;
  urls_urlFc2Fxwh43X1B_s?: Maybe<Scalars['String']['output']>;
  urls_urlFczw2Xsw5Eat_s?: Maybe<Scalars['String']['output']>;
  urls_urlFdd3Lbrpwkvj_s?: Maybe<Scalars['String']['output']>;
  urls_urlFew2Txlhcmrg_s?: Maybe<Scalars['String']['output']>;
  urls_urlFincasagrada_s?: Maybe<Scalars['String']['output']>;
  urls_urlFjkqwlfpui2U_s?: Maybe<Scalars['String']['output']>;
  urls_urlFjvqqx2Ztp2C_s?: Maybe<Scalars['String']['output']>;
  urls_urlFkhvavzzorf1_s?: Maybe<Scalars['String']['output']>;
  urls_urlFrontdao_s?: Maybe<Scalars['String']['output']>;
  urls_urlFrwzlupynkxh_s?: Maybe<Scalars['String']['output']>;
  urls_urlFzfqmy1Ahz1A_s?: Maybe<Scalars['String']['output']>;
  urls_urlG1Apwwd2Tnva_s?: Maybe<Scalars['String']['output']>;
  urls_urlG1Plywuz5Ogb_s?: Maybe<Scalars['String']['output']>;
  urls_urlGa4Pytexiwkw_s?: Maybe<Scalars['String']['output']>;
  urls_urlGaianet_s?: Maybe<Scalars['String']['output']>;
  urls_urlGaiauniondhe_s?: Maybe<Scalars['String']['output']>;
  urls_urlGdgcrhbar3Gn_s?: Maybe<Scalars['String']['output']>;
  urls_urlGenesisventu_s?: Maybe<Scalars['String']['output']>;
  urls_urlGiffj4Yhsuoq_s?: Maybe<Scalars['String']['output']>;
  urls_urlGkcxfa51Ytmn_s?: Maybe<Scalars['String']['output']>;
  urls_urlGpsngzpbx4Ix_s?: Maybe<Scalars['String']['output']>;
  urls_urlGreeninitfo_s?: Maybe<Scalars['String']['output']>;
  urls_urlGreenwood_s?: Maybe<Scalars['String']['output']>;
  urls_urlGrwaymzqcxh4_s?: Maybe<Scalars['String']['output']>;
  urls_urlGvyzicu3Ctj1_s?: Maybe<Scalars['String']['output']>;
  urls_urlH1Zrlvo24Tkz_s?: Maybe<Scalars['String']['output']>;
  urls_urlHc3Kr2Twzk1E_s?: Maybe<Scalars['String']['output']>;
  urls_urlHibvjoibbfd2_s?: Maybe<Scalars['String']['output']>;
  urls_urlHmntptjudozg_s?: Maybe<Scalars['String']['output']>;
  urls_urlHolisticsyst_s?: Maybe<Scalars['String']['output']>;
  urls_urlHqooypm5Ukct_s?: Maybe<Scalars['String']['output']>;
  urls_urlHrgufaizyp5J_s?: Maybe<Scalars['String']['output']>;
  urls_urlHy1B1Bwahvfo_s?: Maybe<Scalars['String']['output']>;
  urls_urlHy4Ojcxxjynn_s?: Maybe<Scalars['String']['output']>;
  urls_urlHypha_s?: Maybe<Scalars['String']['output']>;
  urls_urlHyphademo_s?: Maybe<Scalars['String']['output']>;
  urls_urlI4Wrguhpfslr_s?: Maybe<Scalars['String']['output']>;
  urls_urlI5Nkntm5Xnav_s?: Maybe<Scalars['String']['output']>;
  urls_urlI31Ggvxj54Je_s?: Maybe<Scalars['String']['output']>;
  urls_urlIcinet_s?: Maybe<Scalars['String']['output']>;
  urls_urlIdc3Uaupzw2I_s?: Maybe<Scalars['String']['output']>;
  urls_urlIe3Thvphmxbr_s?: Maybe<Scalars['String']['output']>;
  urls_urlIgm5Ieu43Izx_s?: Maybe<Scalars['String']['output']>;
  urls_urlIhy4W4Zrrmr4_s?: Maybe<Scalars['String']['output']>;
  urls_urlIkhhrizzdmkt_s?: Maybe<Scalars['String']['output']>;
  urls_urlIm3Skdhoqrz5_s?: Maybe<Scalars['String']['output']>;
  urls_urlImcxnrjr5Te4_s?: Maybe<Scalars['String']['output']>;
  urls_urlIntegrity_s?: Maybe<Scalars['String']['output']>;
  urls_urlIpbxmrsdrwsb_s?: Maybe<Scalars['String']['output']>;
  urls_urlIunzuazm122M_s?: Maybe<Scalars['String']['output']>;
  urls_urlJ5Hcurppvbc2_s?: Maybe<Scalars['String']['output']>;
  urls_urlJ25Oi2B5J21Q_s?: Maybe<Scalars['String']['output']>;
  urls_urlJdjqhjoyhnhy_s?: Maybe<Scalars['String']['output']>;
  urls_urlJgp4Eyy4Ike4_s?: Maybe<Scalars['String']['output']>;
  urls_urlJhfybqi5Jcdv_s?: Maybe<Scalars['String']['output']>;
  urls_urlJii2Elpvl2Ai_s?: Maybe<Scalars['String']['output']>;
  urls_urlJobth5Uqnhar_s?: Maybe<Scalars['String']['output']>;
  urls_urlJoznzd5Fskk2_s?: Maybe<Scalars['String']['output']>;
  urls_urlJupiter_s?: Maybe<Scalars['String']['output']>;
  urls_urlJwok2Ycpzgou_s?: Maybe<Scalars['String']['output']>;
  urls_urlJzoepolpnudo_s?: Maybe<Scalars['String']['output']>;
  urls_urlK5Fzn5Ztdchz_s?: Maybe<Scalars['String']['output']>;
  urls_urlK5Yhstzkcbrk_s?: Maybe<Scalars['String']['output']>;
  urls_urlKd2U1Nqd5Zpm_s?: Maybe<Scalars['String']['output']>;
  urls_urlKedxcfee4Pbk_s?: Maybe<Scalars['String']['output']>;
  urls_urlKefskfhz3Hkt_s?: Maybe<Scalars['String']['output']>;
  urls_urlKiajiljlp4Fz_s?: Maybe<Scalars['String']['output']>;
  urls_urlKitchen_s?: Maybe<Scalars['String']['output']>;
  urls_urlKsjjde4Hbn2U_s?: Maybe<Scalars['String']['output']>;
  urls_urlKuladao_s?: Maybe<Scalars['String']['output']>;
  urls_urlKv2Eibsrpcaf_s?: Maybe<Scalars['String']['output']>;
  urls_urlKvqzvpqle2Oi_s?: Maybe<Scalars['String']['output']>;
  urls_urlL4Hlmodr2Ux2_s?: Maybe<Scalars['String']['output']>;
  urls_urlL54Gm5Hzawwg_s?: Maybe<Scalars['String']['output']>;
  urls_urlLalagardens_s?: Maybe<Scalars['String']['output']>;
  urls_urlLgzydegefd2O_s?: Maybe<Scalars['String']['output']>;
  urls_urlLightleaders_s?: Maybe<Scalars['String']['output']>;
  urls_urlLiminalvill_s?: Maybe<Scalars['String']['output']>;
  urls_urlLkhwazi4Ggp3_s?: Maybe<Scalars['String']['output']>;
  urls_urlLn3Vzjj252Hd_s?: Maybe<Scalars['String']['output']>;
  urls_urlLndfupfa2H5D_s?: Maybe<Scalars['String']['output']>;
  urls_urlLnfd5Gnly5Ui_s?: Maybe<Scalars['String']['output']>;
  urls_urlLnxbx3Pixmbf_s?: Maybe<Scalars['String']['output']>;
  urls_urlM4Hk2S2Vxs1F_s?: Maybe<Scalars['String']['output']>;
  urls_urlM53Fbwxxgnrh_s?: Maybe<Scalars['String']['output']>;
  urls_urlMbaajxm41Hfa_s?: Maybe<Scalars['String']['output']>;
  urls_urlMeczomzsoiuz_s?: Maybe<Scalars['String']['output']>;
  urls_urlMf33Nwhrc2Pi_s?: Maybe<Scalars['String']['output']>;
  urls_urlMfdx2Sjxjbpf_s?: Maybe<Scalars['String']['output']>;
  urls_urlMjsie3Zvqqrm_s?: Maybe<Scalars['String']['output']>;
  urls_urlMksii3R3Ifuz_s?: Maybe<Scalars['String']['output']>;
  urls_urlMomdho_s?: Maybe<Scalars['String']['output']>;
  urls_urlMoq3Io4Gwguv_s?: Maybe<Scalars['String']['output']>;
  urls_urlMotlops3Fmcy_s?: Maybe<Scalars['String']['output']>;
  urls_urlMq32Dxpku1Yw_s?: Maybe<Scalars['String']['output']>;
  urls_urlMwm5Qizc3Gmi_s?: Maybe<Scalars['String']['output']>;
  urls_urlN1M4Hyjb3Prq_s?: Maybe<Scalars['String']['output']>;
  urls_urlN2Qb4Oq5Ceme_s?: Maybe<Scalars['String']['output']>;
  urls_urlN11Wig1Pds3W_s?: Maybe<Scalars['String']['output']>;
  urls_urlN32Wvxvkqbkb_s?: Maybe<Scalars['String']['output']>;
  urls_urlNa1Sonzbvtk5_s?: Maybe<Scalars['String']['output']>;
  urls_urlNcv3H5Dm45Qg_s?: Maybe<Scalars['String']['output']>;
  urls_urlNduy5Bttdrqq_s?: Maybe<Scalars['String']['output']>;
  urls_urlNestr_s?: Maybe<Scalars['String']['output']>;
  urls_urlNewsouthafr_s?: Maybe<Scalars['String']['output']>;
  urls_urlNextgenvill_s?: Maybe<Scalars['String']['output']>;
  urls_urlNivtbyuhk3Rd_s?: Maybe<Scalars['String']['output']>;
  urls_urlNkchcudxo425_s?: Maybe<Scalars['String']['output']>;
  urls_urlNonnhrtoku1Z_s?: Maybe<Scalars['String']['output']>;
  urls_urlNoqcp5Afx5E5_s?: Maybe<Scalars['String']['output']>;
  urls_urlO3Tzzbjaraj3_s?: Maybe<Scalars['String']['output']>;
  urls_urlOctuxbu5Kdpl_s?: Maybe<Scalars['String']['output']>;
  urls_urlOkkhmgkejuup_s?: Maybe<Scalars['String']['output']>;
  urls_urlOpdv42Sk3Yun_s?: Maybe<Scalars['String']['output']>;
  urls_urlOqeavbgf5H2H_s?: Maybe<Scalars['String']['output']>;
  urls_urlOqmt53D3Nijf_s?: Maybe<Scalars['String']['output']>;
  urls_urlOriginwisdom_s?: Maybe<Scalars['String']['output']>;
  urls_urlOsthmvtcvqk2_s?: Maybe<Scalars['String']['output']>;
  urls_urlOsylrx3Zyo3I_s?: Maybe<Scalars['String']['output']>;
  urls_urlOvfykbv5N252_s?: Maybe<Scalars['String']['output']>;
  urls_urlOzxvgkytgfm5_s?: Maybe<Scalars['String']['output']>;
  urls_urlP3Xqs1Vy53J4_s?: Maybe<Scalars['String']['output']>;
  urls_urlPachamamaris_s?: Maybe<Scalars['String']['output']>;
  urls_urlPcwoiacrdzml_s?: Maybe<Scalars['String']['output']>;
  urls_urlPgkuvuyd5Tkf_s?: Maybe<Scalars['String']['output']>;
  urls_urlPkpcaltfb2An_s?: Maybe<Scalars['String']['output']>;
  urls_urlPlanetcare_s?: Maybe<Scalars['String']['output']>;
  urls_urlPtogan1Cqjp2_s?: Maybe<Scalars['String']['output']>;
  urls_urlPuwpla2N5Z4A_s?: Maybe<Scalars['String']['output']>;
  urls_urlPy5X2Caqgvwr_s?: Maybe<Scalars['String']['output']>;
  urls_urlPyzxw1Bos3Es_s?: Maybe<Scalars['String']['output']>;
  urls_urlQ4Hexzhmslt3_s?: Maybe<Scalars['String']['output']>;
  urls_urlQbcbgv4Gpczw_s?: Maybe<Scalars['String']['output']>;
  urls_urlQhftw3Yknfus_s?: Maybe<Scalars['String']['output']>;
  urls_urlQmakgqzdtki4_s?: Maybe<Scalars['String']['output']>;
  urls_urlQonpkk3Lyivx_s?: Maybe<Scalars['String']['output']>;
  urls_urlQqwe2Utvgisr_s?: Maybe<Scalars['String']['output']>;
  urls_urlQr2Prxbizjbv_s?: Maybe<Scalars['String']['output']>;
  urls_urlQr5Jcgndgadi_s?: Maybe<Scalars['String']['output']>;
  urls_urlQs23P4Homwaf_s?: Maybe<Scalars['String']['output']>;
  urls_urlQsabrv1Zpcyu_s?: Maybe<Scalars['String']['output']>;
  urls_urlR2Ttskh142Kv_s?: Maybe<Scalars['String']['output']>;
  urls_urlR3Dtwhyei41K_s?: Maybe<Scalars['String']['output']>;
  urls_urlR24Dca2Vwnnm_s?: Maybe<Scalars['String']['output']>;
  urls_urlR31Xdmdluztn_s?: Maybe<Scalars['String']['output']>;
  urls_urlRegencivics_s?: Maybe<Scalars['String']['output']>;
  urls_urlRegeneratex_s?: Maybe<Scalars['String']['output']>;
  urls_urlRegenliving_s?: Maybe<Scalars['String']['output']>;
  urls_urlRipplesdao_s?: Maybe<Scalars['String']['output']>;
  urls_urlRiver_s?: Maybe<Scalars['String']['output']>;
  urls_urlRjjzxayy4C5I_s?: Maybe<Scalars['String']['output']>;
  urls_urlRjlaa4Xyt2Fe_s?: Maybe<Scalars['String']['output']>;
  urls_urlRjnr5Ufv3Hiz_s?: Maybe<Scalars['String']['output']>;
  urls_urlRlbajxwjl1Ue_s?: Maybe<Scalars['String']['output']>;
  urls_urlRrt1Iycndxxf_s?: Maybe<Scalars['String']['output']>;
  urls_urlRtq42Lbetbxl_s?: Maybe<Scalars['String']['output']>;
  urls_urlRtrmcn3Avkf1_s?: Maybe<Scalars['String']['output']>;
  urls_urlRtudvevl2Cjt_s?: Maybe<Scalars['String']['output']>;
  urls_urlRysnpti3Bdvg_s?: Maybe<Scalars['String']['output']>;
  urls_urlS2Zwpt2Rqxhy_s?: Maybe<Scalars['String']['output']>;
  urls_urlSaltcrossgar_s?: Maybe<Scalars['String']['output']>;
  urls_urlSamaratrust_s?: Maybe<Scalars['String']['output']>;
  urls_urlSctawkeupscc_s?: Maybe<Scalars['String']['output']>;
  urls_urlSeedscommons_s?: Maybe<Scalars['String']['output']>;
  urls_urlShepherddao_s?: Maybe<Scalars['String']['output']>;
  urls_urlShkwh1Iynyh4_s?: Maybe<Scalars['String']['output']>;
  urls_urlSi2Jvmzemt31_s?: Maybe<Scalars['String']['output']>;
  urls_urlSilxhs5C5Nar_s?: Maybe<Scalars['String']['output']>;
  urls_urlSk1Ojvjucrfq_s?: Maybe<Scalars['String']['output']>;
  urls_urlSmwgavmt5Ryt_s?: Maybe<Scalars['String']['output']>;
  urls_urlSoil1Orwrmps_s?: Maybe<Scalars['String']['output']>;
  urls_urlSotzumhlphtx_s?: Maybe<Scalars['String']['output']>;
  urls_urlSrmiubqdc4Rk_s?: Maybe<Scalars['String']['output']>;
  urls_urlSs53Hoim4Gt3_s?: Maybe<Scalars['String']['output']>;
  urls_urlSxjul33Jf1Bv_s?: Maybe<Scalars['String']['output']>;
  urls_urlT2Oqxmtjpk3X_s?: Maybe<Scalars['String']['output']>;
  urls_urlT4Ygmfu4Owip_s?: Maybe<Scalars['String']['output']>;
  urls_urlTc3Uweyd2A2C_s?: Maybe<Scalars['String']['output']>;
  urls_urlTcpswkf2Yfsf_s?: Maybe<Scalars['String']['output']>;
  urls_urlTcwrv1Aqtzxe_s?: Maybe<Scalars['String']['output']>;
  urls_urlTestdao_s?: Maybe<Scalars['String']['output']>;
  urls_urlTestnewdaocac_s?: Maybe<Scalars['String']['output']>;
  urls_urlThebestxdap_s?: Maybe<Scalars['String']['output']>;
  urls_urlThedokcyip3O_s?: Maybe<Scalars['String']['output']>;
  urls_urlTheflow_s?: Maybe<Scalars['String']['output']>;
  urls_urlThftmv3D42Kb_s?: Maybe<Scalars['String']['output']>;
  urls_urlThinkplace_s?: Maybe<Scalars['String']['output']>;
  urls_urlTighnzy4Pgu3_s?: Maybe<Scalars['String']['output']>;
  urls_urlTqmby2Eadaiu_s?: Maybe<Scalars['String']['output']>;
  urls_urlTqsre5Whjjby_s?: Maybe<Scalars['String']['output']>;
  urls_urlTrshury4Soli_s?: Maybe<Scalars['String']['output']>;
  urls_urlTss3Wqdjlalp_s?: Maybe<Scalars['String']['output']>;
  urls_urlU2T3Kwgdmrbe_s?: Maybe<Scalars['String']['output']>;
  urls_urlU4Yfk1S4Cv3H_s?: Maybe<Scalars['String']['output']>;
  urls_urlUbuntu_s?: Maybe<Scalars['String']['output']>;
  urls_urlUgcwrgniuwis_s?: Maybe<Scalars['String']['output']>;
  urls_urlUij3Uygyzyow_s?: Maybe<Scalars['String']['output']>;
  urls_urlUlpyjkthcu2C_s?: Maybe<Scalars['String']['output']>;
  urls_urlUmac2Lsxcc14_s?: Maybe<Scalars['String']['output']>;
  urls_urlUnitedplanet_s?: Maybe<Scalars['String']['output']>;
  urls_urlUniversalis_s?: Maybe<Scalars['String']['output']>;
  urls_urlUniverseland_s?: Maybe<Scalars['String']['output']>;
  urls_urlUnkailabs_s?: Maybe<Scalars['String']['output']>;
  urls_urlUpvotetest1_s?: Maybe<Scalars['String']['output']>;
  urls_urlUtanck3Sxaze_s?: Maybe<Scalars['String']['output']>;
  urls_urlUtyeq4Dqk3Iu_s?: Maybe<Scalars['String']['output']>;
  urls_urlUwkshkgwuksx_s?: Maybe<Scalars['String']['output']>;
  urls_urlUwmng5Zgcoa2_s?: Maybe<Scalars['String']['output']>;
  urls_urlUwztsw1L3Na5_s?: Maybe<Scalars['String']['output']>;
  urls_urlUzihb11Q5Ppi_s?: Maybe<Scalars['String']['output']>;
  urls_urlV2U42Hujkzzk_s?: Maybe<Scalars['String']['output']>;
  urls_urlVf3Rsnpdqx1F_s?: Maybe<Scalars['String']['output']>;
  urls_urlVflqjbatmmf1_s?: Maybe<Scalars['String']['output']>;
  urls_urlVg1Lob4Oakdz_s?: Maybe<Scalars['String']['output']>;
  urls_urlVgryuxp1Cyt4_s?: Maybe<Scalars['String']['output']>;
  urls_urlVh1Imaheqeqy_s?: Maybe<Scalars['String']['output']>;
  urls_urlVk2P3R3Zpbqu_s?: Maybe<Scalars['String']['output']>;
  urls_urlVnyenpufyes2_s?: Maybe<Scalars['String']['output']>;
  urls_urlVo3N43V4Khhi_s?: Maybe<Scalars['String']['output']>;
  urls_urlVokaoj1T5Qsr_s?: Maybe<Scalars['String']['output']>;
  urls_urlVovv2Tengevl_s?: Maybe<Scalars['String']['output']>;
  urls_urlVqloh1Dpeclv_s?: Maybe<Scalars['String']['output']>;
  urls_urlVqsgv5Mheq1Z_s?: Maybe<Scalars['String']['output']>;
  urls_urlVse4A2Ttg3On_s?: Maybe<Scalars['String']['output']>;
  urls_urlVsmoku34Pbnj_s?: Maybe<Scalars['String']['output']>;
  urls_urlVx35Wgozl15S_s?: Maybe<Scalars['String']['output']>;
  urls_urlWbh1V54Uekjy_s?: Maybe<Scalars['String']['output']>;
  urls_urlWbo53Ayfygbh_s?: Maybe<Scalars['String']['output']>;
  urls_urlWdxuocdyahaf_s?: Maybe<Scalars['String']['output']>;
  urls_urlWekqmvasjcqb_s?: Maybe<Scalars['String']['output']>;
  urls_urlWeudzvh3Hd2Q_s?: Maybe<Scalars['String']['output']>;
  urls_urlWf2Irhvtu5H5_s?: Maybe<Scalars['String']['output']>;
  urls_urlWfzlx3551Pgg_s?: Maybe<Scalars['String']['output']>;
  urls_urlWgvxprpxfngo_s?: Maybe<Scalars['String']['output']>;
  urls_urlWhnelpre1Xnz_s?: Maybe<Scalars['String']['output']>;
  urls_urlWildtrips_s?: Maybe<Scalars['String']['output']>;
  urls_urlWrongdao_s?: Maybe<Scalars['String']['output']>;
  urls_urlWtr21Owdodww_s?: Maybe<Scalars['String']['output']>;
  urls_urlWuip5Bx23244_s?: Maybe<Scalars['String']['output']>;
  urls_urlWuknmlynj5Qb_s?: Maybe<Scalars['String']['output']>;
  urls_urlWuzjmdodtrfn_s?: Maybe<Scalars['String']['output']>;
  urls_urlX5Gpg2Kk14Rp_s?: Maybe<Scalars['String']['output']>;
  urls_urlXc1Mpm4R1V3Q_s?: Maybe<Scalars['String']['output']>;
  urls_urlXecj4Cukr1Pr_s?: Maybe<Scalars['String']['output']>;
  urls_urlXfvd2Pyvelym_s?: Maybe<Scalars['String']['output']>;
  urls_urlXmiereyl52Um_s?: Maybe<Scalars['String']['output']>;
  urls_urlXpznyeq1Ujcw_s?: Maybe<Scalars['String']['output']>;
  urls_urlXrfuttwmsapm_s?: Maybe<Scalars['String']['output']>;
  urls_urlXx4Pyzevrrz3_s?: Maybe<Scalars['String']['output']>;
  urls_urlYimw2Jwzpfqx_s?: Maybe<Scalars['String']['output']>;
  urls_urlYjtij3Oxqizo_s?: Maybe<Scalars['String']['output']>;
  urls_urlYk24Za5Bqjeu_s?: Maybe<Scalars['String']['output']>;
  urls_urlYlxmkxtb4M4J_s?: Maybe<Scalars['String']['output']>;
  urls_urlYoglgtvd2Ttf_s?: Maybe<Scalars['String']['output']>;
  urls_urlYp13Kd3Fzhvm_s?: Maybe<Scalars['String']['output']>;
  urls_urlYtibux4Pydni_s?: Maybe<Scalars['String']['output']>;
  urls_urlYtowqoe4Jjg2_s?: Maybe<Scalars['String']['output']>;
  urls_urlYveif24Swpxo_s?: Maybe<Scalars['String']['output']>;
  urls_urlYxypcwoh1Pmn_s?: Maybe<Scalars['String']['output']>;
  urls_urlZgbrnuisnb3H_s?: Maybe<Scalars['String']['output']>;
  urls_urlZgepdsxircad_s?: Maybe<Scalars['String']['output']>;
  urls_urlZhuu21Czfaer_s?: Maybe<Scalars['String']['output']>;
  urls_urlZl5Fqkhoztam_s?: Maybe<Scalars['String']['output']>;
  urls_urlZu5Xtqjzo2Sq_s?: Maybe<Scalars['String']['output']>;
  urls_urlZvstjcdyjcgy_s?: Maybe<Scalars['String']['output']>;
  urls_urlZzcjstecud2T_s?: Maybe<Scalars['String']['output']>;
  urls_url_s?: Maybe<Scalars['String']['output']>;
};

export type SettingsAggregateResult = {
  __typename?: 'SettingsAggregateResult';
  admins_account_nMax?: Maybe<Scalars['String']['output']>;
  admins_account_nMin?: Maybe<Scalars['String']['output']>;
  admins_updatedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  admins_updatedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  ecosystem_domain_sMax?: Maybe<Scalars['String']['output']>;
  ecosystem_domain_sMin?: Maybe<Scalars['String']['output']>;
  ecosystem_logo_sMax?: Maybe<Scalars['String']['output']>;
  ecosystem_logo_sMin?: Maybe<Scalars['String']['output']>;
  ecosystem_name_sMax?: Maybe<Scalars['String']['output']>;
  ecosystem_name_sMin?: Maybe<Scalars['String']['output']>;
  ecosystem_purpose_sMax?: Maybe<Scalars['String']['output']>;
  ecosystem_purpose_sMin?: Maybe<Scalars['String']['output']>;
  onboarders_account_nMax?: Maybe<Scalars['String']['output']>;
  onboarders_account_nMin?: Maybe<Scalars['String']['output']>;
  onboarders_updatedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  onboarders_updatedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  otherSettings_logo_sMax?: Maybe<Scalars['String']['output']>;
  otherSettings_logo_sMin?: Maybe<Scalars['String']['output']>;
  settings_account_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_account_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_account_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_account_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_addAdminsEnabled_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_addAdminsEnabled_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_addAdminsEnabled_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_addAdminsEnabled_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_claimEnabled_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_claimEnabled_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_claimEnabled_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_claimEnabled_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_commentsContract_nMax?: Maybe<Scalars['String']['output']>;
  settings_commentsContract_nMin?: Maybe<Scalars['String']['output']>;
  settings_commentsContract_sMax?: Maybe<Scalars['String']['output']>;
  settings_commentsContract_sMin?: Maybe<Scalars['String']['output']>;
  settings_communityVotingAlignmentPercent_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_communityVotingAlignmentPercent_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingAlignmentPercent_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingAlignmentPercent_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingDurationSec_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_communityVotingDurationSec_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingDurationSec_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingDurationSec_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingEnabled_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_communityVotingEnabled_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingEnabled_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingEnabled_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingMethod_sMax?: Maybe<Scalars['String']['output']>;
  settings_communityVotingMethod_sMin?: Maybe<Scalars['String']['output']>;
  settings_communityVotingQuorumPercent_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_communityVotingQuorumPercent_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingQuorumPercent_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_communityVotingQuorumPercent_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_communityotingQuorumPercent_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_communityotingQuorumPercent_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_communityotingQuorumPercent_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_communityotingQuorumPercent_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_communityotingQuorumPercent_sMax?: Maybe<Scalars['String']['output']>;
  settings_communityotingQuorumPercent_sMin?: Maybe<Scalars['String']['output']>;
  settings_contractVersion_sMax?: Maybe<Scalars['String']['output']>;
  settings_contractVersion_sMin?: Maybe<Scalars['String']['output']>;
  settings_contractsVersion_sMax?: Maybe<Scalars['String']['output']>;
  settings_contractsVersion_sMin?: Maybe<Scalars['String']['output']>;
  settings_daoDescription_sMax?: Maybe<Scalars['String']['output']>;
  settings_daoDescription_sMin?: Maybe<Scalars['String']['output']>;
  settings_daoName_nMax?: Maybe<Scalars['String']['output']>;
  settings_daoName_nMin?: Maybe<Scalars['String']['output']>;
  settings_daoSuper_sMax?: Maybe<Scalars['String']['output']>;
  settings_daoSuper_sMin?: Maybe<Scalars['String']['output']>;
  settings_daoTitle_sMax?: Maybe<Scalars['String']['output']>;
  settings_daoTitle_sMin?: Maybe<Scalars['String']['output']>;
  settings_daoUrl_sMax?: Maybe<Scalars['String']['output']>;
  settings_daoUrl_sMin?: Maybe<Scalars['String']['output']>;
  settings_dashboardBackgroundImage_sMax?: Maybe<Scalars['String']['output']>;
  settings_dashboardBackgroundImage_sMin?: Maybe<Scalars['String']['output']>;
  settings_dashboardOverlayColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_dashboardOverlayColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_dashboardOverlayOpacity_sMax?: Maybe<Scalars['String']['output']>;
  settings_dashboardOverlayOpacity_sMin?: Maybe<Scalars['String']['output']>;
  settings_dashboardParagraph_sMax?: Maybe<Scalars['String']['output']>;
  settings_dashboardParagraph_sMin?: Maybe<Scalars['String']['output']>;
  settings_dashboardPatternColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_dashboardPatternColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_dashboardPatternOpacity_sMax?: Maybe<Scalars['String']['output']>;
  settings_dashboardPatternOpacity_sMin?: Maybe<Scalars['String']['output']>;
  settings_dashboardTitle_sMax?: Maybe<Scalars['String']['output']>;
  settings_dashboardTitle_sMin?: Maybe<Scalars['String']['output']>;
  settings_discordURL_sMax?: Maybe<Scalars['String']['output']>;
  settings_discordURL_sMin?: Maybe<Scalars['String']['output']>;
  settings_discordUrl_sMax?: Maybe<Scalars['String']['output']>;
  settings_discordUrl_sMin?: Maybe<Scalars['String']['output']>;
  settings_documentationButtonText_sMax?: Maybe<Scalars['String']['output']>;
  settings_documentationButtonText_sMin?: Maybe<Scalars['String']['output']>;
  settings_documentationURL_sMax?: Maybe<Scalars['String']['output']>;
  settings_documentationURL_sMin?: Maybe<Scalars['String']['output']>;
  settings_documentationUrl_sMax?: Maybe<Scalars['String']['output']>;
  settings_documentationUrl_sMin?: Maybe<Scalars['String']['output']>;
  settings_ecosystemChildPriceStaked_aMax?: Maybe<Scalars['String']['output']>;
  settings_ecosystemChildPriceStaked_aMin?: Maybe<Scalars['String']['output']>;
  settings_ecosystemChildPrice_aMax?: Maybe<Scalars['String']['output']>;
  settings_ecosystemChildPrice_aMin?: Maybe<Scalars['String']['output']>;
  settings_ecosystemPriceStaked_aMax?: Maybe<Scalars['String']['output']>;
  settings_ecosystemPriceStaked_aMin?: Maybe<Scalars['String']['output']>;
  settings_ecosystemPrice_aMax?: Maybe<Scalars['String']['output']>;
  settings_ecosystemPrice_aMin?: Maybe<Scalars['String']['output']>;
  settings_exploreBackgroundImage_sMax?: Maybe<Scalars['String']['output']>;
  settings_exploreBackgroundImage_sMin?: Maybe<Scalars['String']['output']>;
  settings_exploreParagraph_sMax?: Maybe<Scalars['String']['output']>;
  settings_exploreParagraph_sMin?: Maybe<Scalars['String']['output']>;
  settings_exploreTitle_sMax?: Maybe<Scalars['String']['output']>;
  settings_exploreTitle_sMin?: Maybe<Scalars['String']['output']>;
  settings_extendedLogo_sMax?: Maybe<Scalars['String']['output']>;
  settings_extendedLogo_sMin?: Maybe<Scalars['String']['output']>;
  settings_governanceTokenContract_nMax?: Maybe<Scalars['String']['output']>;
  settings_governanceTokenContract_nMin?: Maybe<Scalars['String']['output']>;
  settings_headerPattern_sMax?: Maybe<Scalars['String']['output']>;
  settings_headerPattern_sMin?: Maybe<Scalars['String']['output']>;
  settings_homepageHeader_sMax?: Maybe<Scalars['String']['output']>;
  settings_homepageHeader_sMin?: Maybe<Scalars['String']['output']>;
  settings_homepageSubtitle_sMax?: Maybe<Scalars['String']['output']>;
  settings_homepageSubtitle_sMin?: Maybe<Scalars['String']['output']>;
  settings_husdTokenContract_nMax?: Maybe<Scalars['String']['output']>;
  settings_husdTokenContract_nMin?: Maybe<Scalars['String']['output']>;
  settings_hvoiceTokenContract_nMax?: Maybe<Scalars['String']['output']>;
  settings_hvoiceTokenContract_nMin?: Maybe<Scalars['String']['output']>;
  settings_hyphaCosaleContract_nMax?: Maybe<Scalars['String']['output']>;
  settings_hyphaCosaleContract_nMin?: Maybe<Scalars['String']['output']>;
  settings_hyphaDeferralFactorX100_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_hyphaDeferralFactorX100_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_hyphaDeferralFactorX100_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_hyphaDeferralFactorX100_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_hyphaTokenContract_nMax?: Maybe<Scalars['String']['output']>;
  settings_hyphaTokenContract_nMin?: Maybe<Scalars['String']['output']>;
  settings_hyphaUsdValue_aMax?: Maybe<Scalars['String']['output']>;
  settings_hyphaUsdValue_aMin?: Maybe<Scalars['String']['output']>;
  settings_isHypha_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_isHypha_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_isHypha_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_isHypha_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_logo_sMax?: Maybe<Scalars['String']['output']>;
  settings_logo_sMin?: Maybe<Scalars['String']['output']>;
  settings_membersApplicationEnabled_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_membersApplicationEnabled_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_membersApplicationEnabled_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_membersApplicationEnabled_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_membersBackgroundImage_sMax?: Maybe<Scalars['String']['output']>;
  settings_membersBackgroundImage_sMin?: Maybe<Scalars['String']['output']>;
  settings_membersHeader_sMax?: Maybe<Scalars['String']['output']>;
  settings_membersHeader_sMin?: Maybe<Scalars['String']['output']>;
  settings_membersOverlayColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_membersOverlayColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_membersOverlayOpacity_sMax?: Maybe<Scalars['String']['output']>;
  settings_membersOverlayOpacity_sMin?: Maybe<Scalars['String']['output']>;
  settings_membersParagraph_sMax?: Maybe<Scalars['String']['output']>;
  settings_membersParagraph_sMin?: Maybe<Scalars['String']['output']>;
  settings_membersPatternColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_membersPatternColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_membersPatternOpacity_sMax?: Maybe<Scalars['String']['output']>;
  settings_membersPatternOpacity_sMin?: Maybe<Scalars['String']['output']>;
  settings_membersSubtitle_sMax?: Maybe<Scalars['String']['output']>;
  settings_membersSubtitle_sMin?: Maybe<Scalars['String']['output']>;
  settings_membersTitle_sMax?: Maybe<Scalars['String']['output']>;
  settings_membersTitle_sMin?: Maybe<Scalars['String']['output']>;
  settings_msigApprovalAmount_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_msigApprovalAmount_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_msigApprovalAmount_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_msigApprovalAmount_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_multisigEnabled_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_multisigEnabled_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_multisigEnabled_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_multisigEnabled_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_myOtherOtherSetting_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_myOtherOtherSetting_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_myOtherOtherSetting_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_myOtherOtherSetting_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_myOtherSetting_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_myOtherSetting_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_myOtherSetting_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_myOtherSetting_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_mySetting_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_mySetting_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_mySetting_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_mySetting_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_name_sMax?: Maybe<Scalars['String']['output']>;
  settings_name_sMin?: Maybe<Scalars['String']['output']>;
  settings_nativeToken_aMax?: Maybe<Scalars['String']['output']>;
  settings_nativeToken_aMin?: Maybe<Scalars['String']['output']>;
  settings_nextCommentSection_nMax?: Maybe<Scalars['String']['output']>;
  settings_nextCommentSection_nMin?: Maybe<Scalars['String']['output']>;
  settings_nextProposalNameInt_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_nextProposalNameInt_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_nextProposalNameInt_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_nextProposalNameInt_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_nextScheduleId_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_nextScheduleId_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_nextScheduleId_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_nextScheduleId_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_nextScheduledId_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_nextScheduledId_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_nextScheduledId_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_nextScheduledId_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_onboarderAccount_nMax?: Maybe<Scalars['String']['output']>;
  settings_onboarderAccount_nMin?: Maybe<Scalars['String']['output']>;
  settings_organisationBackgroundImage_sMax?: Maybe<Scalars['String']['output']>;
  settings_organisationBackgroundImage_sMin?: Maybe<Scalars['String']['output']>;
  settings_organisationOverlayColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_organisationOverlayColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_organisationOverlayOpacity_sMax?: Maybe<Scalars['String']['output']>;
  settings_organisationOverlayOpacity_sMin?: Maybe<Scalars['String']['output']>;
  settings_organisationParagraph_sMax?: Maybe<Scalars['String']['output']>;
  settings_organisationParagraph_sMin?: Maybe<Scalars['String']['output']>;
  settings_organisationPatternColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_organisationPatternColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_organisationPatternOpacity_sMax?: Maybe<Scalars['String']['output']>;
  settings_organisationPatternOpacity_sMin?: Maybe<Scalars['String']['output']>;
  settings_organisationTitle_sMax?: Maybe<Scalars['String']['output']>;
  settings_organisationTitle_sMin?: Maybe<Scalars['String']['output']>;
  settings_organizationHeader_sMax?: Maybe<Scalars['String']['output']>;
  settings_organizationHeader_sMin?: Maybe<Scalars['String']['output']>;
  settings_organizationSubtitle_sMax?: Maybe<Scalars['String']['output']>;
  settings_organizationSubtitle_sMin?: Maybe<Scalars['String']['output']>;
  settings_patternBase64_sMax?: Maybe<Scalars['String']['output']>;
  settings_patternBase64_sMin?: Maybe<Scalars['String']['output']>;
  settings_patternColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_patternColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_patternOpacity_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_patternOpacity_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_patternOpacity_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_patternOpacity_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_patternOpacity_sMax?: Maybe<Scalars['String']['output']>;
  settings_patternOpacity_sMin?: Maybe<Scalars['String']['output']>;
  settings_pattern_sMax?: Maybe<Scalars['String']['output']>;
  settings_pattern_sMin?: Maybe<Scalars['String']['output']>;
  settings_paused_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_paused_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_paused_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_paused_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_pegTokenContract_nMax?: Maybe<Scalars['String']['output']>;
  settings_pegTokenContract_nMin?: Maybe<Scalars['String']['output']>;
  settings_pegTokenName_sMax?: Maybe<Scalars['String']['output']>;
  settings_pegTokenName_sMin?: Maybe<Scalars['String']['output']>;
  settings_pegToken_aMax?: Maybe<Scalars['String']['output']>;
  settings_pegToken_aMin?: Maybe<Scalars['String']['output']>;
  settings_periodDurationSec_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_periodDurationSec_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_periodDurationSec_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_periodDurationSec_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_periodDurationSec_sMax?: Maybe<Scalars['String']['output']>;
  settings_periodDurationSec_sMin?: Maybe<Scalars['String']['output']>;
  settings_primaryColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_primaryColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_proposalsBackgroundImage_sMax?: Maybe<Scalars['String']['output']>;
  settings_proposalsBackgroundImage_sMin?: Maybe<Scalars['String']['output']>;
  settings_proposalsCreationEnabled_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_proposalsCreationEnabled_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_proposalsCreationEnabled_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_proposalsCreationEnabled_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_proposalsHeader_sMax?: Maybe<Scalars['String']['output']>;
  settings_proposalsHeader_sMin?: Maybe<Scalars['String']['output']>;
  settings_proposalsOverlayColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_proposalsOverlayColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_proposalsOverlayOpacity_sMax?: Maybe<Scalars['String']['output']>;
  settings_proposalsOverlayOpacity_sMin?: Maybe<Scalars['String']['output']>;
  settings_proposalsParagraph_sMax?: Maybe<Scalars['String']['output']>;
  settings_proposalsParagraph_sMin?: Maybe<Scalars['String']['output']>;
  settings_proposalsPatternColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_proposalsPatternColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_proposalsPatternOpacity_sMax?: Maybe<Scalars['String']['output']>;
  settings_proposalsPatternOpacity_sMin?: Maybe<Scalars['String']['output']>;
  settings_proposalsSubtitle_sMax?: Maybe<Scalars['String']['output']>;
  settings_proposalsSubtitle_sMin?: Maybe<Scalars['String']['output']>;
  settings_proposalsTitle_sMax?: Maybe<Scalars['String']['output']>;
  settings_proposalsTitle_sMin?: Maybe<Scalars['String']['output']>;
  settings_publisherContract_nMax?: Maybe<Scalars['String']['output']>;
  settings_publisherContract_nMin?: Maybe<Scalars['String']['output']>;
  settings_redemptionsEnabled_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_redemptionsEnabled_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_redemptionsEnabled_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_redemptionsEnabled_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_removableBannersEnabled_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_removableBannersEnabled_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_removableBannersEnabled_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_removableBannersEnabled_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_rewardToPegRatio_aMax?: Maybe<Scalars['String']['output']>;
  settings_rewardToPegRatio_aMin?: Maybe<Scalars['String']['output']>;
  settings_rewardTokenContract_nMax?: Maybe<Scalars['String']['output']>;
  settings_rewardTokenContract_nMin?: Maybe<Scalars['String']['output']>;
  settings_rewardTokenMaxSupply_aMax?: Maybe<Scalars['String']['output']>;
  settings_rewardTokenMaxSupply_aMin?: Maybe<Scalars['String']['output']>;
  settings_rewardTokenName_sMax?: Maybe<Scalars['String']['output']>;
  settings_rewardTokenName_sMin?: Maybe<Scalars['String']['output']>;
  settings_rewardToken_aMax?: Maybe<Scalars['String']['output']>;
  settings_rewardToken_aMin?: Maybe<Scalars['String']['output']>;
  settings_rootNode_sMax?: Maybe<Scalars['String']['output']>;
  settings_rootNode_sMin?: Maybe<Scalars['String']['output']>;
  settings_saleHyphaUsdValue_aMax?: Maybe<Scalars['String']['output']>;
  settings_saleHyphaUsdValue_aMin?: Maybe<Scalars['String']['output']>;
  settings_secondaryColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_secondaryColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_seedsDeferralFactorX100_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_seedsDeferralFactorX100_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_seedsDeferralFactorX100_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_seedsDeferralFactorX100_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_seedsEscrowContract_nMax?: Maybe<Scalars['String']['output']>;
  settings_seedsEscrowContract_nMin?: Maybe<Scalars['String']['output']>;
  settings_seedsTokenContract_nMax?: Maybe<Scalars['String']['output']>;
  settings_seedsTokenContract_nMin?: Maybe<Scalars['String']['output']>;
  settings_settingsPatternBase64S_sMax?: Maybe<Scalars['String']['output']>;
  settings_settingsPatternBase64S_sMin?: Maybe<Scalars['String']['output']>;
  settings_settingsVotingAlignmentX100I_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_settingsVotingAlignmentX100I_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_settingsVotingAlignmentX100I_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_settingsVotingAlignmentX100I_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_settingsVotingQuorumX100I_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_settingsVotingQuorumX100I_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_settingsVotingQuorumX100I_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_settingsVotingQuorumX100I_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_socialChat_sMax?: Maybe<Scalars['String']['output']>;
  settings_socialChat_sMin?: Maybe<Scalars['String']['output']>;
  settings_splashBackgroundImage_sMax?: Maybe<Scalars['String']['output']>;
  settings_splashBackgroundImage_sMin?: Maybe<Scalars['String']['output']>;
  settings_splashOverlayColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_splashOverlayColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_splashOverlayOpacity_sMax?: Maybe<Scalars['String']['output']>;
  settings_splashOverlayOpacity_sMin?: Maybe<Scalars['String']['output']>;
  settings_splashPatternColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_splashPatternColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_splashPatternOpacity_sMax?: Maybe<Scalars['String']['output']>;
  settings_splashPatternOpacity_sMin?: Maybe<Scalars['String']['output']>;
  settings_testSet_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_testSet_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_testSet_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_testSet_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_testSetting_aMax?: Maybe<Scalars['String']['output']>;
  settings_testSetting_aMin?: Maybe<Scalars['String']['output']>;
  settings_testSetting_sMax?: Maybe<Scalars['String']['output']>;
  settings_testSetting_sMin?: Maybe<Scalars['String']['output']>;
  settings_textColor_sMax?: Maybe<Scalars['String']['output']>;
  settings_textColor_sMin?: Maybe<Scalars['String']['output']>;
  settings_threshold_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_threshold_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_threshold_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_threshold_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_title_sMax?: Maybe<Scalars['String']['output']>;
  settings_title_sMin?: Maybe<Scalars['String']['output']>;
  settings_treasuryAccount_nMax?: Maybe<Scalars['String']['output']>;
  settings_treasuryAccount_nMin?: Maybe<Scalars['String']['output']>;
  settings_treasuryContract_nMax?: Maybe<Scalars['String']['output']>;
  settings_treasuryContract_nMin?: Maybe<Scalars['String']['output']>;
  settings_treasuryTokenMultiplier_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_treasuryTokenMultiplier_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_treasuryTokenMultiplier_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_treasuryTokenMultiplier_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_updatedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  settings_updatedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  settings_upvoteCheifDelegateCount_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_upvoteCheifDelegateCount_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteCheifDelegateCount_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteCheifDelegateCount_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteCheifDelegateDuration_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_upvoteCheifDelegateDuration_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteCheifDelegateDuration_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteCheifDelegateDuration_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteChiefDelegateCount_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_upvoteChiefDelegateCount_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteChiefDelegateCount_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteChiefDelegateCount_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteDuration_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_upvoteDuration_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteDuration_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteDuration_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteHeadDelegateDuration_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_upvoteHeadDelegateDuration_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteHeadDelegateDuration_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteHeadDelegateDuration_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteHeadDelegateRound_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_upvoteHeadDelegateRound_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteHeadDelegateRound_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteHeadDelegateRound_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_upvoteRounds_sMax?: Maybe<Scalars['String']['output']>;
  settings_upvoteRounds_sMin?: Maybe<Scalars['String']['output']>;
  settings_upvoteStartDateTime_sMax?: Maybe<Scalars['String']['output']>;
  settings_upvoteStartDateTime_sMin?: Maybe<Scalars['String']['output']>;
  settings_upvoteStartDate_sMax?: Maybe<Scalars['String']['output']>;
  settings_upvoteStartDate_sMin?: Maybe<Scalars['String']['output']>;
  settings_upvoteStartTime_sMax?: Maybe<Scalars['String']['output']>;
  settings_upvoteStartTime_sMin?: Maybe<Scalars['String']['output']>;
  settings_url_sMax?: Maybe<Scalars['String']['output']>;
  settings_url_sMin?: Maybe<Scalars['String']['output']>;
  settings_usesSeeds_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_usesSeeds_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_usesSeeds_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_usesSeeds_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_utilityTokenMultiplier_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_utilityTokenMultiplier_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_utilityTokenMultiplier_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_utilityTokenMultiplier_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_vOTINGDURATIONSEC_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_vOTINGDURATIONSEC_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_vOTINGDURATIONSEC_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_vOTINGDURATIONSEC_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_voiceTokenDecayPerPeriodX10M_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_voiceTokenDecayPerPeriodX10M_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_voiceTokenDecayPerPeriodX10M_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_voiceTokenDecayPerPeriodX10M_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_voiceTokenDecayPeriod_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_voiceTokenDecayPeriod_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_voiceTokenDecayPeriod_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_voiceTokenDecayPeriod_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_voiceTokenDecayPeriod_sMax?: Maybe<Scalars['String']['output']>;
  settings_voiceTokenDecayPeriod_sMin?: Maybe<Scalars['String']['output']>;
  settings_voiceTokenMultiplier_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_voiceTokenMultiplier_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_voiceTokenMultiplier_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_voiceTokenMultiplier_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_voiceToken_aMax?: Maybe<Scalars['String']['output']>;
  settings_voiceToken_aMin?: Maybe<Scalars['String']['output']>;
  settings_votingAlignmentPercentX100_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_votingAlignmentPercentX100_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentPercentX100_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentPercentX100_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentPercent_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_votingAlignmentPercent_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentPercent_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentPercent_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentPercent_sMax?: Maybe<Scalars['String']['output']>;
  settings_votingAlignmentPercent_sMin?: Maybe<Scalars['String']['output']>;
  settings_votingAlignmentX100_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_votingAlignmentX100_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentX100_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentX100_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_votingAlignmentX100_sMax?: Maybe<Scalars['String']['output']>;
  settings_votingAlignmentX100_sMin?: Maybe<Scalars['String']['output']>;
  settings_votingDurationSec_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_votingDurationSec_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_votingDurationSec_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_votingDurationSec_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_votingDurationSec_sMax?: Maybe<Scalars['String']['output']>;
  settings_votingDurationSec_sMin?: Maybe<Scalars['String']['output']>;
  settings_votingDurationSeconds_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_votingDurationSeconds_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_votingDurationSeconds_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_votingDurationSeconds_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_votingMethod_sMax?: Maybe<Scalars['String']['output']>;
  settings_votingMethod_sMin?: Maybe<Scalars['String']['output']>;
  settings_votingQuorumPercentX100_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_votingQuorumPercentX100_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumPercentX100_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumPercentX100_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumPercent_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_votingQuorumPercent_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumPercent_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumPercent_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumPercent_sMax?: Maybe<Scalars['String']['output']>;
  settings_votingQuorumPercent_sMin?: Maybe<Scalars['String']['output']>;
  settings_votingQuorumX100_iAvg?: Maybe<Scalars['Float']['output']>;
  settings_votingQuorumX100_iMax?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumX100_iMin?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumX100_iSum?: Maybe<Scalars['Int64']['output']>;
  settings_votingQuorumX100_sMax?: Maybe<Scalars['String']['output']>;
  settings_votingQuorumX100_sMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  tests_testingsettings_iAvg?: Maybe<Scalars['Float']['output']>;
  tests_testingsettings_iMax?: Maybe<Scalars['Int64']['output']>;
  tests_testingsettings_iMin?: Maybe<Scalars['Int64']['output']>;
  tests_testingsettings_iSum?: Maybe<Scalars['Int64']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
  urls_url1Bk1Yxby2Tie_sMax?: Maybe<Scalars['String']['output']>;
  urls_url1Bk1Yxby2Tie_sMin?: Maybe<Scalars['String']['output']>;
  urls_url1Fmizk1Zuyi2_sMax?: Maybe<Scalars['String']['output']>;
  urls_url1Fmizk1Zuyi2_sMin?: Maybe<Scalars['String']['output']>;
  urls_url1Fvbfectvsxc_sMax?: Maybe<Scalars['String']['output']>;
  urls_url1Fvbfectvsxc_sMin?: Maybe<Scalars['String']['output']>;
  urls_url1Mmp4Pfmrerr_sMax?: Maybe<Scalars['String']['output']>;
  urls_url1Mmp4Pfmrerr_sMin?: Maybe<Scalars['String']['output']>;
  urls_url1N5Kz3Gemseg_sMax?: Maybe<Scalars['String']['output']>;
  urls_url1N5Kz3Gemseg_sMin?: Maybe<Scalars['String']['output']>;
  urls_url1Ovembm4Jczo_sMax?: Maybe<Scalars['String']['output']>;
  urls_url1Ovembm4Jczo_sMin?: Maybe<Scalars['String']['output']>;
  urls_url1Qfetejflafl_sMax?: Maybe<Scalars['String']['output']>;
  urls_url1Qfetejflafl_sMin?: Maybe<Scalars['String']['output']>;
  urls_url2Q3Pz2Hn43Gq_sMax?: Maybe<Scalars['String']['output']>;
  urls_url2Q3Pz2Hn43Gq_sMin?: Maybe<Scalars['String']['output']>;
  urls_url2T3Aybfvqorw_sMax?: Maybe<Scalars['String']['output']>;
  urls_url2T3Aybfvqorw_sMin?: Maybe<Scalars['String']['output']>;
  urls_url2T4Fdni1Styb_sMax?: Maybe<Scalars['String']['output']>;
  urls_url2T4Fdni1Styb_sMin?: Maybe<Scalars['String']['output']>;
  urls_url2Xegtmj2Jdsf_sMax?: Maybe<Scalars['String']['output']>;
  urls_url2Xegtmj2Jdsf_sMin?: Maybe<Scalars['String']['output']>;
  urls_url2Yfg3Nvby1Zl_sMax?: Maybe<Scalars['String']['output']>;
  urls_url2Yfg3Nvby1Zl_sMin?: Maybe<Scalars['String']['output']>;
  urls_url3Cen4Uzdy2Es_sMax?: Maybe<Scalars['String']['output']>;
  urls_url3Cen4Uzdy2Es_sMin?: Maybe<Scalars['String']['output']>;
  urls_url3G2Adxfbf4Yt_sMax?: Maybe<Scalars['String']['output']>;
  urls_url3G2Adxfbf4Yt_sMin?: Maybe<Scalars['String']['output']>;
  urls_url3Lk4Nzggpubi_sMax?: Maybe<Scalars['String']['output']>;
  urls_url3Lk4Nzggpubi_sMin?: Maybe<Scalars['String']['output']>;
  urls_url3O3W1Ggvkkax_sMax?: Maybe<Scalars['String']['output']>;
  urls_url3O3W1Ggvkkax_sMin?: Maybe<Scalars['String']['output']>;
  urls_url3Qgrntosyxiz_sMax?: Maybe<Scalars['String']['output']>;
  urls_url3Qgrntosyxiz_sMin?: Maybe<Scalars['String']['output']>;
  urls_url3Vf2X13Lcepd_sMax?: Maybe<Scalars['String']['output']>;
  urls_url3Vf2X13Lcepd_sMin?: Maybe<Scalars['String']['output']>;
  urls_url4D2V4Xmgbir2_sMax?: Maybe<Scalars['String']['output']>;
  urls_url4D2V4Xmgbir2_sMin?: Maybe<Scalars['String']['output']>;
  urls_url4Ehml2Vqzp5C_sMax?: Maybe<Scalars['String']['output']>;
  urls_url4Ehml2Vqzp5C_sMin?: Maybe<Scalars['String']['output']>;
  urls_url4Ezfoukyd4K2_sMax?: Maybe<Scalars['String']['output']>;
  urls_url4Ezfoukyd4K2_sMin?: Maybe<Scalars['String']['output']>;
  urls_url4Fewyw1Qtrek_sMax?: Maybe<Scalars['String']['output']>;
  urls_url4Fewyw1Qtrek_sMin?: Maybe<Scalars['String']['output']>;
  urls_url4Jaepm23Od5W_sMax?: Maybe<Scalars['String']['output']>;
  urls_url4Jaepm23Od5W_sMin?: Maybe<Scalars['String']['output']>;
  urls_url4K4Gcongezpv_sMax?: Maybe<Scalars['String']['output']>;
  urls_url4K4Gcongezpv_sMin?: Maybe<Scalars['String']['output']>;
  urls_url4Qkkymwtssjj_sMax?: Maybe<Scalars['String']['output']>;
  urls_url4Qkkymwtssjj_sMin?: Maybe<Scalars['String']['output']>;
  urls_url4U5F1Ppy4Xan_sMax?: Maybe<Scalars['String']['output']>;
  urls_url4U5F1Ppy4Xan_sMin?: Maybe<Scalars['String']['output']>;
  urls_url4Urhwj1Paeo5_sMax?: Maybe<Scalars['String']['output']>;
  urls_url4Urhwj1Paeo5_sMin?: Maybe<Scalars['String']['output']>;
  urls_url4Uvjpanvhvtl_sMax?: Maybe<Scalars['String']['output']>;
  urls_url4Uvjpanvhvtl_sMin?: Maybe<Scalars['String']['output']>;
  urls_url5Kkb3Tpwjiho_sMax?: Maybe<Scalars['String']['output']>;
  urls_url5Kkb3Tpwjiho_sMin?: Maybe<Scalars['String']['output']>;
  urls_url5Lsfqinc2Zyb_sMax?: Maybe<Scalars['String']['output']>;
  urls_url5Lsfqinc2Zyb_sMin?: Maybe<Scalars['String']['output']>;
  urls_url5Qakaspwwetv_sMax?: Maybe<Scalars['String']['output']>;
  urls_url5Qakaspwwetv_sMin?: Maybe<Scalars['String']['output']>;
  urls_url5Vn4Ybbadgjj_sMax?: Maybe<Scalars['String']['output']>;
  urls_url5Vn4Ybbadgjj_sMin?: Maybe<Scalars['String']['output']>;
  urls_url5Z4Qztkwnbkk_sMax?: Maybe<Scalars['String']['output']>;
  urls_url5Z4Qztkwnbkk_sMin?: Maybe<Scalars['String']['output']>;
  urls_url15Mgh14Vkqke_sMax?: Maybe<Scalars['String']['output']>;
  urls_url15Mgh14Vkqke_sMin?: Maybe<Scalars['String']['output']>;
  urls_url22Vnqfsm3Q3S_sMax?: Maybe<Scalars['String']['output']>;
  urls_url22Vnqfsm3Q3S_sMin?: Maybe<Scalars['String']['output']>;
  urls_url25Dkrzm3Pr5R_sMax?: Maybe<Scalars['String']['output']>;
  urls_url25Dkrzm3Pr5R_sMin?: Maybe<Scalars['String']['output']>;
  urls_url32Xgw4Lmfaxh_sMax?: Maybe<Scalars['String']['output']>;
  urls_url32Xgw4Lmfaxh_sMin?: Maybe<Scalars['String']['output']>;
  urls_url34Vxjg3Npjih_sMax?: Maybe<Scalars['String']['output']>;
  urls_url34Vxjg3Npjih_sMin?: Maybe<Scalars['String']['output']>;
  urls_url35U3Jkcydkur_sMax?: Maybe<Scalars['String']['output']>;
  urls_url35U3Jkcydkur_sMin?: Maybe<Scalars['String']['output']>;
  urls_url54Eb13Kaahtj_sMax?: Maybe<Scalars['String']['output']>;
  urls_url54Eb13Kaahtj_sMin?: Maybe<Scalars['String']['output']>;
  urls_url55Lqnw53A3V3_sMax?: Maybe<Scalars['String']['output']>;
  urls_url55Lqnw53A3V3_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlA4Tm1Gd5Nb52_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlA4Tm1Gd5Nb52_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlAbh12Dbbhrtt_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlAbh12Dbbhrtt_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlAdhsdaccieey_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlAdhsdaccieey_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlAikwmmc5Uf2X_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlAikwmmc5Uf2X_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlAjxblzgtavwl_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlAjxblzgtavwl_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlAn4Magusqjef_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlAn4Magusqjef_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlAo4Cz1Fwtq4V_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlAo4Cz1Fwtq4V_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlAzpexlyerb3N_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlAzpexlyerb3N_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlB1Qzplmrrhiz_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlB1Qzplmrrhiz_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlB1Z2Znjsedtr_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlB1Z2Znjsedtr_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlB14Mblffsutj_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlB14Mblffsutj_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlBamamaps_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlBamamaps_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlBblegacy_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlBblegacy_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlBbxp5Sxonbia_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlBbxp5Sxonbia_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlBcrdm2Xqkdmb_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlBcrdm2Xqkdmb_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlBethenewdao_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlBethenewdao_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlBjsmt2Esdzib_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlBjsmt2Esdzib_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlBmhh3Zcw5Xmr_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlBmhh3Zcw5Xmr_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlBmvy1F4Jyxpk_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlBmvy1F4Jyxpk_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlBoevvh44Prqa_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlBoevvh44Prqa_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlBsdkpibjyzkg_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlBsdkpibjyzkg_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlBtchanged_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlBtchanged_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlBtchangedho_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlBtchangedho_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlBtchangedno_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlBtchangedno_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlBwnmqskbvs5C_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlBwnmqskbvs5C_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlBwr1Upma2Yjf_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlBwr1Upma2Yjf_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlC3Jxagqsq4C3_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlC3Jxagqsq4C3_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlCatalyst23_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlCatalyst23_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlCdviq1Ltflhf_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlCdviq1Ltflhf_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlCgpvbclbywfg_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlCgpvbclbywfg_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlChildalphadx_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlChildalphadx_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlChildttrx_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlChildttrx_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlCjxpo4Yaulrl_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlCjxpo4Yaulrl_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlCloser_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlCloser_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlClubdaounive_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlClubdaounive_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlCpqveafwtbun_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlCpqveafwtbun_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlCwiab3Vsqw5T_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlCwiab3Vsqw5T_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlCy22K5T4N2Tu_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlCy22K5T4N2Tu_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlD4Kdbzvzgrt5_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlD4Kdbzvzgrt5_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDd3Ymiavtdcy_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDd3Ymiavtdcy_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDearwisearth_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDearwisearth_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDemoeosdao_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDemoeosdao_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDemoxdaox2_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDemoxdaox2_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDemoxdaox_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDemoxdaox_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDevatarswrld_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDevatarswrld_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDhotell_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDhotell_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDht5Wzq2Kjyk_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDht5Wzq2Kjyk_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDjmtdxgjiorc_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDjmtdxgjiorc_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDkpke5Idbkvd_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDkpke5Idbkvd_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDl51Qmvjsego_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDl51Qmvjsego_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDmp5Bw4Gzxkr_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDmp5Bw4Gzxkr_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDnsz1Cbwxpap_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDnsz1Cbwxpap_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDoqxuyw5Ciem_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDoqxuyw5Ciem_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDriuukputcgz_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDriuukputcgz_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDtmiyxuodgkp_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDtmiyxuodgkp_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDvqpp5Sdtrdg_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDvqpp5Sdtrdg_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlDxyzf1Ukies3_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlDxyzf1Ukies3_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlE1Esoh1Keajs_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlE1Esoh1Keajs_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlEarthwisefut_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlEarthwisefut_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlEdm3Mnsg1Hns_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlEdm3Mnsg1Hns_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlEghlh3Znzqwr_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlEghlh3Znzqwr_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlEhgegumzynw3_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlEhgegumzynw3_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlEk4Lpxh2Ma4S_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlEk4Lpxh2Ma4S_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlEnn5C2Fkbs3W_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlEnn5C2Fkbs3W_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlEoctlpr3Jd5I_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlEoctlpr3Jd5I_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlEqi5Rxrwzjbs_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlEqi5Rxrwzjbs_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlEv4Hb5Obkagx_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlEv4Hb5Obkagx_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlEwk4Xoaqeisc_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlEwk4Xoaqeisc_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlEz2Elj1Cje1Z_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlEz2Elj1Cje1Z_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlFastdao_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlFastdao_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlFbbu5Diqmx5P_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlFbbu5Diqmx5P_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlFc2Fxwh43X1B_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlFc2Fxwh43X1B_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlFczw2Xsw5Eat_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlFczw2Xsw5Eat_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlFdd3Lbrpwkvj_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlFdd3Lbrpwkvj_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlFew2Txlhcmrg_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlFew2Txlhcmrg_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlFincasagrada_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlFincasagrada_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlFjkqwlfpui2U_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlFjkqwlfpui2U_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlFjvqqx2Ztp2C_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlFjvqqx2Ztp2C_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlFkhvavzzorf1_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlFkhvavzzorf1_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlFrontdao_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlFrontdao_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlFrwzlupynkxh_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlFrwzlupynkxh_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlFzfqmy1Ahz1A_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlFzfqmy1Ahz1A_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlG1Apwwd2Tnva_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlG1Apwwd2Tnva_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlG1Plywuz5Ogb_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlG1Plywuz5Ogb_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlGa4Pytexiwkw_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlGa4Pytexiwkw_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlGaianet_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlGaianet_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlGaiauniondhe_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlGaiauniondhe_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlGdgcrhbar3Gn_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlGdgcrhbar3Gn_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlGenesisventu_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlGenesisventu_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlGiffj4Yhsuoq_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlGiffj4Yhsuoq_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlGkcxfa51Ytmn_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlGkcxfa51Ytmn_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlGpsngzpbx4Ix_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlGpsngzpbx4Ix_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlGreeninitfo_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlGreeninitfo_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlGreenwood_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlGreenwood_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlGrwaymzqcxh4_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlGrwaymzqcxh4_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlGvyzicu3Ctj1_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlGvyzicu3Ctj1_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlH1Zrlvo24Tkz_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlH1Zrlvo24Tkz_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlHc3Kr2Twzk1E_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlHc3Kr2Twzk1E_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlHibvjoibbfd2_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlHibvjoibbfd2_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlHmntptjudozg_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlHmntptjudozg_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlHolisticsyst_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlHolisticsyst_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlHqooypm5Ukct_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlHqooypm5Ukct_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlHrgufaizyp5J_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlHrgufaizyp5J_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlHy1B1Bwahvfo_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlHy1B1Bwahvfo_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlHy4Ojcxxjynn_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlHy4Ojcxxjynn_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlHypha_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlHypha_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlHyphademo_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlHyphademo_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlI4Wrguhpfslr_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlI4Wrguhpfslr_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlI5Nkntm5Xnav_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlI5Nkntm5Xnav_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlI31Ggvxj54Je_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlI31Ggvxj54Je_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlIcinet_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlIcinet_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlIdc3Uaupzw2I_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlIdc3Uaupzw2I_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlIe3Thvphmxbr_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlIe3Thvphmxbr_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlIgm5Ieu43Izx_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlIgm5Ieu43Izx_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlIhy4W4Zrrmr4_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlIhy4W4Zrrmr4_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlIkhhrizzdmkt_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlIkhhrizzdmkt_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlIm3Skdhoqrz5_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlIm3Skdhoqrz5_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlImcxnrjr5Te4_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlImcxnrjr5Te4_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlIntegrity_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlIntegrity_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlIpbxmrsdrwsb_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlIpbxmrsdrwsb_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlIunzuazm122M_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlIunzuazm122M_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlJ5Hcurppvbc2_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlJ5Hcurppvbc2_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlJ25Oi2B5J21Q_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlJ25Oi2B5J21Q_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlJdjqhjoyhnhy_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlJdjqhjoyhnhy_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlJgp4Eyy4Ike4_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlJgp4Eyy4Ike4_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlJhfybqi5Jcdv_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlJhfybqi5Jcdv_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlJii2Elpvl2Ai_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlJii2Elpvl2Ai_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlJobth5Uqnhar_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlJobth5Uqnhar_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlJoznzd5Fskk2_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlJoznzd5Fskk2_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlJupiter_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlJupiter_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlJwok2Ycpzgou_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlJwok2Ycpzgou_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlJzoepolpnudo_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlJzoepolpnudo_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlK5Fzn5Ztdchz_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlK5Fzn5Ztdchz_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlK5Yhstzkcbrk_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlK5Yhstzkcbrk_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlKd2U1Nqd5Zpm_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlKd2U1Nqd5Zpm_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlKedxcfee4Pbk_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlKedxcfee4Pbk_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlKefskfhz3Hkt_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlKefskfhz3Hkt_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlKiajiljlp4Fz_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlKiajiljlp4Fz_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlKitchen_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlKitchen_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlKsjjde4Hbn2U_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlKsjjde4Hbn2U_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlKuladao_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlKuladao_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlKv2Eibsrpcaf_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlKv2Eibsrpcaf_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlKvqzvpqle2Oi_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlKvqzvpqle2Oi_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlL4Hlmodr2Ux2_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlL4Hlmodr2Ux2_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlL54Gm5Hzawwg_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlL54Gm5Hzawwg_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlLalagardens_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlLalagardens_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlLgzydegefd2O_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlLgzydegefd2O_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlLightleaders_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlLightleaders_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlLiminalvill_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlLiminalvill_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlLkhwazi4Ggp3_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlLkhwazi4Ggp3_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlLn3Vzjj252Hd_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlLn3Vzjj252Hd_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlLndfupfa2H5D_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlLndfupfa2H5D_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlLnfd5Gnly5Ui_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlLnfd5Gnly5Ui_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlLnxbx3Pixmbf_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlLnxbx3Pixmbf_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlM4Hk2S2Vxs1F_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlM4Hk2S2Vxs1F_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlM53Fbwxxgnrh_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlM53Fbwxxgnrh_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlMbaajxm41Hfa_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlMbaajxm41Hfa_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlMeczomzsoiuz_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlMeczomzsoiuz_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlMf33Nwhrc2Pi_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlMf33Nwhrc2Pi_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlMfdx2Sjxjbpf_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlMfdx2Sjxjbpf_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlMjsie3Zvqqrm_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlMjsie3Zvqqrm_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlMksii3R3Ifuz_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlMksii3R3Ifuz_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlMomdho_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlMomdho_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlMoq3Io4Gwguv_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlMoq3Io4Gwguv_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlMotlops3Fmcy_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlMotlops3Fmcy_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlMq32Dxpku1Yw_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlMq32Dxpku1Yw_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlMwm5Qizc3Gmi_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlMwm5Qizc3Gmi_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlN1M4Hyjb3Prq_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlN1M4Hyjb3Prq_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlN2Qb4Oq5Ceme_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlN2Qb4Oq5Ceme_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlN11Wig1Pds3W_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlN11Wig1Pds3W_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlN32Wvxvkqbkb_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlN32Wvxvkqbkb_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlNa1Sonzbvtk5_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlNa1Sonzbvtk5_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlNcv3H5Dm45Qg_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlNcv3H5Dm45Qg_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlNduy5Bttdrqq_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlNduy5Bttdrqq_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlNestr_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlNestr_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlNewsouthafr_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlNewsouthafr_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlNextgenvill_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlNextgenvill_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlNivtbyuhk3Rd_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlNivtbyuhk3Rd_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlNkchcudxo425_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlNkchcudxo425_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlNonnhrtoku1Z_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlNonnhrtoku1Z_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlNoqcp5Afx5E5_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlNoqcp5Afx5E5_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlO3Tzzbjaraj3_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlO3Tzzbjaraj3_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlOctuxbu5Kdpl_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlOctuxbu5Kdpl_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlOkkhmgkejuup_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlOkkhmgkejuup_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlOpdv42Sk3Yun_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlOpdv42Sk3Yun_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlOqeavbgf5H2H_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlOqeavbgf5H2H_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlOqmt53D3Nijf_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlOqmt53D3Nijf_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlOriginwisdom_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlOriginwisdom_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlOsthmvtcvqk2_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlOsthmvtcvqk2_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlOsylrx3Zyo3I_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlOsylrx3Zyo3I_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlOvfykbv5N252_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlOvfykbv5N252_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlOzxvgkytgfm5_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlOzxvgkytgfm5_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlP3Xqs1Vy53J4_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlP3Xqs1Vy53J4_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlPachamamaris_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlPachamamaris_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlPcwoiacrdzml_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlPcwoiacrdzml_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlPgkuvuyd5Tkf_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlPgkuvuyd5Tkf_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlPkpcaltfb2An_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlPkpcaltfb2An_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlPlanetcare_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlPlanetcare_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlPtogan1Cqjp2_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlPtogan1Cqjp2_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlPuwpla2N5Z4A_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlPuwpla2N5Z4A_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlPy5X2Caqgvwr_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlPy5X2Caqgvwr_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlPyzxw1Bos3Es_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlPyzxw1Bos3Es_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlQ4Hexzhmslt3_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlQ4Hexzhmslt3_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlQbcbgv4Gpczw_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlQbcbgv4Gpczw_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlQhftw3Yknfus_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlQhftw3Yknfus_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlQmakgqzdtki4_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlQmakgqzdtki4_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlQonpkk3Lyivx_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlQonpkk3Lyivx_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlQqwe2Utvgisr_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlQqwe2Utvgisr_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlQr2Prxbizjbv_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlQr2Prxbizjbv_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlQr5Jcgndgadi_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlQr5Jcgndgadi_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlQs23P4Homwaf_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlQs23P4Homwaf_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlQsabrv1Zpcyu_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlQsabrv1Zpcyu_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlR2Ttskh142Kv_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlR2Ttskh142Kv_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlR3Dtwhyei41K_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlR3Dtwhyei41K_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlR24Dca2Vwnnm_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlR24Dca2Vwnnm_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlR31Xdmdluztn_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlR31Xdmdluztn_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlRegencivics_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlRegencivics_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlRegeneratex_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlRegeneratex_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlRegenliving_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlRegenliving_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlRipplesdao_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlRipplesdao_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlRiver_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlRiver_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlRjjzxayy4C5I_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlRjjzxayy4C5I_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlRjlaa4Xyt2Fe_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlRjlaa4Xyt2Fe_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlRjnr5Ufv3Hiz_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlRjnr5Ufv3Hiz_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlRlbajxwjl1Ue_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlRlbajxwjl1Ue_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlRrt1Iycndxxf_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlRrt1Iycndxxf_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlRtq42Lbetbxl_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlRtq42Lbetbxl_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlRtrmcn3Avkf1_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlRtrmcn3Avkf1_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlRtudvevl2Cjt_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlRtudvevl2Cjt_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlRysnpti3Bdvg_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlRysnpti3Bdvg_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlS2Zwpt2Rqxhy_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlS2Zwpt2Rqxhy_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlSaltcrossgar_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlSaltcrossgar_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlSamaratrust_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlSamaratrust_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlSctawkeupscc_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlSctawkeupscc_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlSeedscommons_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlSeedscommons_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlShepherddao_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlShepherddao_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlShkwh1Iynyh4_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlShkwh1Iynyh4_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlSi2Jvmzemt31_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlSi2Jvmzemt31_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlSilxhs5C5Nar_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlSilxhs5C5Nar_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlSk1Ojvjucrfq_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlSk1Ojvjucrfq_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlSmwgavmt5Ryt_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlSmwgavmt5Ryt_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlSoil1Orwrmps_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlSoil1Orwrmps_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlSotzumhlphtx_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlSotzumhlphtx_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlSrmiubqdc4Rk_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlSrmiubqdc4Rk_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlSs53Hoim4Gt3_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlSs53Hoim4Gt3_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlSxjul33Jf1Bv_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlSxjul33Jf1Bv_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlT2Oqxmtjpk3X_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlT2Oqxmtjpk3X_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlT4Ygmfu4Owip_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlT4Ygmfu4Owip_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlTc3Uweyd2A2C_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlTc3Uweyd2A2C_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlTcpswkf2Yfsf_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlTcpswkf2Yfsf_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlTcwrv1Aqtzxe_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlTcwrv1Aqtzxe_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlTestdao_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlTestdao_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlTestnewdaocac_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlTestnewdaocac_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlThebestxdap_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlThebestxdap_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlThedokcyip3O_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlThedokcyip3O_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlTheflow_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlTheflow_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlThftmv3D42Kb_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlThftmv3D42Kb_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlThinkplace_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlThinkplace_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlTighnzy4Pgu3_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlTighnzy4Pgu3_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlTqmby2Eadaiu_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlTqmby2Eadaiu_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlTqsre5Whjjby_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlTqsre5Whjjby_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlTrshury4Soli_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlTrshury4Soli_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlTss3Wqdjlalp_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlTss3Wqdjlalp_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlU2T3Kwgdmrbe_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlU2T3Kwgdmrbe_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlU4Yfk1S4Cv3H_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlU4Yfk1S4Cv3H_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlUbuntu_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlUbuntu_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlUgcwrgniuwis_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlUgcwrgniuwis_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlUij3Uygyzyow_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlUij3Uygyzyow_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlUlpyjkthcu2C_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlUlpyjkthcu2C_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlUmac2Lsxcc14_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlUmac2Lsxcc14_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlUnitedplanet_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlUnitedplanet_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlUniversalis_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlUniversalis_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlUniverseland_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlUniverseland_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlUnkailabs_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlUnkailabs_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlUpvotetest1_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlUpvotetest1_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlUtanck3Sxaze_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlUtanck3Sxaze_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlUtyeq4Dqk3Iu_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlUtyeq4Dqk3Iu_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlUwkshkgwuksx_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlUwkshkgwuksx_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlUwmng5Zgcoa2_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlUwmng5Zgcoa2_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlUwztsw1L3Na5_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlUwztsw1L3Na5_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlUzihb11Q5Ppi_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlUzihb11Q5Ppi_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlV2U42Hujkzzk_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlV2U42Hujkzzk_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlVf3Rsnpdqx1F_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlVf3Rsnpdqx1F_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlVflqjbatmmf1_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlVflqjbatmmf1_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlVg1Lob4Oakdz_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlVg1Lob4Oakdz_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlVgryuxp1Cyt4_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlVgryuxp1Cyt4_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlVh1Imaheqeqy_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlVh1Imaheqeqy_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlVk2P3R3Zpbqu_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlVk2P3R3Zpbqu_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlVnyenpufyes2_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlVnyenpufyes2_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlVo3N43V4Khhi_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlVo3N43V4Khhi_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlVokaoj1T5Qsr_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlVokaoj1T5Qsr_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlVovv2Tengevl_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlVovv2Tengevl_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlVqloh1Dpeclv_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlVqloh1Dpeclv_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlVqsgv5Mheq1Z_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlVqsgv5Mheq1Z_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlVse4A2Ttg3On_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlVse4A2Ttg3On_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlVsmoku34Pbnj_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlVsmoku34Pbnj_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlVx35Wgozl15S_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlVx35Wgozl15S_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlWbh1V54Uekjy_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlWbh1V54Uekjy_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlWbo53Ayfygbh_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlWbo53Ayfygbh_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlWdxuocdyahaf_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlWdxuocdyahaf_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlWekqmvasjcqb_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlWekqmvasjcqb_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlWeudzvh3Hd2Q_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlWeudzvh3Hd2Q_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlWf2Irhvtu5H5_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlWf2Irhvtu5H5_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlWfzlx3551Pgg_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlWfzlx3551Pgg_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlWgvxprpxfngo_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlWgvxprpxfngo_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlWhnelpre1Xnz_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlWhnelpre1Xnz_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlWildtrips_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlWildtrips_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlWrongdao_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlWrongdao_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlWtr21Owdodww_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlWtr21Owdodww_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlWuip5Bx23244_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlWuip5Bx23244_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlWuknmlynj5Qb_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlWuknmlynj5Qb_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlWuzjmdodtrfn_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlWuzjmdodtrfn_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlX5Gpg2Kk14Rp_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlX5Gpg2Kk14Rp_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlXc1Mpm4R1V3Q_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlXc1Mpm4R1V3Q_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlXecj4Cukr1Pr_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlXecj4Cukr1Pr_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlXfvd2Pyvelym_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlXfvd2Pyvelym_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlXmiereyl52Um_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlXmiereyl52Um_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlXpznyeq1Ujcw_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlXpznyeq1Ujcw_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlXrfuttwmsapm_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlXrfuttwmsapm_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlXx4Pyzevrrz3_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlXx4Pyzevrrz3_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlYimw2Jwzpfqx_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlYimw2Jwzpfqx_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlYjtij3Oxqizo_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlYjtij3Oxqizo_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlYk24Za5Bqjeu_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlYk24Za5Bqjeu_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlYlxmkxtb4M4J_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlYlxmkxtb4M4J_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlYoglgtvd2Ttf_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlYoglgtvd2Ttf_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlYp13Kd3Fzhvm_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlYp13Kd3Fzhvm_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlYtibux4Pydni_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlYtibux4Pydni_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlYtowqoe4Jjg2_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlYtowqoe4Jjg2_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlYveif24Swpxo_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlYveif24Swpxo_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlYxypcwoh1Pmn_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlYxypcwoh1Pmn_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlZgbrnuisnb3H_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlZgbrnuisnb3H_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlZgepdsxircad_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlZgepdsxircad_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlZhuu21Czfaer_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlZhuu21Czfaer_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlZl5Fqkhoztam_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlZl5Fqkhoztam_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlZu5Xtqjzo2Sq_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlZu5Xtqjzo2Sq_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlZvstjcdyjcgy_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlZvstjcdyjcgy_sMin?: Maybe<Scalars['String']['output']>;
  urls_urlZzcjstecud2T_sMax?: Maybe<Scalars['String']['output']>;
  urls_urlZzcjstecud2T_sMin?: Maybe<Scalars['String']['output']>;
  urls_url_sMax?: Maybe<Scalars['String']['output']>;
  urls_url_sMin?: Maybe<Scalars['String']['output']>;
};

export type SettingsFilter = {
  admins_account_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  admins_updatedDate_t?: InputMaybe<DateTimeFilter>;
  and?: InputMaybe<Array<InputMaybe<SettingsFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  ecosystem_domain_s?: InputMaybe<StringRegExpFilter>;
  ecosystem_logo_s?: InputMaybe<StringRegExpFilter>;
  ecosystem_name_s?: InputMaybe<StringRegExpFilter>;
  ecosystem_purpose_s?: InputMaybe<StringRegExpFilter>;
  has?: InputMaybe<Array<InputMaybe<SettingsHasFilter>>>;
  not?: InputMaybe<SettingsFilter>;
  onboarders_account_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  onboarders_updatedDate_t?: InputMaybe<DateTimeFilter>;
  or?: InputMaybe<Array<InputMaybe<SettingsFilter>>>;
  otherSettings_logo_s?: InputMaybe<StringRegExpFilter>;
  settings_account_i?: InputMaybe<Int64Filter>;
  settings_addAdminsEnabled_i?: InputMaybe<Int64Filter>;
  settings_claimEnabled_i?: InputMaybe<Int64Filter>;
  settings_commentsContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_commentsContract_s?: InputMaybe<StringRegExpFilter>;
  settings_communityVotingAlignmentPercent_i?: InputMaybe<Int64Filter>;
  settings_communityVotingDurationSec_i?: InputMaybe<Int64Filter>;
  settings_communityVotingEnabled_i?: InputMaybe<Int64Filter>;
  settings_communityVotingMethod_s?: InputMaybe<StringRegExpFilter>;
  settings_communityVotingQuorumPercent_i?: InputMaybe<Int64Filter>;
  settings_communityotingQuorumPercent_i?: InputMaybe<Int64Filter>;
  settings_communityotingQuorumPercent_s?: InputMaybe<StringRegExpFilter>;
  settings_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  settings_contractsVersion_s?: InputMaybe<StringRegExpFilter>;
  settings_daoDescription_s?: InputMaybe<StringRegExpFilter>;
  settings_daoName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_daoSuper_s?: InputMaybe<StringRegExpFilter>;
  settings_daoTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_daoUrl_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardOverlayColor_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardOverlayOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardPatternColor_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardPatternOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_dashboardTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_discordURL_s?: InputMaybe<StringRegExpFilter>;
  settings_discordUrl_s?: InputMaybe<StringRegExpFilter>;
  settings_documentationButtonText_s?: InputMaybe<StringRegExpFilter>;
  settings_documentationURL_s?: InputMaybe<StringRegExpFilter>;
  settings_documentationUrl_s?: InputMaybe<StringRegExpFilter>;
  settings_ecosystemChildPriceStaked_a?: InputMaybe<StringTermFilter>;
  settings_ecosystemChildPrice_a?: InputMaybe<StringTermFilter>;
  settings_ecosystemPriceStaked_a?: InputMaybe<StringTermFilter>;
  settings_ecosystemPrice_a?: InputMaybe<StringTermFilter>;
  settings_exploreBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_exploreParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_exploreTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_extendedLogo_s?: InputMaybe<StringRegExpFilter>;
  settings_governanceTokenContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_headerPattern_s?: InputMaybe<StringRegExpFilter>;
  settings_homepageHeader_s?: InputMaybe<StringRegExpFilter>;
  settings_homepageSubtitle_s?: InputMaybe<StringRegExpFilter>;
  settings_husdTokenContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_hvoiceTokenContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_hyphaCosaleContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_hyphaDeferralFactorX100_i?: InputMaybe<Int64Filter>;
  settings_hyphaTokenContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_hyphaUsdValue_a?: InputMaybe<StringTermFilter>;
  settings_isHypha_i?: InputMaybe<Int64Filter>;
  settings_logo_s?: InputMaybe<StringRegExpFilter>;
  settings_membersApplicationEnabled_i?: InputMaybe<Int64Filter>;
  settings_membersBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_membersHeader_s?: InputMaybe<StringRegExpFilter>;
  settings_membersOverlayColor_s?: InputMaybe<StringRegExpFilter>;
  settings_membersOverlayOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_membersParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_membersPatternColor_s?: InputMaybe<StringRegExpFilter>;
  settings_membersPatternOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_membersSubtitle_s?: InputMaybe<StringRegExpFilter>;
  settings_membersTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_msigApprovalAmount_i?: InputMaybe<Int64Filter>;
  settings_multisigEnabled_i?: InputMaybe<Int64Filter>;
  settings_myOtherOtherSetting_i?: InputMaybe<Int64Filter>;
  settings_myOtherSetting_i?: InputMaybe<Int64Filter>;
  settings_mySetting_i?: InputMaybe<Int64Filter>;
  settings_name_s?: InputMaybe<StringRegExpFilter>;
  settings_nativeToken_a?: InputMaybe<StringTermFilter>;
  settings_nextCommentSection_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_nextProposalNameInt_i?: InputMaybe<Int64Filter>;
  settings_nextScheduleId_i?: InputMaybe<Int64Filter>;
  settings_nextScheduledId_i?: InputMaybe<Int64Filter>;
  settings_onboarderAccount_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_organisationBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_organisationOverlayColor_s?: InputMaybe<StringRegExpFilter>;
  settings_organisationOverlayOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_organisationParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_organisationPatternColor_s?: InputMaybe<StringRegExpFilter>;
  settings_organisationPatternOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_organisationTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_organizationHeader_s?: InputMaybe<StringRegExpFilter>;
  settings_organizationSubtitle_s?: InputMaybe<StringRegExpFilter>;
  settings_patternBase64_s?: InputMaybe<StringRegExpFilter>;
  settings_patternColor_s?: InputMaybe<StringRegExpFilter>;
  settings_patternOpacity_i?: InputMaybe<Int64Filter>;
  settings_patternOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_pattern_s?: InputMaybe<StringRegExpFilter>;
  settings_paused_i?: InputMaybe<Int64Filter>;
  settings_pegTokenContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_pegTokenName_s?: InputMaybe<StringRegExpFilter>;
  settings_pegToken_a?: InputMaybe<StringTermFilter>;
  settings_periodDurationSec_i?: InputMaybe<Int64Filter>;
  settings_periodDurationSec_s?: InputMaybe<StringRegExpFilter>;
  settings_primaryColor_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsCreationEnabled_i?: InputMaybe<Int64Filter>;
  settings_proposalsHeader_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsOverlayColor_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsOverlayOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsParagraph_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsPatternColor_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsPatternOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsSubtitle_s?: InputMaybe<StringRegExpFilter>;
  settings_proposalsTitle_s?: InputMaybe<StringRegExpFilter>;
  settings_publisherContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_redemptionsEnabled_i?: InputMaybe<Int64Filter>;
  settings_removableBannersEnabled_i?: InputMaybe<Int64Filter>;
  settings_rewardToPegRatio_a?: InputMaybe<StringTermFilter>;
  settings_rewardTokenContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_rewardTokenMaxSupply_a?: InputMaybe<StringTermFilter>;
  settings_rewardTokenName_s?: InputMaybe<StringRegExpFilter>;
  settings_rewardToken_a?: InputMaybe<StringTermFilter>;
  settings_rootNode_s?: InputMaybe<StringRegExpFilter>;
  settings_saleHyphaUsdValue_a?: InputMaybe<StringTermFilter>;
  settings_secondaryColor_s?: InputMaybe<StringRegExpFilter>;
  settings_seedsDeferralFactorX100_i?: InputMaybe<Int64Filter>;
  settings_seedsEscrowContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_seedsTokenContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_settingsPatternBase64S_s?: InputMaybe<StringRegExpFilter>;
  settings_settingsVotingAlignmentX100I_i?: InputMaybe<Int64Filter>;
  settings_settingsVotingQuorumX100I_i?: InputMaybe<Int64Filter>;
  settings_socialChat_s?: InputMaybe<StringRegExpFilter>;
  settings_splashBackgroundImage_s?: InputMaybe<StringRegExpFilter>;
  settings_splashOverlayColor_s?: InputMaybe<StringRegExpFilter>;
  settings_splashOverlayOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_splashPatternColor_s?: InputMaybe<StringRegExpFilter>;
  settings_splashPatternOpacity_s?: InputMaybe<StringRegExpFilter>;
  settings_testSet_i?: InputMaybe<Int64Filter>;
  settings_testSetting_a?: InputMaybe<StringTermFilter>;
  settings_testSetting_s?: InputMaybe<StringRegExpFilter>;
  settings_textColor_s?: InputMaybe<StringRegExpFilter>;
  settings_threshold_i?: InputMaybe<Int64Filter>;
  settings_title_s?: InputMaybe<StringRegExpFilter>;
  settings_treasuryAccount_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_treasuryContract_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  settings_treasuryTokenMultiplier_i?: InputMaybe<Int64Filter>;
  settings_updatedDate_t?: InputMaybe<DateTimeFilter>;
  settings_upvoteCheifDelegateCount_i?: InputMaybe<Int64Filter>;
  settings_upvoteCheifDelegateDuration_i?: InputMaybe<Int64Filter>;
  settings_upvoteChiefDelegateCount_i?: InputMaybe<Int64Filter>;
  settings_upvoteDuration_i?: InputMaybe<Int64Filter>;
  settings_upvoteHeadDelegateDuration_i?: InputMaybe<Int64Filter>;
  settings_upvoteHeadDelegateRound_i?: InputMaybe<Int64Filter>;
  settings_upvoteRounds_s?: InputMaybe<StringRegExpFilter>;
  settings_upvoteStartDateTime_s?: InputMaybe<StringRegExpFilter>;
  settings_upvoteStartDate_s?: InputMaybe<StringRegExpFilter>;
  settings_upvoteStartTime_s?: InputMaybe<StringRegExpFilter>;
  settings_url_s?: InputMaybe<StringRegExpFilter>;
  settings_usesSeeds_i?: InputMaybe<Int64Filter>;
  settings_utilityTokenMultiplier_i?: InputMaybe<Int64Filter>;
  settings_vOTINGDURATIONSEC_i?: InputMaybe<Int64Filter>;
  settings_voiceTokenDecayPerPeriodX10M_i?: InputMaybe<Int64Filter>;
  settings_voiceTokenDecayPeriod_i?: InputMaybe<Int64Filter>;
  settings_voiceTokenDecayPeriod_s?: InputMaybe<StringRegExpFilter>;
  settings_voiceTokenMultiplier_i?: InputMaybe<Int64Filter>;
  settings_voiceToken_a?: InputMaybe<StringTermFilter>;
  settings_votingAlignmentPercentX100_i?: InputMaybe<Int64Filter>;
  settings_votingAlignmentPercent_i?: InputMaybe<Int64Filter>;
  settings_votingAlignmentPercent_s?: InputMaybe<StringRegExpFilter>;
  settings_votingAlignmentX100_i?: InputMaybe<Int64Filter>;
  settings_votingAlignmentX100_s?: InputMaybe<StringRegExpFilter>;
  settings_votingDurationSec_i?: InputMaybe<Int64Filter>;
  settings_votingDurationSec_s?: InputMaybe<StringRegExpFilter>;
  settings_votingDurationSeconds_i?: InputMaybe<Int64Filter>;
  settings_votingMethod_s?: InputMaybe<StringRegExpFilter>;
  settings_votingQuorumPercentX100_i?: InputMaybe<Int64Filter>;
  settings_votingQuorumPercent_i?: InputMaybe<Int64Filter>;
  settings_votingQuorumPercent_s?: InputMaybe<StringRegExpFilter>;
  settings_votingQuorumX100_i?: InputMaybe<Int64Filter>;
  settings_votingQuorumX100_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  tests_testingsettings_i?: InputMaybe<Int64Filter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
  urls_url1Bk1Yxby2Tie_s?: InputMaybe<StringRegExpFilter>;
  urls_url1Fmizk1Zuyi2_s?: InputMaybe<StringRegExpFilter>;
  urls_url1Fvbfectvsxc_s?: InputMaybe<StringRegExpFilter>;
  urls_url1Mmp4Pfmrerr_s?: InputMaybe<StringRegExpFilter>;
  urls_url1N5Kz3Gemseg_s?: InputMaybe<StringRegExpFilter>;
  urls_url1Ovembm4Jczo_s?: InputMaybe<StringRegExpFilter>;
  urls_url1Qfetejflafl_s?: InputMaybe<StringRegExpFilter>;
  urls_url2Q3Pz2Hn43Gq_s?: InputMaybe<StringRegExpFilter>;
  urls_url2T3Aybfvqorw_s?: InputMaybe<StringRegExpFilter>;
  urls_url2T4Fdni1Styb_s?: InputMaybe<StringRegExpFilter>;
  urls_url2Xegtmj2Jdsf_s?: InputMaybe<StringRegExpFilter>;
  urls_url2Yfg3Nvby1Zl_s?: InputMaybe<StringRegExpFilter>;
  urls_url3Cen4Uzdy2Es_s?: InputMaybe<StringRegExpFilter>;
  urls_url3G2Adxfbf4Yt_s?: InputMaybe<StringRegExpFilter>;
  urls_url3Lk4Nzggpubi_s?: InputMaybe<StringRegExpFilter>;
  urls_url3O3W1Ggvkkax_s?: InputMaybe<StringRegExpFilter>;
  urls_url3Qgrntosyxiz_s?: InputMaybe<StringRegExpFilter>;
  urls_url3Vf2X13Lcepd_s?: InputMaybe<StringRegExpFilter>;
  urls_url4D2V4Xmgbir2_s?: InputMaybe<StringRegExpFilter>;
  urls_url4Ehml2Vqzp5C_s?: InputMaybe<StringRegExpFilter>;
  urls_url4Ezfoukyd4K2_s?: InputMaybe<StringRegExpFilter>;
  urls_url4Fewyw1Qtrek_s?: InputMaybe<StringRegExpFilter>;
  urls_url4Jaepm23Od5W_s?: InputMaybe<StringRegExpFilter>;
  urls_url4K4Gcongezpv_s?: InputMaybe<StringRegExpFilter>;
  urls_url4Qkkymwtssjj_s?: InputMaybe<StringRegExpFilter>;
  urls_url4U5F1Ppy4Xan_s?: InputMaybe<StringRegExpFilter>;
  urls_url4Urhwj1Paeo5_s?: InputMaybe<StringRegExpFilter>;
  urls_url4Uvjpanvhvtl_s?: InputMaybe<StringRegExpFilter>;
  urls_url5Kkb3Tpwjiho_s?: InputMaybe<StringRegExpFilter>;
  urls_url5Lsfqinc2Zyb_s?: InputMaybe<StringRegExpFilter>;
  urls_url5Qakaspwwetv_s?: InputMaybe<StringRegExpFilter>;
  urls_url5Vn4Ybbadgjj_s?: InputMaybe<StringRegExpFilter>;
  urls_url5Z4Qztkwnbkk_s?: InputMaybe<StringRegExpFilter>;
  urls_url15Mgh14Vkqke_s?: InputMaybe<StringRegExpFilter>;
  urls_url22Vnqfsm3Q3S_s?: InputMaybe<StringRegExpFilter>;
  urls_url25Dkrzm3Pr5R_s?: InputMaybe<StringRegExpFilter>;
  urls_url32Xgw4Lmfaxh_s?: InputMaybe<StringRegExpFilter>;
  urls_url34Vxjg3Npjih_s?: InputMaybe<StringRegExpFilter>;
  urls_url35U3Jkcydkur_s?: InputMaybe<StringRegExpFilter>;
  urls_url54Eb13Kaahtj_s?: InputMaybe<StringRegExpFilter>;
  urls_url55Lqnw53A3V3_s?: InputMaybe<StringRegExpFilter>;
  urls_urlA4Tm1Gd5Nb52_s?: InputMaybe<StringRegExpFilter>;
  urls_urlAbh12Dbbhrtt_s?: InputMaybe<StringRegExpFilter>;
  urls_urlAdhsdaccieey_s?: InputMaybe<StringRegExpFilter>;
  urls_urlAikwmmc5Uf2X_s?: InputMaybe<StringRegExpFilter>;
  urls_urlAjxblzgtavwl_s?: InputMaybe<StringRegExpFilter>;
  urls_urlAn4Magusqjef_s?: InputMaybe<StringRegExpFilter>;
  urls_urlAo4Cz1Fwtq4V_s?: InputMaybe<StringRegExpFilter>;
  urls_urlAzpexlyerb3N_s?: InputMaybe<StringRegExpFilter>;
  urls_urlB1Qzplmrrhiz_s?: InputMaybe<StringRegExpFilter>;
  urls_urlB1Z2Znjsedtr_s?: InputMaybe<StringRegExpFilter>;
  urls_urlB14Mblffsutj_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBamamaps_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBblegacy_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBbxp5Sxonbia_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBcrdm2Xqkdmb_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBethenewdao_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBjsmt2Esdzib_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBmhh3Zcw5Xmr_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBmvy1F4Jyxpk_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBoevvh44Prqa_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBsdkpibjyzkg_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBtchanged_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBtchangedho_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBtchangedno_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBwnmqskbvs5C_s?: InputMaybe<StringRegExpFilter>;
  urls_urlBwr1Upma2Yjf_s?: InputMaybe<StringRegExpFilter>;
  urls_urlC3Jxagqsq4C3_s?: InputMaybe<StringRegExpFilter>;
  urls_urlCatalyst23_s?: InputMaybe<StringRegExpFilter>;
  urls_urlCdviq1Ltflhf_s?: InputMaybe<StringRegExpFilter>;
  urls_urlCgpvbclbywfg_s?: InputMaybe<StringRegExpFilter>;
  urls_urlChildalphadx_s?: InputMaybe<StringRegExpFilter>;
  urls_urlChildttrx_s?: InputMaybe<StringRegExpFilter>;
  urls_urlCjxpo4Yaulrl_s?: InputMaybe<StringRegExpFilter>;
  urls_urlCloser_s?: InputMaybe<StringRegExpFilter>;
  urls_urlClubdaounive_s?: InputMaybe<StringRegExpFilter>;
  urls_urlCpqveafwtbun_s?: InputMaybe<StringRegExpFilter>;
  urls_urlCwiab3Vsqw5T_s?: InputMaybe<StringRegExpFilter>;
  urls_urlCy22K5T4N2Tu_s?: InputMaybe<StringRegExpFilter>;
  urls_urlD4Kdbzvzgrt5_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDd3Ymiavtdcy_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDearwisearth_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDemoeosdao_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDemoxdaox2_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDemoxdaox_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDevatarswrld_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDhotell_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDht5Wzq2Kjyk_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDjmtdxgjiorc_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDkpke5Idbkvd_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDl51Qmvjsego_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDmp5Bw4Gzxkr_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDnsz1Cbwxpap_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDoqxuyw5Ciem_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDriuukputcgz_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDtmiyxuodgkp_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDvqpp5Sdtrdg_s?: InputMaybe<StringRegExpFilter>;
  urls_urlDxyzf1Ukies3_s?: InputMaybe<StringRegExpFilter>;
  urls_urlE1Esoh1Keajs_s?: InputMaybe<StringRegExpFilter>;
  urls_urlEarthwisefut_s?: InputMaybe<StringRegExpFilter>;
  urls_urlEdm3Mnsg1Hns_s?: InputMaybe<StringRegExpFilter>;
  urls_urlEghlh3Znzqwr_s?: InputMaybe<StringRegExpFilter>;
  urls_urlEhgegumzynw3_s?: InputMaybe<StringRegExpFilter>;
  urls_urlEk4Lpxh2Ma4S_s?: InputMaybe<StringRegExpFilter>;
  urls_urlEnn5C2Fkbs3W_s?: InputMaybe<StringRegExpFilter>;
  urls_urlEoctlpr3Jd5I_s?: InputMaybe<StringRegExpFilter>;
  urls_urlEqi5Rxrwzjbs_s?: InputMaybe<StringRegExpFilter>;
  urls_urlEv4Hb5Obkagx_s?: InputMaybe<StringRegExpFilter>;
  urls_urlEwk4Xoaqeisc_s?: InputMaybe<StringRegExpFilter>;
  urls_urlEz2Elj1Cje1Z_s?: InputMaybe<StringRegExpFilter>;
  urls_urlFastdao_s?: InputMaybe<StringRegExpFilter>;
  urls_urlFbbu5Diqmx5P_s?: InputMaybe<StringRegExpFilter>;
  urls_urlFc2Fxwh43X1B_s?: InputMaybe<StringRegExpFilter>;
  urls_urlFczw2Xsw5Eat_s?: InputMaybe<StringRegExpFilter>;
  urls_urlFdd3Lbrpwkvj_s?: InputMaybe<StringRegExpFilter>;
  urls_urlFew2Txlhcmrg_s?: InputMaybe<StringRegExpFilter>;
  urls_urlFincasagrada_s?: InputMaybe<StringRegExpFilter>;
  urls_urlFjkqwlfpui2U_s?: InputMaybe<StringRegExpFilter>;
  urls_urlFjvqqx2Ztp2C_s?: InputMaybe<StringRegExpFilter>;
  urls_urlFkhvavzzorf1_s?: InputMaybe<StringRegExpFilter>;
  urls_urlFrontdao_s?: InputMaybe<StringRegExpFilter>;
  urls_urlFrwzlupynkxh_s?: InputMaybe<StringRegExpFilter>;
  urls_urlFzfqmy1Ahz1A_s?: InputMaybe<StringRegExpFilter>;
  urls_urlG1Apwwd2Tnva_s?: InputMaybe<StringRegExpFilter>;
  urls_urlG1Plywuz5Ogb_s?: InputMaybe<StringRegExpFilter>;
  urls_urlGa4Pytexiwkw_s?: InputMaybe<StringRegExpFilter>;
  urls_urlGaianet_s?: InputMaybe<StringRegExpFilter>;
  urls_urlGaiauniondhe_s?: InputMaybe<StringRegExpFilter>;
  urls_urlGdgcrhbar3Gn_s?: InputMaybe<StringRegExpFilter>;
  urls_urlGenesisventu_s?: InputMaybe<StringRegExpFilter>;
  urls_urlGiffj4Yhsuoq_s?: InputMaybe<StringRegExpFilter>;
  urls_urlGkcxfa51Ytmn_s?: InputMaybe<StringRegExpFilter>;
  urls_urlGpsngzpbx4Ix_s?: InputMaybe<StringRegExpFilter>;
  urls_urlGreeninitfo_s?: InputMaybe<StringRegExpFilter>;
  urls_urlGreenwood_s?: InputMaybe<StringRegExpFilter>;
  urls_urlGrwaymzqcxh4_s?: InputMaybe<StringRegExpFilter>;
  urls_urlGvyzicu3Ctj1_s?: InputMaybe<StringRegExpFilter>;
  urls_urlH1Zrlvo24Tkz_s?: InputMaybe<StringRegExpFilter>;
  urls_urlHc3Kr2Twzk1E_s?: InputMaybe<StringRegExpFilter>;
  urls_urlHibvjoibbfd2_s?: InputMaybe<StringRegExpFilter>;
  urls_urlHmntptjudozg_s?: InputMaybe<StringRegExpFilter>;
  urls_urlHolisticsyst_s?: InputMaybe<StringRegExpFilter>;
  urls_urlHqooypm5Ukct_s?: InputMaybe<StringRegExpFilter>;
  urls_urlHrgufaizyp5J_s?: InputMaybe<StringRegExpFilter>;
  urls_urlHy1B1Bwahvfo_s?: InputMaybe<StringRegExpFilter>;
  urls_urlHy4Ojcxxjynn_s?: InputMaybe<StringRegExpFilter>;
  urls_urlHypha_s?: InputMaybe<StringRegExpFilter>;
  urls_urlHyphademo_s?: InputMaybe<StringRegExpFilter>;
  urls_urlI4Wrguhpfslr_s?: InputMaybe<StringRegExpFilter>;
  urls_urlI5Nkntm5Xnav_s?: InputMaybe<StringRegExpFilter>;
  urls_urlI31Ggvxj54Je_s?: InputMaybe<StringRegExpFilter>;
  urls_urlIcinet_s?: InputMaybe<StringRegExpFilter>;
  urls_urlIdc3Uaupzw2I_s?: InputMaybe<StringRegExpFilter>;
  urls_urlIe3Thvphmxbr_s?: InputMaybe<StringRegExpFilter>;
  urls_urlIgm5Ieu43Izx_s?: InputMaybe<StringRegExpFilter>;
  urls_urlIhy4W4Zrrmr4_s?: InputMaybe<StringRegExpFilter>;
  urls_urlIkhhrizzdmkt_s?: InputMaybe<StringRegExpFilter>;
  urls_urlIm3Skdhoqrz5_s?: InputMaybe<StringRegExpFilter>;
  urls_urlImcxnrjr5Te4_s?: InputMaybe<StringRegExpFilter>;
  urls_urlIntegrity_s?: InputMaybe<StringRegExpFilter>;
  urls_urlIpbxmrsdrwsb_s?: InputMaybe<StringRegExpFilter>;
  urls_urlIunzuazm122M_s?: InputMaybe<StringRegExpFilter>;
  urls_urlJ5Hcurppvbc2_s?: InputMaybe<StringRegExpFilter>;
  urls_urlJ25Oi2B5J21Q_s?: InputMaybe<StringRegExpFilter>;
  urls_urlJdjqhjoyhnhy_s?: InputMaybe<StringRegExpFilter>;
  urls_urlJgp4Eyy4Ike4_s?: InputMaybe<StringRegExpFilter>;
  urls_urlJhfybqi5Jcdv_s?: InputMaybe<StringRegExpFilter>;
  urls_urlJii2Elpvl2Ai_s?: InputMaybe<StringRegExpFilter>;
  urls_urlJobth5Uqnhar_s?: InputMaybe<StringRegExpFilter>;
  urls_urlJoznzd5Fskk2_s?: InputMaybe<StringRegExpFilter>;
  urls_urlJupiter_s?: InputMaybe<StringRegExpFilter>;
  urls_urlJwok2Ycpzgou_s?: InputMaybe<StringRegExpFilter>;
  urls_urlJzoepolpnudo_s?: InputMaybe<StringRegExpFilter>;
  urls_urlK5Fzn5Ztdchz_s?: InputMaybe<StringRegExpFilter>;
  urls_urlK5Yhstzkcbrk_s?: InputMaybe<StringRegExpFilter>;
  urls_urlKd2U1Nqd5Zpm_s?: InputMaybe<StringRegExpFilter>;
  urls_urlKedxcfee4Pbk_s?: InputMaybe<StringRegExpFilter>;
  urls_urlKefskfhz3Hkt_s?: InputMaybe<StringRegExpFilter>;
  urls_urlKiajiljlp4Fz_s?: InputMaybe<StringRegExpFilter>;
  urls_urlKitchen_s?: InputMaybe<StringRegExpFilter>;
  urls_urlKsjjde4Hbn2U_s?: InputMaybe<StringRegExpFilter>;
  urls_urlKuladao_s?: InputMaybe<StringRegExpFilter>;
  urls_urlKv2Eibsrpcaf_s?: InputMaybe<StringRegExpFilter>;
  urls_urlKvqzvpqle2Oi_s?: InputMaybe<StringRegExpFilter>;
  urls_urlL4Hlmodr2Ux2_s?: InputMaybe<StringRegExpFilter>;
  urls_urlL54Gm5Hzawwg_s?: InputMaybe<StringRegExpFilter>;
  urls_urlLalagardens_s?: InputMaybe<StringRegExpFilter>;
  urls_urlLgzydegefd2O_s?: InputMaybe<StringRegExpFilter>;
  urls_urlLightleaders_s?: InputMaybe<StringRegExpFilter>;
  urls_urlLiminalvill_s?: InputMaybe<StringRegExpFilter>;
  urls_urlLkhwazi4Ggp3_s?: InputMaybe<StringRegExpFilter>;
  urls_urlLn3Vzjj252Hd_s?: InputMaybe<StringRegExpFilter>;
  urls_urlLndfupfa2H5D_s?: InputMaybe<StringRegExpFilter>;
  urls_urlLnfd5Gnly5Ui_s?: InputMaybe<StringRegExpFilter>;
  urls_urlLnxbx3Pixmbf_s?: InputMaybe<StringRegExpFilter>;
  urls_urlM4Hk2S2Vxs1F_s?: InputMaybe<StringRegExpFilter>;
  urls_urlM53Fbwxxgnrh_s?: InputMaybe<StringRegExpFilter>;
  urls_urlMbaajxm41Hfa_s?: InputMaybe<StringRegExpFilter>;
  urls_urlMeczomzsoiuz_s?: InputMaybe<StringRegExpFilter>;
  urls_urlMf33Nwhrc2Pi_s?: InputMaybe<StringRegExpFilter>;
  urls_urlMfdx2Sjxjbpf_s?: InputMaybe<StringRegExpFilter>;
  urls_urlMjsie3Zvqqrm_s?: InputMaybe<StringRegExpFilter>;
  urls_urlMksii3R3Ifuz_s?: InputMaybe<StringRegExpFilter>;
  urls_urlMomdho_s?: InputMaybe<StringRegExpFilter>;
  urls_urlMoq3Io4Gwguv_s?: InputMaybe<StringRegExpFilter>;
  urls_urlMotlops3Fmcy_s?: InputMaybe<StringRegExpFilter>;
  urls_urlMq32Dxpku1Yw_s?: InputMaybe<StringRegExpFilter>;
  urls_urlMwm5Qizc3Gmi_s?: InputMaybe<StringRegExpFilter>;
  urls_urlN1M4Hyjb3Prq_s?: InputMaybe<StringRegExpFilter>;
  urls_urlN2Qb4Oq5Ceme_s?: InputMaybe<StringRegExpFilter>;
  urls_urlN11Wig1Pds3W_s?: InputMaybe<StringRegExpFilter>;
  urls_urlN32Wvxvkqbkb_s?: InputMaybe<StringRegExpFilter>;
  urls_urlNa1Sonzbvtk5_s?: InputMaybe<StringRegExpFilter>;
  urls_urlNcv3H5Dm45Qg_s?: InputMaybe<StringRegExpFilter>;
  urls_urlNduy5Bttdrqq_s?: InputMaybe<StringRegExpFilter>;
  urls_urlNestr_s?: InputMaybe<StringRegExpFilter>;
  urls_urlNewsouthafr_s?: InputMaybe<StringRegExpFilter>;
  urls_urlNextgenvill_s?: InputMaybe<StringRegExpFilter>;
  urls_urlNivtbyuhk3Rd_s?: InputMaybe<StringRegExpFilter>;
  urls_urlNkchcudxo425_s?: InputMaybe<StringRegExpFilter>;
  urls_urlNonnhrtoku1Z_s?: InputMaybe<StringRegExpFilter>;
  urls_urlNoqcp5Afx5E5_s?: InputMaybe<StringRegExpFilter>;
  urls_urlO3Tzzbjaraj3_s?: InputMaybe<StringRegExpFilter>;
  urls_urlOctuxbu5Kdpl_s?: InputMaybe<StringRegExpFilter>;
  urls_urlOkkhmgkejuup_s?: InputMaybe<StringRegExpFilter>;
  urls_urlOpdv42Sk3Yun_s?: InputMaybe<StringRegExpFilter>;
  urls_urlOqeavbgf5H2H_s?: InputMaybe<StringRegExpFilter>;
  urls_urlOqmt53D3Nijf_s?: InputMaybe<StringRegExpFilter>;
  urls_urlOriginwisdom_s?: InputMaybe<StringRegExpFilter>;
  urls_urlOsthmvtcvqk2_s?: InputMaybe<StringRegExpFilter>;
  urls_urlOsylrx3Zyo3I_s?: InputMaybe<StringRegExpFilter>;
  urls_urlOvfykbv5N252_s?: InputMaybe<StringRegExpFilter>;
  urls_urlOzxvgkytgfm5_s?: InputMaybe<StringRegExpFilter>;
  urls_urlP3Xqs1Vy53J4_s?: InputMaybe<StringRegExpFilter>;
  urls_urlPachamamaris_s?: InputMaybe<StringRegExpFilter>;
  urls_urlPcwoiacrdzml_s?: InputMaybe<StringRegExpFilter>;
  urls_urlPgkuvuyd5Tkf_s?: InputMaybe<StringRegExpFilter>;
  urls_urlPkpcaltfb2An_s?: InputMaybe<StringRegExpFilter>;
  urls_urlPlanetcare_s?: InputMaybe<StringRegExpFilter>;
  urls_urlPtogan1Cqjp2_s?: InputMaybe<StringRegExpFilter>;
  urls_urlPuwpla2N5Z4A_s?: InputMaybe<StringRegExpFilter>;
  urls_urlPy5X2Caqgvwr_s?: InputMaybe<StringRegExpFilter>;
  urls_urlPyzxw1Bos3Es_s?: InputMaybe<StringRegExpFilter>;
  urls_urlQ4Hexzhmslt3_s?: InputMaybe<StringRegExpFilter>;
  urls_urlQbcbgv4Gpczw_s?: InputMaybe<StringRegExpFilter>;
  urls_urlQhftw3Yknfus_s?: InputMaybe<StringRegExpFilter>;
  urls_urlQmakgqzdtki4_s?: InputMaybe<StringRegExpFilter>;
  urls_urlQonpkk3Lyivx_s?: InputMaybe<StringRegExpFilter>;
  urls_urlQqwe2Utvgisr_s?: InputMaybe<StringRegExpFilter>;
  urls_urlQr2Prxbizjbv_s?: InputMaybe<StringRegExpFilter>;
  urls_urlQr5Jcgndgadi_s?: InputMaybe<StringRegExpFilter>;
  urls_urlQs23P4Homwaf_s?: InputMaybe<StringRegExpFilter>;
  urls_urlQsabrv1Zpcyu_s?: InputMaybe<StringRegExpFilter>;
  urls_urlR2Ttskh142Kv_s?: InputMaybe<StringRegExpFilter>;
  urls_urlR3Dtwhyei41K_s?: InputMaybe<StringRegExpFilter>;
  urls_urlR24Dca2Vwnnm_s?: InputMaybe<StringRegExpFilter>;
  urls_urlR31Xdmdluztn_s?: InputMaybe<StringRegExpFilter>;
  urls_urlRegencivics_s?: InputMaybe<StringRegExpFilter>;
  urls_urlRegeneratex_s?: InputMaybe<StringRegExpFilter>;
  urls_urlRegenliving_s?: InputMaybe<StringRegExpFilter>;
  urls_urlRipplesdao_s?: InputMaybe<StringRegExpFilter>;
  urls_urlRiver_s?: InputMaybe<StringRegExpFilter>;
  urls_urlRjjzxayy4C5I_s?: InputMaybe<StringRegExpFilter>;
  urls_urlRjlaa4Xyt2Fe_s?: InputMaybe<StringRegExpFilter>;
  urls_urlRjnr5Ufv3Hiz_s?: InputMaybe<StringRegExpFilter>;
  urls_urlRlbajxwjl1Ue_s?: InputMaybe<StringRegExpFilter>;
  urls_urlRrt1Iycndxxf_s?: InputMaybe<StringRegExpFilter>;
  urls_urlRtq42Lbetbxl_s?: InputMaybe<StringRegExpFilter>;
  urls_urlRtrmcn3Avkf1_s?: InputMaybe<StringRegExpFilter>;
  urls_urlRtudvevl2Cjt_s?: InputMaybe<StringRegExpFilter>;
  urls_urlRysnpti3Bdvg_s?: InputMaybe<StringRegExpFilter>;
  urls_urlS2Zwpt2Rqxhy_s?: InputMaybe<StringRegExpFilter>;
  urls_urlSaltcrossgar_s?: InputMaybe<StringRegExpFilter>;
  urls_urlSamaratrust_s?: InputMaybe<StringRegExpFilter>;
  urls_urlSctawkeupscc_s?: InputMaybe<StringRegExpFilter>;
  urls_urlSeedscommons_s?: InputMaybe<StringRegExpFilter>;
  urls_urlShepherddao_s?: InputMaybe<StringRegExpFilter>;
  urls_urlShkwh1Iynyh4_s?: InputMaybe<StringRegExpFilter>;
  urls_urlSi2Jvmzemt31_s?: InputMaybe<StringRegExpFilter>;
  urls_urlSilxhs5C5Nar_s?: InputMaybe<StringRegExpFilter>;
  urls_urlSk1Ojvjucrfq_s?: InputMaybe<StringRegExpFilter>;
  urls_urlSmwgavmt5Ryt_s?: InputMaybe<StringRegExpFilter>;
  urls_urlSoil1Orwrmps_s?: InputMaybe<StringRegExpFilter>;
  urls_urlSotzumhlphtx_s?: InputMaybe<StringRegExpFilter>;
  urls_urlSrmiubqdc4Rk_s?: InputMaybe<StringRegExpFilter>;
  urls_urlSs53Hoim4Gt3_s?: InputMaybe<StringRegExpFilter>;
  urls_urlSxjul33Jf1Bv_s?: InputMaybe<StringRegExpFilter>;
  urls_urlT2Oqxmtjpk3X_s?: InputMaybe<StringRegExpFilter>;
  urls_urlT4Ygmfu4Owip_s?: InputMaybe<StringRegExpFilter>;
  urls_urlTc3Uweyd2A2C_s?: InputMaybe<StringRegExpFilter>;
  urls_urlTcpswkf2Yfsf_s?: InputMaybe<StringRegExpFilter>;
  urls_urlTcwrv1Aqtzxe_s?: InputMaybe<StringRegExpFilter>;
  urls_urlTestdao_s?: InputMaybe<StringRegExpFilter>;
  urls_urlTestnewdaocac_s?: InputMaybe<StringRegExpFilter>;
  urls_urlThebestxdap_s?: InputMaybe<StringRegExpFilter>;
  urls_urlThedokcyip3O_s?: InputMaybe<StringRegExpFilter>;
  urls_urlTheflow_s?: InputMaybe<StringRegExpFilter>;
  urls_urlThftmv3D42Kb_s?: InputMaybe<StringRegExpFilter>;
  urls_urlThinkplace_s?: InputMaybe<StringRegExpFilter>;
  urls_urlTighnzy4Pgu3_s?: InputMaybe<StringRegExpFilter>;
  urls_urlTqmby2Eadaiu_s?: InputMaybe<StringRegExpFilter>;
  urls_urlTqsre5Whjjby_s?: InputMaybe<StringRegExpFilter>;
  urls_urlTrshury4Soli_s?: InputMaybe<StringRegExpFilter>;
  urls_urlTss3Wqdjlalp_s?: InputMaybe<StringRegExpFilter>;
  urls_urlU2T3Kwgdmrbe_s?: InputMaybe<StringRegExpFilter>;
  urls_urlU4Yfk1S4Cv3H_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUbuntu_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUgcwrgniuwis_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUij3Uygyzyow_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUlpyjkthcu2C_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUmac2Lsxcc14_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUnitedplanet_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUniversalis_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUniverseland_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUnkailabs_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUpvotetest1_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUtanck3Sxaze_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUtyeq4Dqk3Iu_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUwkshkgwuksx_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUwmng5Zgcoa2_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUwztsw1L3Na5_s?: InputMaybe<StringRegExpFilter>;
  urls_urlUzihb11Q5Ppi_s?: InputMaybe<StringRegExpFilter>;
  urls_urlV2U42Hujkzzk_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVf3Rsnpdqx1F_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVflqjbatmmf1_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVg1Lob4Oakdz_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVgryuxp1Cyt4_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVh1Imaheqeqy_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVk2P3R3Zpbqu_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVnyenpufyes2_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVo3N43V4Khhi_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVokaoj1T5Qsr_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVovv2Tengevl_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVqloh1Dpeclv_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVqsgv5Mheq1Z_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVse4A2Ttg3On_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVsmoku34Pbnj_s?: InputMaybe<StringRegExpFilter>;
  urls_urlVx35Wgozl15S_s?: InputMaybe<StringRegExpFilter>;
  urls_urlWbh1V54Uekjy_s?: InputMaybe<StringRegExpFilter>;
  urls_urlWbo53Ayfygbh_s?: InputMaybe<StringRegExpFilter>;
  urls_urlWdxuocdyahaf_s?: InputMaybe<StringRegExpFilter>;
  urls_urlWekqmvasjcqb_s?: InputMaybe<StringRegExpFilter>;
  urls_urlWeudzvh3Hd2Q_s?: InputMaybe<StringRegExpFilter>;
  urls_urlWf2Irhvtu5H5_s?: InputMaybe<StringRegExpFilter>;
  urls_urlWfzlx3551Pgg_s?: InputMaybe<StringRegExpFilter>;
  urls_urlWgvxprpxfngo_s?: InputMaybe<StringRegExpFilter>;
  urls_urlWhnelpre1Xnz_s?: InputMaybe<StringRegExpFilter>;
  urls_urlWildtrips_s?: InputMaybe<StringRegExpFilter>;
  urls_urlWrongdao_s?: InputMaybe<StringRegExpFilter>;
  urls_urlWtr21Owdodww_s?: InputMaybe<StringRegExpFilter>;
  urls_urlWuip5Bx23244_s?: InputMaybe<StringRegExpFilter>;
  urls_urlWuknmlynj5Qb_s?: InputMaybe<StringRegExpFilter>;
  urls_urlWuzjmdodtrfn_s?: InputMaybe<StringRegExpFilter>;
  urls_urlX5Gpg2Kk14Rp_s?: InputMaybe<StringRegExpFilter>;
  urls_urlXc1Mpm4R1V3Q_s?: InputMaybe<StringRegExpFilter>;
  urls_urlXecj4Cukr1Pr_s?: InputMaybe<StringRegExpFilter>;
  urls_urlXfvd2Pyvelym_s?: InputMaybe<StringRegExpFilter>;
  urls_urlXmiereyl52Um_s?: InputMaybe<StringRegExpFilter>;
  urls_urlXpznyeq1Ujcw_s?: InputMaybe<StringRegExpFilter>;
  urls_urlXrfuttwmsapm_s?: InputMaybe<StringRegExpFilter>;
  urls_urlXx4Pyzevrrz3_s?: InputMaybe<StringRegExpFilter>;
  urls_urlYimw2Jwzpfqx_s?: InputMaybe<StringRegExpFilter>;
  urls_urlYjtij3Oxqizo_s?: InputMaybe<StringRegExpFilter>;
  urls_urlYk24Za5Bqjeu_s?: InputMaybe<StringRegExpFilter>;
  urls_urlYlxmkxtb4M4J_s?: InputMaybe<StringRegExpFilter>;
  urls_urlYoglgtvd2Ttf_s?: InputMaybe<StringRegExpFilter>;
  urls_urlYp13Kd3Fzhvm_s?: InputMaybe<StringRegExpFilter>;
  urls_urlYtibux4Pydni_s?: InputMaybe<StringRegExpFilter>;
  urls_urlYtowqoe4Jjg2_s?: InputMaybe<StringRegExpFilter>;
  urls_urlYveif24Swpxo_s?: InputMaybe<StringRegExpFilter>;
  urls_urlYxypcwoh1Pmn_s?: InputMaybe<StringRegExpFilter>;
  urls_urlZgbrnuisnb3H_s?: InputMaybe<StringRegExpFilter>;
  urls_urlZgepdsxircad_s?: InputMaybe<StringRegExpFilter>;
  urls_urlZhuu21Czfaer_s?: InputMaybe<StringRegExpFilter>;
  urls_urlZl5Fqkhoztam_s?: InputMaybe<StringRegExpFilter>;
  urls_urlZu5Xtqjzo2Sq_s?: InputMaybe<StringRegExpFilter>;
  urls_urlZvstjcdyjcgy_s?: InputMaybe<StringRegExpFilter>;
  urls_urlZzcjstecud2T_s?: InputMaybe<StringRegExpFilter>;
  urls_url_s?: InputMaybe<StringRegExpFilter>;
};

export enum SettingsHasFilter {
  AdminsAccountN = 'admins_account_n',
  AdminsUpdatedDateT = 'admins_updatedDate_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  EcosystemDomainS = 'ecosystem_domain_s',
  EcosystemLogoS = 'ecosystem_logo_s',
  EcosystemNameS = 'ecosystem_name_s',
  EcosystemPurposeS = 'ecosystem_purpose_s',
  OnboardersAccountN = 'onboarders_account_n',
  OnboardersUpdatedDateT = 'onboarders_updatedDate_t',
  OtherSettingsLogoS = 'otherSettings_logo_s',
  SettingsAccountI = 'settings_account_i',
  SettingsAddAdminsEnabledI = 'settings_addAdminsEnabled_i',
  SettingsClaimEnabledI = 'settings_claimEnabled_i',
  SettingsCommentsContractN = 'settings_commentsContract_n',
  SettingsCommentsContractS = 'settings_commentsContract_s',
  SettingsCommunityVotingAlignmentPercentI = 'settings_communityVotingAlignmentPercent_i',
  SettingsCommunityVotingDurationSecI = 'settings_communityVotingDurationSec_i',
  SettingsCommunityVotingEnabledI = 'settings_communityVotingEnabled_i',
  SettingsCommunityVotingMethodS = 'settings_communityVotingMethod_s',
  SettingsCommunityVotingQuorumPercentI = 'settings_communityVotingQuorumPercent_i',
  SettingsCommunityotingQuorumPercentI = 'settings_communityotingQuorumPercent_i',
  SettingsCommunityotingQuorumPercentS = 'settings_communityotingQuorumPercent_s',
  SettingsContractVersionS = 'settings_contractVersion_s',
  SettingsContractsVersionS = 'settings_contractsVersion_s',
  SettingsDaoDescriptionS = 'settings_daoDescription_s',
  SettingsDaoNameN = 'settings_daoName_n',
  SettingsDaoSuperS = 'settings_daoSuper_s',
  SettingsDaoTitleS = 'settings_daoTitle_s',
  SettingsDaoUrlS = 'settings_daoUrl_s',
  SettingsDashboardBackgroundImageS = 'settings_dashboardBackgroundImage_s',
  SettingsDashboardOverlayColorS = 'settings_dashboardOverlayColor_s',
  SettingsDashboardOverlayOpacityS = 'settings_dashboardOverlayOpacity_s',
  SettingsDashboardParagraphS = 'settings_dashboardParagraph_s',
  SettingsDashboardPatternColorS = 'settings_dashboardPatternColor_s',
  SettingsDashboardPatternOpacityS = 'settings_dashboardPatternOpacity_s',
  SettingsDashboardTitleS = 'settings_dashboardTitle_s',
  SettingsDiscordUrlS = 'settings_discordURL_s',
  SettingsDocumentationButtonTextS = 'settings_documentationButtonText_s',
  SettingsDocumentationUrlS = 'settings_documentationURL_s',
  SettingsEcosystemChildPriceStakedA = 'settings_ecosystemChildPriceStaked_a',
  SettingsEcosystemChildPriceA = 'settings_ecosystemChildPrice_a',
  SettingsEcosystemPriceStakedA = 'settings_ecosystemPriceStaked_a',
  SettingsEcosystemPriceA = 'settings_ecosystemPrice_a',
  SettingsExploreBackgroundImageS = 'settings_exploreBackgroundImage_s',
  SettingsExploreParagraphS = 'settings_exploreParagraph_s',
  SettingsExploreTitleS = 'settings_exploreTitle_s',
  SettingsExtendedLogoS = 'settings_extendedLogo_s',
  SettingsGovernanceTokenContractN = 'settings_governanceTokenContract_n',
  SettingsHeaderPatternS = 'settings_headerPattern_s',
  SettingsHomepageHeaderS = 'settings_homepageHeader_s',
  SettingsHomepageSubtitleS = 'settings_homepageSubtitle_s',
  SettingsHusdTokenContractN = 'settings_husdTokenContract_n',
  SettingsHvoiceTokenContractN = 'settings_hvoiceTokenContract_n',
  SettingsHyphaCosaleContractN = 'settings_hyphaCosaleContract_n',
  SettingsHyphaDeferralFactorX100I = 'settings_hyphaDeferralFactorX100_i',
  SettingsHyphaTokenContractN = 'settings_hyphaTokenContract_n',
  SettingsHyphaUsdValueA = 'settings_hyphaUsdValue_a',
  SettingsIsHyphaI = 'settings_isHypha_i',
  SettingsLogoS = 'settings_logo_s',
  SettingsMembersApplicationEnabledI = 'settings_membersApplicationEnabled_i',
  SettingsMembersBackgroundImageS = 'settings_membersBackgroundImage_s',
  SettingsMembersHeaderS = 'settings_membersHeader_s',
  SettingsMembersOverlayColorS = 'settings_membersOverlayColor_s',
  SettingsMembersOverlayOpacityS = 'settings_membersOverlayOpacity_s',
  SettingsMembersParagraphS = 'settings_membersParagraph_s',
  SettingsMembersPatternColorS = 'settings_membersPatternColor_s',
  SettingsMembersPatternOpacityS = 'settings_membersPatternOpacity_s',
  SettingsMembersSubtitleS = 'settings_membersSubtitle_s',
  SettingsMembersTitleS = 'settings_membersTitle_s',
  SettingsMsigApprovalAmountI = 'settings_msigApprovalAmount_i',
  SettingsMultisigEnabledI = 'settings_multisigEnabled_i',
  SettingsMyOtherOtherSettingI = 'settings_myOtherOtherSetting_i',
  SettingsMyOtherSettingI = 'settings_myOtherSetting_i',
  SettingsMySettingI = 'settings_mySetting_i',
  SettingsNameS = 'settings_name_s',
  SettingsNativeTokenA = 'settings_nativeToken_a',
  SettingsNextCommentSectionN = 'settings_nextCommentSection_n',
  SettingsNextProposalNameIntI = 'settings_nextProposalNameInt_i',
  SettingsNextScheduleIdI = 'settings_nextScheduleId_i',
  SettingsNextScheduledIdI = 'settings_nextScheduledId_i',
  SettingsOnboarderAccountN = 'settings_onboarderAccount_n',
  SettingsOrganisationBackgroundImageS = 'settings_organisationBackgroundImage_s',
  SettingsOrganisationOverlayColorS = 'settings_organisationOverlayColor_s',
  SettingsOrganisationOverlayOpacityS = 'settings_organisationOverlayOpacity_s',
  SettingsOrganisationParagraphS = 'settings_organisationParagraph_s',
  SettingsOrganisationPatternColorS = 'settings_organisationPatternColor_s',
  SettingsOrganisationPatternOpacityS = 'settings_organisationPatternOpacity_s',
  SettingsOrganisationTitleS = 'settings_organisationTitle_s',
  SettingsOrganizationHeaderS = 'settings_organizationHeader_s',
  SettingsOrganizationSubtitleS = 'settings_organizationSubtitle_s',
  SettingsPatternBase64S = 'settings_patternBase64_s',
  SettingsPatternColorS = 'settings_patternColor_s',
  SettingsPatternOpacityI = 'settings_patternOpacity_i',
  SettingsPatternOpacityS = 'settings_patternOpacity_s',
  SettingsPatternS = 'settings_pattern_s',
  SettingsPausedI = 'settings_paused_i',
  SettingsPegTokenContractN = 'settings_pegTokenContract_n',
  SettingsPegTokenNameS = 'settings_pegTokenName_s',
  SettingsPegTokenA = 'settings_pegToken_a',
  SettingsPeriodDurationSecI = 'settings_periodDurationSec_i',
  SettingsPeriodDurationSecS = 'settings_periodDurationSec_s',
  SettingsPrimaryColorS = 'settings_primaryColor_s',
  SettingsProposalsBackgroundImageS = 'settings_proposalsBackgroundImage_s',
  SettingsProposalsCreationEnabledI = 'settings_proposalsCreationEnabled_i',
  SettingsProposalsHeaderS = 'settings_proposalsHeader_s',
  SettingsProposalsOverlayColorS = 'settings_proposalsOverlayColor_s',
  SettingsProposalsOverlayOpacityS = 'settings_proposalsOverlayOpacity_s',
  SettingsProposalsParagraphS = 'settings_proposalsParagraph_s',
  SettingsProposalsPatternColorS = 'settings_proposalsPatternColor_s',
  SettingsProposalsPatternOpacityS = 'settings_proposalsPatternOpacity_s',
  SettingsProposalsSubtitleS = 'settings_proposalsSubtitle_s',
  SettingsProposalsTitleS = 'settings_proposalsTitle_s',
  SettingsPublisherContractN = 'settings_publisherContract_n',
  SettingsRedemptionsEnabledI = 'settings_redemptionsEnabled_i',
  SettingsRemovableBannersEnabledI = 'settings_removableBannersEnabled_i',
  SettingsRewardToPegRatioA = 'settings_rewardToPegRatio_a',
  SettingsRewardTokenContractN = 'settings_rewardTokenContract_n',
  SettingsRewardTokenMaxSupplyA = 'settings_rewardTokenMaxSupply_a',
  SettingsRewardTokenNameS = 'settings_rewardTokenName_s',
  SettingsRewardTokenA = 'settings_rewardToken_a',
  SettingsRootNodeS = 'settings_rootNode_s',
  SettingsSaleHyphaUsdValueA = 'settings_saleHyphaUsdValue_a',
  SettingsSecondaryColorS = 'settings_secondaryColor_s',
  SettingsSeedsDeferralFactorX100I = 'settings_seedsDeferralFactorX100_i',
  SettingsSeedsEscrowContractN = 'settings_seedsEscrowContract_n',
  SettingsSeedsTokenContractN = 'settings_seedsTokenContract_n',
  SettingsSettingsPatternBase64SS = 'settings_settingsPatternBase64S_s',
  SettingsSettingsVotingAlignmentX100II = 'settings_settingsVotingAlignmentX100I_i',
  SettingsSettingsVotingQuorumX100II = 'settings_settingsVotingQuorumX100I_i',
  SettingsSocialChatS = 'settings_socialChat_s',
  SettingsSplashBackgroundImageS = 'settings_splashBackgroundImage_s',
  SettingsSplashOverlayColorS = 'settings_splashOverlayColor_s',
  SettingsSplashOverlayOpacityS = 'settings_splashOverlayOpacity_s',
  SettingsSplashPatternColorS = 'settings_splashPatternColor_s',
  SettingsSplashPatternOpacityS = 'settings_splashPatternOpacity_s',
  SettingsTestSetI = 'settings_testSet_i',
  SettingsTestSettingA = 'settings_testSetting_a',
  SettingsTestSettingS = 'settings_testSetting_s',
  SettingsTextColorS = 'settings_textColor_s',
  SettingsThresholdI = 'settings_threshold_i',
  SettingsTitleS = 'settings_title_s',
  SettingsTreasuryAccountN = 'settings_treasuryAccount_n',
  SettingsTreasuryContractN = 'settings_treasuryContract_n',
  SettingsTreasuryTokenMultiplierI = 'settings_treasuryTokenMultiplier_i',
  SettingsUpdatedDateT = 'settings_updatedDate_t',
  SettingsUpvoteCheifDelegateCountI = 'settings_upvoteCheifDelegateCount_i',
  SettingsUpvoteCheifDelegateDurationI = 'settings_upvoteCheifDelegateDuration_i',
  SettingsUpvoteChiefDelegateCountI = 'settings_upvoteChiefDelegateCount_i',
  SettingsUpvoteDurationI = 'settings_upvoteDuration_i',
  SettingsUpvoteHeadDelegateDurationI = 'settings_upvoteHeadDelegateDuration_i',
  SettingsUpvoteHeadDelegateRoundI = 'settings_upvoteHeadDelegateRound_i',
  SettingsUpvoteRoundsS = 'settings_upvoteRounds_s',
  SettingsUpvoteStartDateTimeS = 'settings_upvoteStartDateTime_s',
  SettingsUpvoteStartDateS = 'settings_upvoteStartDate_s',
  SettingsUpvoteStartTimeS = 'settings_upvoteStartTime_s',
  SettingsUrlS = 'settings_url_s',
  SettingsUsesSeedsI = 'settings_usesSeeds_i',
  SettingsUtilityTokenMultiplierI = 'settings_utilityTokenMultiplier_i',
  SettingsVOtingdurationsecI = 'settings_vOTINGDURATIONSEC_i',
  SettingsVoiceTokenDecayPerPeriodX10MI = 'settings_voiceTokenDecayPerPeriodX10M_i',
  SettingsVoiceTokenDecayPeriodI = 'settings_voiceTokenDecayPeriod_i',
  SettingsVoiceTokenDecayPeriodS = 'settings_voiceTokenDecayPeriod_s',
  SettingsVoiceTokenMultiplierI = 'settings_voiceTokenMultiplier_i',
  SettingsVoiceTokenA = 'settings_voiceToken_a',
  SettingsVotingAlignmentPercentX100I = 'settings_votingAlignmentPercentX100_i',
  SettingsVotingAlignmentPercentI = 'settings_votingAlignmentPercent_i',
  SettingsVotingAlignmentPercentS = 'settings_votingAlignmentPercent_s',
  SettingsVotingAlignmentX100I = 'settings_votingAlignmentX100_i',
  SettingsVotingAlignmentX100S = 'settings_votingAlignmentX100_s',
  SettingsVotingDurationSecI = 'settings_votingDurationSec_i',
  SettingsVotingDurationSecS = 'settings_votingDurationSec_s',
  SettingsVotingDurationSecondsI = 'settings_votingDurationSeconds_i',
  SettingsVotingMethodS = 'settings_votingMethod_s',
  SettingsVotingQuorumPercentX100I = 'settings_votingQuorumPercentX100_i',
  SettingsVotingQuorumPercentI = 'settings_votingQuorumPercent_i',
  SettingsVotingQuorumPercentS = 'settings_votingQuorumPercent_s',
  SettingsVotingQuorumX100I = 'settings_votingQuorumX100_i',
  SettingsVotingQuorumX100S = 'settings_votingQuorumX100_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  TestsTestingsettingsI = 'tests_testingsettings_i',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  UrlsUrl1Bk1Yxby2TieS = 'urls_url1Bk1Yxby2Tie_s',
  UrlsUrl1Fmizk1Zuyi2S = 'urls_url1Fmizk1Zuyi2_s',
  UrlsUrl1FvbfectvsxcS = 'urls_url1Fvbfectvsxc_s',
  UrlsUrl1Mmp4PfmrerrS = 'urls_url1Mmp4Pfmrerr_s',
  UrlsUrl1N5Kz3GemsegS = 'urls_url1N5Kz3Gemseg_s',
  UrlsUrl1Ovembm4JczoS = 'urls_url1Ovembm4Jczo_s',
  UrlsUrl1QfetejflaflS = 'urls_url1Qfetejflafl_s',
  UrlsUrl2Q3Pz2Hn43GqS = 'urls_url2Q3Pz2Hn43Gq_s',
  UrlsUrl2T3AybfvqorwS = 'urls_url2T3Aybfvqorw_s',
  UrlsUrl2T4Fdni1StybS = 'urls_url2T4Fdni1Styb_s',
  UrlsUrl2Xegtmj2JdsfS = 'urls_url2Xegtmj2Jdsf_s',
  UrlsUrl2Yfg3Nvby1ZlS = 'urls_url2Yfg3Nvby1Zl_s',
  UrlsUrl3Cen4Uzdy2EsS = 'urls_url3Cen4Uzdy2Es_s',
  UrlsUrl3G2Adxfbf4YtS = 'urls_url3G2Adxfbf4Yt_s',
  UrlsUrl3Lk4NzggpubiS = 'urls_url3Lk4Nzggpubi_s',
  UrlsUrl3O3W1GgvkkaxS = 'urls_url3O3W1Ggvkkax_s',
  UrlsUrl3QgrntosyxizS = 'urls_url3Qgrntosyxiz_s',
  UrlsUrl3Vf2X13LcepdS = 'urls_url3Vf2X13Lcepd_s',
  UrlsUrl4D2V4Xmgbir2S = 'urls_url4D2V4Xmgbir2_s',
  UrlsUrl4Ehml2Vqzp5CS = 'urls_url4Ehml2Vqzp5C_s',
  UrlsUrl4Ezfoukyd4K2S = 'urls_url4Ezfoukyd4K2_s',
  UrlsUrl4Fewyw1QtrekS = 'urls_url4Fewyw1Qtrek_s',
  UrlsUrl4Jaepm23Od5WS = 'urls_url4Jaepm23Od5W_s',
  UrlsUrl4K4GcongezpvS = 'urls_url4K4Gcongezpv_s',
  UrlsUrl4QkkymwtssjjS = 'urls_url4Qkkymwtssjj_s',
  UrlsUrl4U5F1Ppy4XanS = 'urls_url4U5F1Ppy4Xan_s',
  UrlsUrl4Urhwj1Paeo5S = 'urls_url4Urhwj1Paeo5_s',
  UrlsUrl4UvjpanvhvtlS = 'urls_url4Uvjpanvhvtl_s',
  UrlsUrl5Kkb3TpwjihoS = 'urls_url5Kkb3Tpwjiho_s',
  UrlsUrl5Lsfqinc2ZybS = 'urls_url5Lsfqinc2Zyb_s',
  UrlsUrl5QakaspwwetvS = 'urls_url5Qakaspwwetv_s',
  UrlsUrl5Vn4YbbadgjjS = 'urls_url5Vn4Ybbadgjj_s',
  UrlsUrl5Z4QztkwnbkkS = 'urls_url5Z4Qztkwnbkk_s',
  UrlsUrl15Mgh14VkqkeS = 'urls_url15Mgh14Vkqke_s',
  UrlsUrl22Vnqfsm3Q3SS = 'urls_url22Vnqfsm3Q3S_s',
  UrlsUrl25Dkrzm3Pr5RS = 'urls_url25Dkrzm3Pr5R_s',
  UrlsUrl32Xgw4LmfaxhS = 'urls_url32Xgw4Lmfaxh_s',
  UrlsUrl34Vxjg3NpjihS = 'urls_url34Vxjg3Npjih_s',
  UrlsUrl35U3JkcydkurS = 'urls_url35U3Jkcydkur_s',
  UrlsUrl54Eb13KaahtjS = 'urls_url54Eb13Kaahtj_s',
  UrlsUrl55Lqnw53A3V3S = 'urls_url55Lqnw53A3V3_s',
  UrlsUrlA4Tm1Gd5Nb52S = 'urls_urlA4Tm1Gd5Nb52_s',
  UrlsUrlAbh12DbbhrttS = 'urls_urlAbh12Dbbhrtt_s',
  UrlsUrlAdhsdaccieeyS = 'urls_urlAdhsdaccieey_s',
  UrlsUrlAikwmmc5Uf2XS = 'urls_urlAikwmmc5Uf2X_s',
  UrlsUrlAjxblzgtavwlS = 'urls_urlAjxblzgtavwl_s',
  UrlsUrlAn4MagusqjefS = 'urls_urlAn4Magusqjef_s',
  UrlsUrlAo4Cz1Fwtq4VS = 'urls_urlAo4Cz1Fwtq4V_s',
  UrlsUrlAzpexlyerb3NS = 'urls_urlAzpexlyerb3N_s',
  UrlsUrlB1QzplmrrhizS = 'urls_urlB1Qzplmrrhiz_s',
  UrlsUrlB1Z2ZnjsedtrS = 'urls_urlB1Z2Znjsedtr_s',
  UrlsUrlB14MblffsutjS = 'urls_urlB14Mblffsutj_s',
  UrlsUrlBamamapsS = 'urls_urlBamamaps_s',
  UrlsUrlBblegacyS = 'urls_urlBblegacy_s',
  UrlsUrlBbxp5SxonbiaS = 'urls_urlBbxp5Sxonbia_s',
  UrlsUrlBcrdm2XqkdmbS = 'urls_urlBcrdm2Xqkdmb_s',
  UrlsUrlBethenewdaoS = 'urls_urlBethenewdao_s',
  UrlsUrlBjsmt2EsdzibS = 'urls_urlBjsmt2Esdzib_s',
  UrlsUrlBmhh3Zcw5XmrS = 'urls_urlBmhh3Zcw5Xmr_s',
  UrlsUrlBmvy1F4JyxpkS = 'urls_urlBmvy1F4Jyxpk_s',
  UrlsUrlBoevvh44PrqaS = 'urls_urlBoevvh44Prqa_s',
  UrlsUrlBsdkpibjyzkgS = 'urls_urlBsdkpibjyzkg_s',
  UrlsUrlBtchangedS = 'urls_urlBtchanged_s',
  UrlsUrlBtchangedhoS = 'urls_urlBtchangedho_s',
  UrlsUrlBtchangednoS = 'urls_urlBtchangedno_s',
  UrlsUrlBwnmqskbvs5CS = 'urls_urlBwnmqskbvs5C_s',
  UrlsUrlBwr1Upma2YjfS = 'urls_urlBwr1Upma2Yjf_s',
  UrlsUrlC3Jxagqsq4C3S = 'urls_urlC3Jxagqsq4C3_s',
  UrlsUrlCatalyst23S = 'urls_urlCatalyst23_s',
  UrlsUrlCdviq1LtflhfS = 'urls_urlCdviq1Ltflhf_s',
  UrlsUrlCgpvbclbywfgS = 'urls_urlCgpvbclbywfg_s',
  UrlsUrlChildalphadxS = 'urls_urlChildalphadx_s',
  UrlsUrlChildttrxS = 'urls_urlChildttrx_s',
  UrlsUrlCjxpo4YaulrlS = 'urls_urlCjxpo4Yaulrl_s',
  UrlsUrlCloserS = 'urls_urlCloser_s',
  UrlsUrlClubdaouniveS = 'urls_urlClubdaounive_s',
  UrlsUrlCpqveafwtbunS = 'urls_urlCpqveafwtbun_s',
  UrlsUrlCwiab3Vsqw5TS = 'urls_urlCwiab3Vsqw5T_s',
  UrlsUrlCy22K5T4N2TuS = 'urls_urlCy22K5T4N2Tu_s',
  UrlsUrlD4Kdbzvzgrt5S = 'urls_urlD4Kdbzvzgrt5_s',
  UrlsUrlDd3YmiavtdcyS = 'urls_urlDd3Ymiavtdcy_s',
  UrlsUrlDearwisearthS = 'urls_urlDearwisearth_s',
  UrlsUrlDemoeosdaoS = 'urls_urlDemoeosdao_s',
  UrlsUrlDemoxdaox2S = 'urls_urlDemoxdaox2_s',
  UrlsUrlDemoxdaoxS = 'urls_urlDemoxdaox_s',
  UrlsUrlDevatarswrldS = 'urls_urlDevatarswrld_s',
  UrlsUrlDhotellS = 'urls_urlDhotell_s',
  UrlsUrlDht5Wzq2KjykS = 'urls_urlDht5Wzq2Kjyk_s',
  UrlsUrlDjmtdxgjiorcS = 'urls_urlDjmtdxgjiorc_s',
  UrlsUrlDkpke5IdbkvdS = 'urls_urlDkpke5Idbkvd_s',
  UrlsUrlDl51QmvjsegoS = 'urls_urlDl51Qmvjsego_s',
  UrlsUrlDmp5Bw4GzxkrS = 'urls_urlDmp5Bw4Gzxkr_s',
  UrlsUrlDnsz1CbwxpapS = 'urls_urlDnsz1Cbwxpap_s',
  UrlsUrlDoqxuyw5CiemS = 'urls_urlDoqxuyw5Ciem_s',
  UrlsUrlDriuukputcgzS = 'urls_urlDriuukputcgz_s',
  UrlsUrlDtmiyxuodgkpS = 'urls_urlDtmiyxuodgkp_s',
  UrlsUrlDvqpp5SdtrdgS = 'urls_urlDvqpp5Sdtrdg_s',
  UrlsUrlDxyzf1Ukies3S = 'urls_urlDxyzf1Ukies3_s',
  UrlsUrlE1Esoh1KeajsS = 'urls_urlE1Esoh1Keajs_s',
  UrlsUrlEarthwisefutS = 'urls_urlEarthwisefut_s',
  UrlsUrlEdm3Mnsg1HnsS = 'urls_urlEdm3Mnsg1Hns_s',
  UrlsUrlEghlh3ZnzqwrS = 'urls_urlEghlh3Znzqwr_s',
  UrlsUrlEhgegumzynw3S = 'urls_urlEhgegumzynw3_s',
  UrlsUrlEk4Lpxh2Ma4SS = 'urls_urlEk4Lpxh2Ma4S_s',
  UrlsUrlEnn5C2Fkbs3WS = 'urls_urlEnn5C2Fkbs3W_s',
  UrlsUrlEoctlpr3Jd5IS = 'urls_urlEoctlpr3Jd5I_s',
  UrlsUrlEqi5RxrwzjbsS = 'urls_urlEqi5Rxrwzjbs_s',
  UrlsUrlEv4Hb5ObkagxS = 'urls_urlEv4Hb5Obkagx_s',
  UrlsUrlEwk4XoaqeiscS = 'urls_urlEwk4Xoaqeisc_s',
  UrlsUrlEz2Elj1Cje1ZS = 'urls_urlEz2Elj1Cje1Z_s',
  UrlsUrlFastdaoS = 'urls_urlFastdao_s',
  UrlsUrlFbbu5Diqmx5PS = 'urls_urlFbbu5Diqmx5P_s',
  UrlsUrlFc2Fxwh43X1BS = 'urls_urlFc2Fxwh43X1B_s',
  UrlsUrlFczw2Xsw5EatS = 'urls_urlFczw2Xsw5Eat_s',
  UrlsUrlFdd3LbrpwkvjS = 'urls_urlFdd3Lbrpwkvj_s',
  UrlsUrlFew2TxlhcmrgS = 'urls_urlFew2Txlhcmrg_s',
  UrlsUrlFincasagradaS = 'urls_urlFincasagrada_s',
  UrlsUrlFjkqwlfpui2US = 'urls_urlFjkqwlfpui2U_s',
  UrlsUrlFjvqqx2Ztp2CS = 'urls_urlFjvqqx2Ztp2C_s',
  UrlsUrlFkhvavzzorf1S = 'urls_urlFkhvavzzorf1_s',
  UrlsUrlFrontdaoS = 'urls_urlFrontdao_s',
  UrlsUrlFrwzlupynkxhS = 'urls_urlFrwzlupynkxh_s',
  UrlsUrlFzfqmy1Ahz1AS = 'urls_urlFzfqmy1Ahz1A_s',
  UrlsUrlG1Apwwd2TnvaS = 'urls_urlG1Apwwd2Tnva_s',
  UrlsUrlG1Plywuz5OgbS = 'urls_urlG1Plywuz5Ogb_s',
  UrlsUrlGa4PytexiwkwS = 'urls_urlGa4Pytexiwkw_s',
  UrlsUrlGaianetS = 'urls_urlGaianet_s',
  UrlsUrlGaiauniondheS = 'urls_urlGaiauniondhe_s',
  UrlsUrlGdgcrhbar3GnS = 'urls_urlGdgcrhbar3Gn_s',
  UrlsUrlGenesisventuS = 'urls_urlGenesisventu_s',
  UrlsUrlGiffj4YhsuoqS = 'urls_urlGiffj4Yhsuoq_s',
  UrlsUrlGkcxfa51YtmnS = 'urls_urlGkcxfa51Ytmn_s',
  UrlsUrlGpsngzpbx4IxS = 'urls_urlGpsngzpbx4Ix_s',
  UrlsUrlGreeninitfoS = 'urls_urlGreeninitfo_s',
  UrlsUrlGreenwoodS = 'urls_urlGreenwood_s',
  UrlsUrlGrwaymzqcxh4S = 'urls_urlGrwaymzqcxh4_s',
  UrlsUrlGvyzicu3Ctj1S = 'urls_urlGvyzicu3Ctj1_s',
  UrlsUrlH1Zrlvo24TkzS = 'urls_urlH1Zrlvo24Tkz_s',
  UrlsUrlHc3Kr2Twzk1ES = 'urls_urlHc3Kr2Twzk1E_s',
  UrlsUrlHibvjoibbfd2S = 'urls_urlHibvjoibbfd2_s',
  UrlsUrlHmntptjudozgS = 'urls_urlHmntptjudozg_s',
  UrlsUrlHolisticsystS = 'urls_urlHolisticsyst_s',
  UrlsUrlHqooypm5UkctS = 'urls_urlHqooypm5Ukct_s',
  UrlsUrlHrgufaizyp5JS = 'urls_urlHrgufaizyp5J_s',
  UrlsUrlHy1B1BwahvfoS = 'urls_urlHy1B1Bwahvfo_s',
  UrlsUrlHy4OjcxxjynnS = 'urls_urlHy4Ojcxxjynn_s',
  UrlsUrlHyphaS = 'urls_urlHypha_s',
  UrlsUrlHyphademoS = 'urls_urlHyphademo_s',
  UrlsUrlI4WrguhpfslrS = 'urls_urlI4Wrguhpfslr_s',
  UrlsUrlI5Nkntm5XnavS = 'urls_urlI5Nkntm5Xnav_s',
  UrlsUrlI31Ggvxj54JeS = 'urls_urlI31Ggvxj54Je_s',
  UrlsUrlIcinetS = 'urls_urlIcinet_s',
  UrlsUrlIdc3Uaupzw2IS = 'urls_urlIdc3Uaupzw2I_s',
  UrlsUrlIe3ThvphmxbrS = 'urls_urlIe3Thvphmxbr_s',
  UrlsUrlIgm5Ieu43IzxS = 'urls_urlIgm5Ieu43Izx_s',
  UrlsUrlIhy4W4Zrrmr4S = 'urls_urlIhy4W4Zrrmr4_s',
  UrlsUrlIkhhrizzdmktS = 'urls_urlIkhhrizzdmkt_s',
  UrlsUrlIm3Skdhoqrz5S = 'urls_urlIm3Skdhoqrz5_s',
  UrlsUrlImcxnrjr5Te4S = 'urls_urlImcxnrjr5Te4_s',
  UrlsUrlIntegrityS = 'urls_urlIntegrity_s',
  UrlsUrlIpbxmrsdrwsbS = 'urls_urlIpbxmrsdrwsb_s',
  UrlsUrlIunzuazm122MS = 'urls_urlIunzuazm122M_s',
  UrlsUrlJ5Hcurppvbc2S = 'urls_urlJ5Hcurppvbc2_s',
  UrlsUrlJ25Oi2B5J21QS = 'urls_urlJ25Oi2B5J21Q_s',
  UrlsUrlJdjqhjoyhnhyS = 'urls_urlJdjqhjoyhnhy_s',
  UrlsUrlJgp4Eyy4Ike4S = 'urls_urlJgp4Eyy4Ike4_s',
  UrlsUrlJhfybqi5JcdvS = 'urls_urlJhfybqi5Jcdv_s',
  UrlsUrlJii2Elpvl2AiS = 'urls_urlJii2Elpvl2Ai_s',
  UrlsUrlJobth5UqnharS = 'urls_urlJobth5Uqnhar_s',
  UrlsUrlJoznzd5Fskk2S = 'urls_urlJoznzd5Fskk2_s',
  UrlsUrlJupiterS = 'urls_urlJupiter_s',
  UrlsUrlJwok2YcpzgouS = 'urls_urlJwok2Ycpzgou_s',
  UrlsUrlJzoepolpnudoS = 'urls_urlJzoepolpnudo_s',
  UrlsUrlK5Fzn5ZtdchzS = 'urls_urlK5Fzn5Ztdchz_s',
  UrlsUrlK5YhstzkcbrkS = 'urls_urlK5Yhstzkcbrk_s',
  UrlsUrlKd2U1Nqd5ZpmS = 'urls_urlKd2U1Nqd5Zpm_s',
  UrlsUrlKedxcfee4PbkS = 'urls_urlKedxcfee4Pbk_s',
  UrlsUrlKefskfhz3HktS = 'urls_urlKefskfhz3Hkt_s',
  UrlsUrlKiajiljlp4FzS = 'urls_urlKiajiljlp4Fz_s',
  UrlsUrlKitchenS = 'urls_urlKitchen_s',
  UrlsUrlKsjjde4Hbn2US = 'urls_urlKsjjde4Hbn2U_s',
  UrlsUrlKuladaoS = 'urls_urlKuladao_s',
  UrlsUrlKv2EibsrpcafS = 'urls_urlKv2Eibsrpcaf_s',
  UrlsUrlKvqzvpqle2OiS = 'urls_urlKvqzvpqle2Oi_s',
  UrlsUrlL4Hlmodr2Ux2S = 'urls_urlL4Hlmodr2Ux2_s',
  UrlsUrlL54Gm5HzawwgS = 'urls_urlL54Gm5Hzawwg_s',
  UrlsUrlLalagardensS = 'urls_urlLalagardens_s',
  UrlsUrlLgzydegefd2OS = 'urls_urlLgzydegefd2O_s',
  UrlsUrlLightleadersS = 'urls_urlLightleaders_s',
  UrlsUrlLiminalvillS = 'urls_urlLiminalvill_s',
  UrlsUrlLkhwazi4Ggp3S = 'urls_urlLkhwazi4Ggp3_s',
  UrlsUrlLn3Vzjj252HdS = 'urls_urlLn3Vzjj252Hd_s',
  UrlsUrlLndfupfa2H5DS = 'urls_urlLndfupfa2H5D_s',
  UrlsUrlLnfd5Gnly5UiS = 'urls_urlLnfd5Gnly5Ui_s',
  UrlsUrlLnxbx3PixmbfS = 'urls_urlLnxbx3Pixmbf_s',
  UrlsUrlM4Hk2S2Vxs1FS = 'urls_urlM4Hk2S2Vxs1F_s',
  UrlsUrlM53FbwxxgnrhS = 'urls_urlM53Fbwxxgnrh_s',
  UrlsUrlMbaajxm41HfaS = 'urls_urlMbaajxm41Hfa_s',
  UrlsUrlMeczomzsoiuzS = 'urls_urlMeczomzsoiuz_s',
  UrlsUrlMf33Nwhrc2PiS = 'urls_urlMf33Nwhrc2Pi_s',
  UrlsUrlMfdx2SjxjbpfS = 'urls_urlMfdx2Sjxjbpf_s',
  UrlsUrlMjsie3ZvqqrmS = 'urls_urlMjsie3Zvqqrm_s',
  UrlsUrlMksii3R3IfuzS = 'urls_urlMksii3R3Ifuz_s',
  UrlsUrlMomdhoS = 'urls_urlMomdho_s',
  UrlsUrlMoq3Io4GwguvS = 'urls_urlMoq3Io4Gwguv_s',
  UrlsUrlMotlops3FmcyS = 'urls_urlMotlops3Fmcy_s',
  UrlsUrlMq32Dxpku1YwS = 'urls_urlMq32Dxpku1Yw_s',
  UrlsUrlMwm5Qizc3GmiS = 'urls_urlMwm5Qizc3Gmi_s',
  UrlsUrlN1M4Hyjb3PrqS = 'urls_urlN1M4Hyjb3Prq_s',
  UrlsUrlN2Qb4Oq5CemeS = 'urls_urlN2Qb4Oq5Ceme_s',
  UrlsUrlN11Wig1Pds3WS = 'urls_urlN11Wig1Pds3W_s',
  UrlsUrlN32WvxvkqbkbS = 'urls_urlN32Wvxvkqbkb_s',
  UrlsUrlNa1Sonzbvtk5S = 'urls_urlNa1Sonzbvtk5_s',
  UrlsUrlNcv3H5Dm45QgS = 'urls_urlNcv3H5Dm45Qg_s',
  UrlsUrlNduy5BttdrqqS = 'urls_urlNduy5Bttdrqq_s',
  UrlsUrlNestrS = 'urls_urlNestr_s',
  UrlsUrlNewsouthafrS = 'urls_urlNewsouthafr_s',
  UrlsUrlNextgenvillS = 'urls_urlNextgenvill_s',
  UrlsUrlNivtbyuhk3RdS = 'urls_urlNivtbyuhk3Rd_s',
  UrlsUrlNkchcudxo425S = 'urls_urlNkchcudxo425_s',
  UrlsUrlNonnhrtoku1ZS = 'urls_urlNonnhrtoku1Z_s',
  UrlsUrlNoqcp5Afx5E5S = 'urls_urlNoqcp5Afx5E5_s',
  UrlsUrlO3Tzzbjaraj3S = 'urls_urlO3Tzzbjaraj3_s',
  UrlsUrlOctuxbu5KdplS = 'urls_urlOctuxbu5Kdpl_s',
  UrlsUrlOkkhmgkejuupS = 'urls_urlOkkhmgkejuup_s',
  UrlsUrlOpdv42Sk3YunS = 'urls_urlOpdv42Sk3Yun_s',
  UrlsUrlOqeavbgf5H2HS = 'urls_urlOqeavbgf5H2H_s',
  UrlsUrlOqmt53D3NijfS = 'urls_urlOqmt53D3Nijf_s',
  UrlsUrlOriginwisdomS = 'urls_urlOriginwisdom_s',
  UrlsUrlOsthmvtcvqk2S = 'urls_urlOsthmvtcvqk2_s',
  UrlsUrlOsylrx3Zyo3IS = 'urls_urlOsylrx3Zyo3I_s',
  UrlsUrlOvfykbv5N252S = 'urls_urlOvfykbv5N252_s',
  UrlsUrlOzxvgkytgfm5S = 'urls_urlOzxvgkytgfm5_s',
  UrlsUrlP3Xqs1Vy53J4S = 'urls_urlP3Xqs1Vy53J4_s',
  UrlsUrlPachamamarisS = 'urls_urlPachamamaris_s',
  UrlsUrlPcwoiacrdzmlS = 'urls_urlPcwoiacrdzml_s',
  UrlsUrlPgkuvuyd5TkfS = 'urls_urlPgkuvuyd5Tkf_s',
  UrlsUrlPkpcaltfb2AnS = 'urls_urlPkpcaltfb2An_s',
  UrlsUrlPlanetcareS = 'urls_urlPlanetcare_s',
  UrlsUrlPtogan1Cqjp2S = 'urls_urlPtogan1Cqjp2_s',
  UrlsUrlPuwpla2N5Z4AS = 'urls_urlPuwpla2N5Z4A_s',
  UrlsUrlPy5X2CaqgvwrS = 'urls_urlPy5X2Caqgvwr_s',
  UrlsUrlPyzxw1Bos3EsS = 'urls_urlPyzxw1Bos3Es_s',
  UrlsUrlQ4Hexzhmslt3S = 'urls_urlQ4Hexzhmslt3_s',
  UrlsUrlQbcbgv4GpczwS = 'urls_urlQbcbgv4Gpczw_s',
  UrlsUrlQhftw3YknfusS = 'urls_urlQhftw3Yknfus_s',
  UrlsUrlQmakgqzdtki4S = 'urls_urlQmakgqzdtki4_s',
  UrlsUrlQonpkk3LyivxS = 'urls_urlQonpkk3Lyivx_s',
  UrlsUrlQqwe2UtvgisrS = 'urls_urlQqwe2Utvgisr_s',
  UrlsUrlQr2PrxbizjbvS = 'urls_urlQr2Prxbizjbv_s',
  UrlsUrlQr5JcgndgadiS = 'urls_urlQr5Jcgndgadi_s',
  UrlsUrlQs23P4HomwafS = 'urls_urlQs23P4Homwaf_s',
  UrlsUrlQsabrv1ZpcyuS = 'urls_urlQsabrv1Zpcyu_s',
  UrlsUrlR2Ttskh142KvS = 'urls_urlR2Ttskh142Kv_s',
  UrlsUrlR3Dtwhyei41KS = 'urls_urlR3Dtwhyei41K_s',
  UrlsUrlR24Dca2VwnnmS = 'urls_urlR24Dca2Vwnnm_s',
  UrlsUrlR31XdmdluztnS = 'urls_urlR31Xdmdluztn_s',
  UrlsUrlRegencivicsS = 'urls_urlRegencivics_s',
  UrlsUrlRegeneratexS = 'urls_urlRegeneratex_s',
  UrlsUrlRegenlivingS = 'urls_urlRegenliving_s',
  UrlsUrlRipplesdaoS = 'urls_urlRipplesdao_s',
  UrlsUrlRiverS = 'urls_urlRiver_s',
  UrlsUrlRjjzxayy4C5IS = 'urls_urlRjjzxayy4C5I_s',
  UrlsUrlRjlaa4Xyt2FeS = 'urls_urlRjlaa4Xyt2Fe_s',
  UrlsUrlRjnr5Ufv3HizS = 'urls_urlRjnr5Ufv3Hiz_s',
  UrlsUrlRlbajxwjl1UeS = 'urls_urlRlbajxwjl1Ue_s',
  UrlsUrlRrt1IycndxxfS = 'urls_urlRrt1Iycndxxf_s',
  UrlsUrlRtq42LbetbxlS = 'urls_urlRtq42Lbetbxl_s',
  UrlsUrlRtrmcn3Avkf1S = 'urls_urlRtrmcn3Avkf1_s',
  UrlsUrlRtudvevl2CjtS = 'urls_urlRtudvevl2Cjt_s',
  UrlsUrlRysnpti3BdvgS = 'urls_urlRysnpti3Bdvg_s',
  UrlsUrlS2Zwpt2RqxhyS = 'urls_urlS2Zwpt2Rqxhy_s',
  UrlsUrlSaltcrossgarS = 'urls_urlSaltcrossgar_s',
  UrlsUrlSamaratrustS = 'urls_urlSamaratrust_s',
  UrlsUrlSctawkeupsccS = 'urls_urlSctawkeupscc_s',
  UrlsUrlSeedscommonsS = 'urls_urlSeedscommons_s',
  UrlsUrlShepherddaoS = 'urls_urlShepherddao_s',
  UrlsUrlShkwh1Iynyh4S = 'urls_urlShkwh1Iynyh4_s',
  UrlsUrlSi2Jvmzemt31S = 'urls_urlSi2Jvmzemt31_s',
  UrlsUrlSilxhs5C5NarS = 'urls_urlSilxhs5C5Nar_s',
  UrlsUrlSk1OjvjucrfqS = 'urls_urlSk1Ojvjucrfq_s',
  UrlsUrlSmwgavmt5RytS = 'urls_urlSmwgavmt5Ryt_s',
  UrlsUrlSoil1OrwrmpsS = 'urls_urlSoil1Orwrmps_s',
  UrlsUrlSotzumhlphtxS = 'urls_urlSotzumhlphtx_s',
  UrlsUrlSrmiubqdc4RkS = 'urls_urlSrmiubqdc4Rk_s',
  UrlsUrlSs53Hoim4Gt3S = 'urls_urlSs53Hoim4Gt3_s',
  UrlsUrlSxjul33Jf1BvS = 'urls_urlSxjul33Jf1Bv_s',
  UrlsUrlT2Oqxmtjpk3XS = 'urls_urlT2Oqxmtjpk3X_s',
  UrlsUrlT4Ygmfu4OwipS = 'urls_urlT4Ygmfu4Owip_s',
  UrlsUrlTc3Uweyd2A2CS = 'urls_urlTc3Uweyd2A2C_s',
  UrlsUrlTcpswkf2YfsfS = 'urls_urlTcpswkf2Yfsf_s',
  UrlsUrlTcwrv1AqtzxeS = 'urls_urlTcwrv1Aqtzxe_s',
  UrlsUrlTestdaoS = 'urls_urlTestdao_s',
  UrlsUrlTestnewdaocacS = 'urls_urlTestnewdaocac_s',
  UrlsUrlThebestxdapS = 'urls_urlThebestxdap_s',
  UrlsUrlThedokcyip3OS = 'urls_urlThedokcyip3O_s',
  UrlsUrlTheflowS = 'urls_urlTheflow_s',
  UrlsUrlThftmv3D42KbS = 'urls_urlThftmv3D42Kb_s',
  UrlsUrlThinkplaceS = 'urls_urlThinkplace_s',
  UrlsUrlTighnzy4Pgu3S = 'urls_urlTighnzy4Pgu3_s',
  UrlsUrlTqmby2EadaiuS = 'urls_urlTqmby2Eadaiu_s',
  UrlsUrlTqsre5WhjjbyS = 'urls_urlTqsre5Whjjby_s',
  UrlsUrlTrshury4SoliS = 'urls_urlTrshury4Soli_s',
  UrlsUrlTss3WqdjlalpS = 'urls_urlTss3Wqdjlalp_s',
  UrlsUrlU2T3KwgdmrbeS = 'urls_urlU2T3Kwgdmrbe_s',
  UrlsUrlU4Yfk1S4Cv3HS = 'urls_urlU4Yfk1S4Cv3H_s',
  UrlsUrlUbuntuS = 'urls_urlUbuntu_s',
  UrlsUrlUgcwrgniuwisS = 'urls_urlUgcwrgniuwis_s',
  UrlsUrlUij3UygyzyowS = 'urls_urlUij3Uygyzyow_s',
  UrlsUrlUlpyjkthcu2CS = 'urls_urlUlpyjkthcu2C_s',
  UrlsUrlUmac2Lsxcc14S = 'urls_urlUmac2Lsxcc14_s',
  UrlsUrlUnitedplanetS = 'urls_urlUnitedplanet_s',
  UrlsUrlUniversalisS = 'urls_urlUniversalis_s',
  UrlsUrlUniverselandS = 'urls_urlUniverseland_s',
  UrlsUrlUnkailabsS = 'urls_urlUnkailabs_s',
  UrlsUrlUpvotetest1S = 'urls_urlUpvotetest1_s',
  UrlsUrlUtanck3SxazeS = 'urls_urlUtanck3Sxaze_s',
  UrlsUrlUtyeq4Dqk3IuS = 'urls_urlUtyeq4Dqk3Iu_s',
  UrlsUrlUwkshkgwuksxS = 'urls_urlUwkshkgwuksx_s',
  UrlsUrlUwmng5Zgcoa2S = 'urls_urlUwmng5Zgcoa2_s',
  UrlsUrlUwztsw1L3Na5S = 'urls_urlUwztsw1L3Na5_s',
  UrlsUrlUzihb11Q5PpiS = 'urls_urlUzihb11Q5Ppi_s',
  UrlsUrlV2U42HujkzzkS = 'urls_urlV2U42Hujkzzk_s',
  UrlsUrlVf3Rsnpdqx1FS = 'urls_urlVf3Rsnpdqx1F_s',
  UrlsUrlVflqjbatmmf1S = 'urls_urlVflqjbatmmf1_s',
  UrlsUrlVg1Lob4OakdzS = 'urls_urlVg1Lob4Oakdz_s',
  UrlsUrlVgryuxp1Cyt4S = 'urls_urlVgryuxp1Cyt4_s',
  UrlsUrlVh1ImaheqeqyS = 'urls_urlVh1Imaheqeqy_s',
  UrlsUrlVk2P3R3ZpbquS = 'urls_urlVk2P3R3Zpbqu_s',
  UrlsUrlVnyenpufyes2S = 'urls_urlVnyenpufyes2_s',
  UrlsUrlVo3N43V4KhhiS = 'urls_urlVo3N43V4Khhi_s',
  UrlsUrlVokaoj1T5QsrS = 'urls_urlVokaoj1T5Qsr_s',
  UrlsUrlVovv2TengevlS = 'urls_urlVovv2Tengevl_s',
  UrlsUrlVqloh1DpeclvS = 'urls_urlVqloh1Dpeclv_s',
  UrlsUrlVqsgv5Mheq1ZS = 'urls_urlVqsgv5Mheq1Z_s',
  UrlsUrlVse4A2Ttg3OnS = 'urls_urlVse4A2Ttg3On_s',
  UrlsUrlVsmoku34PbnjS = 'urls_urlVsmoku34Pbnj_s',
  UrlsUrlVx35Wgozl15SS = 'urls_urlVx35Wgozl15S_s',
  UrlsUrlWbh1V54UekjyS = 'urls_urlWbh1V54Uekjy_s',
  UrlsUrlWbo53AyfygbhS = 'urls_urlWbo53Ayfygbh_s',
  UrlsUrlWdxuocdyahafS = 'urls_urlWdxuocdyahaf_s',
  UrlsUrlWekqmvasjcqbS = 'urls_urlWekqmvasjcqb_s',
  UrlsUrlWeudzvh3Hd2QS = 'urls_urlWeudzvh3Hd2Q_s',
  UrlsUrlWf2Irhvtu5H5S = 'urls_urlWf2Irhvtu5H5_s',
  UrlsUrlWfzlx3551PggS = 'urls_urlWfzlx3551Pgg_s',
  UrlsUrlWgvxprpxfngoS = 'urls_urlWgvxprpxfngo_s',
  UrlsUrlWhnelpre1XnzS = 'urls_urlWhnelpre1Xnz_s',
  UrlsUrlWildtripsS = 'urls_urlWildtrips_s',
  UrlsUrlWrongdaoS = 'urls_urlWrongdao_s',
  UrlsUrlWtr21OwdodwwS = 'urls_urlWtr21Owdodww_s',
  UrlsUrlWuip5Bx23244S = 'urls_urlWuip5Bx23244_s',
  UrlsUrlWuknmlynj5QbS = 'urls_urlWuknmlynj5Qb_s',
  UrlsUrlWuzjmdodtrfnS = 'urls_urlWuzjmdodtrfn_s',
  UrlsUrlX5Gpg2Kk14RpS = 'urls_urlX5Gpg2Kk14Rp_s',
  UrlsUrlXc1Mpm4R1V3QS = 'urls_urlXc1Mpm4R1V3Q_s',
  UrlsUrlXecj4Cukr1PrS = 'urls_urlXecj4Cukr1Pr_s',
  UrlsUrlXfvd2PyvelymS = 'urls_urlXfvd2Pyvelym_s',
  UrlsUrlXmiereyl52UmS = 'urls_urlXmiereyl52Um_s',
  UrlsUrlXpznyeq1UjcwS = 'urls_urlXpznyeq1Ujcw_s',
  UrlsUrlXrfuttwmsapmS = 'urls_urlXrfuttwmsapm_s',
  UrlsUrlXx4Pyzevrrz3S = 'urls_urlXx4Pyzevrrz3_s',
  UrlsUrlYimw2JwzpfqxS = 'urls_urlYimw2Jwzpfqx_s',
  UrlsUrlYjtij3OxqizoS = 'urls_urlYjtij3Oxqizo_s',
  UrlsUrlYk24Za5BqjeuS = 'urls_urlYk24Za5Bqjeu_s',
  UrlsUrlYlxmkxtb4M4JS = 'urls_urlYlxmkxtb4M4J_s',
  UrlsUrlYoglgtvd2TtfS = 'urls_urlYoglgtvd2Ttf_s',
  UrlsUrlYp13Kd3FzhvmS = 'urls_urlYp13Kd3Fzhvm_s',
  UrlsUrlYtibux4PydniS = 'urls_urlYtibux4Pydni_s',
  UrlsUrlYtowqoe4Jjg2S = 'urls_urlYtowqoe4Jjg2_s',
  UrlsUrlYveif24SwpxoS = 'urls_urlYveif24Swpxo_s',
  UrlsUrlYxypcwoh1PmnS = 'urls_urlYxypcwoh1Pmn_s',
  UrlsUrlZgbrnuisnb3HS = 'urls_urlZgbrnuisnb3H_s',
  UrlsUrlZgepdsxircadS = 'urls_urlZgepdsxircad_s',
  UrlsUrlZhuu21CzfaerS = 'urls_urlZhuu21Czfaer_s',
  UrlsUrlZl5FqkhoztamS = 'urls_urlZl5Fqkhoztam_s',
  UrlsUrlZu5Xtqjzo2SqS = 'urls_urlZu5Xtqjzo2Sq_s',
  UrlsUrlZvstjcdyjcgyS = 'urls_urlZvstjcdyjcgy_s',
  UrlsUrlZzcjstecud2TS = 'urls_urlZzcjstecud2T_s',
  UrlsUrlS = 'urls_url_s'
}

export type SettingsOrder = {
  asc?: InputMaybe<SettingsOrderable>;
  desc?: InputMaybe<SettingsOrderable>;
  then?: InputMaybe<SettingsOrder>;
};

export enum SettingsOrderable {
  AdminsAccountN = 'admins_account_n',
  AdminsUpdatedDateT = 'admins_updatedDate_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  EcosystemDomainS = 'ecosystem_domain_s',
  EcosystemLogoS = 'ecosystem_logo_s',
  EcosystemNameS = 'ecosystem_name_s',
  EcosystemPurposeS = 'ecosystem_purpose_s',
  OnboardersAccountN = 'onboarders_account_n',
  OnboardersUpdatedDateT = 'onboarders_updatedDate_t',
  OtherSettingsLogoS = 'otherSettings_logo_s',
  SettingsAccountI = 'settings_account_i',
  SettingsAddAdminsEnabledI = 'settings_addAdminsEnabled_i',
  SettingsClaimEnabledI = 'settings_claimEnabled_i',
  SettingsCommentsContractN = 'settings_commentsContract_n',
  SettingsCommentsContractS = 'settings_commentsContract_s',
  SettingsCommunityVotingAlignmentPercentI = 'settings_communityVotingAlignmentPercent_i',
  SettingsCommunityVotingDurationSecI = 'settings_communityVotingDurationSec_i',
  SettingsCommunityVotingEnabledI = 'settings_communityVotingEnabled_i',
  SettingsCommunityVotingMethodS = 'settings_communityVotingMethod_s',
  SettingsCommunityVotingQuorumPercentI = 'settings_communityVotingQuorumPercent_i',
  SettingsCommunityotingQuorumPercentI = 'settings_communityotingQuorumPercent_i',
  SettingsCommunityotingQuorumPercentS = 'settings_communityotingQuorumPercent_s',
  SettingsContractVersionS = 'settings_contractVersion_s',
  SettingsContractsVersionS = 'settings_contractsVersion_s',
  SettingsDaoDescriptionS = 'settings_daoDescription_s',
  SettingsDaoNameN = 'settings_daoName_n',
  SettingsDaoSuperS = 'settings_daoSuper_s',
  SettingsDaoTitleS = 'settings_daoTitle_s',
  SettingsDaoUrlS = 'settings_daoUrl_s',
  SettingsDashboardBackgroundImageS = 'settings_dashboardBackgroundImage_s',
  SettingsDashboardOverlayColorS = 'settings_dashboardOverlayColor_s',
  SettingsDashboardOverlayOpacityS = 'settings_dashboardOverlayOpacity_s',
  SettingsDashboardParagraphS = 'settings_dashboardParagraph_s',
  SettingsDashboardPatternColorS = 'settings_dashboardPatternColor_s',
  SettingsDashboardPatternOpacityS = 'settings_dashboardPatternOpacity_s',
  SettingsDashboardTitleS = 'settings_dashboardTitle_s',
  SettingsDiscordUrlS = 'settings_discordURL_s',
  SettingsDocumentationButtonTextS = 'settings_documentationButtonText_s',
  SettingsDocumentationUrlS = 'settings_documentationURL_s',
  SettingsEcosystemChildPriceStakedA = 'settings_ecosystemChildPriceStaked_a',
  SettingsEcosystemChildPriceA = 'settings_ecosystemChildPrice_a',
  SettingsEcosystemPriceStakedA = 'settings_ecosystemPriceStaked_a',
  SettingsEcosystemPriceA = 'settings_ecosystemPrice_a',
  SettingsExploreBackgroundImageS = 'settings_exploreBackgroundImage_s',
  SettingsExploreParagraphS = 'settings_exploreParagraph_s',
  SettingsExploreTitleS = 'settings_exploreTitle_s',
  SettingsExtendedLogoS = 'settings_extendedLogo_s',
  SettingsGovernanceTokenContractN = 'settings_governanceTokenContract_n',
  SettingsHeaderPatternS = 'settings_headerPattern_s',
  SettingsHomepageHeaderS = 'settings_homepageHeader_s',
  SettingsHomepageSubtitleS = 'settings_homepageSubtitle_s',
  SettingsHusdTokenContractN = 'settings_husdTokenContract_n',
  SettingsHvoiceTokenContractN = 'settings_hvoiceTokenContract_n',
  SettingsHyphaCosaleContractN = 'settings_hyphaCosaleContract_n',
  SettingsHyphaDeferralFactorX100I = 'settings_hyphaDeferralFactorX100_i',
  SettingsHyphaTokenContractN = 'settings_hyphaTokenContract_n',
  SettingsHyphaUsdValueA = 'settings_hyphaUsdValue_a',
  SettingsIsHyphaI = 'settings_isHypha_i',
  SettingsLogoS = 'settings_logo_s',
  SettingsMembersApplicationEnabledI = 'settings_membersApplicationEnabled_i',
  SettingsMembersBackgroundImageS = 'settings_membersBackgroundImage_s',
  SettingsMembersHeaderS = 'settings_membersHeader_s',
  SettingsMembersOverlayColorS = 'settings_membersOverlayColor_s',
  SettingsMembersOverlayOpacityS = 'settings_membersOverlayOpacity_s',
  SettingsMembersParagraphS = 'settings_membersParagraph_s',
  SettingsMembersPatternColorS = 'settings_membersPatternColor_s',
  SettingsMembersPatternOpacityS = 'settings_membersPatternOpacity_s',
  SettingsMembersSubtitleS = 'settings_membersSubtitle_s',
  SettingsMembersTitleS = 'settings_membersTitle_s',
  SettingsMsigApprovalAmountI = 'settings_msigApprovalAmount_i',
  SettingsMultisigEnabledI = 'settings_multisigEnabled_i',
  SettingsMyOtherOtherSettingI = 'settings_myOtherOtherSetting_i',
  SettingsMyOtherSettingI = 'settings_myOtherSetting_i',
  SettingsMySettingI = 'settings_mySetting_i',
  SettingsNameS = 'settings_name_s',
  SettingsNativeTokenA = 'settings_nativeToken_a',
  SettingsNextCommentSectionN = 'settings_nextCommentSection_n',
  SettingsNextProposalNameIntI = 'settings_nextProposalNameInt_i',
  SettingsNextScheduleIdI = 'settings_nextScheduleId_i',
  SettingsNextScheduledIdI = 'settings_nextScheduledId_i',
  SettingsOnboarderAccountN = 'settings_onboarderAccount_n',
  SettingsOrganisationBackgroundImageS = 'settings_organisationBackgroundImage_s',
  SettingsOrganisationOverlayColorS = 'settings_organisationOverlayColor_s',
  SettingsOrganisationOverlayOpacityS = 'settings_organisationOverlayOpacity_s',
  SettingsOrganisationParagraphS = 'settings_organisationParagraph_s',
  SettingsOrganisationPatternColorS = 'settings_organisationPatternColor_s',
  SettingsOrganisationPatternOpacityS = 'settings_organisationPatternOpacity_s',
  SettingsOrganisationTitleS = 'settings_organisationTitle_s',
  SettingsOrganizationHeaderS = 'settings_organizationHeader_s',
  SettingsOrganizationSubtitleS = 'settings_organizationSubtitle_s',
  SettingsPatternBase64S = 'settings_patternBase64_s',
  SettingsPatternColorS = 'settings_patternColor_s',
  SettingsPatternOpacityI = 'settings_patternOpacity_i',
  SettingsPatternOpacityS = 'settings_patternOpacity_s',
  SettingsPatternS = 'settings_pattern_s',
  SettingsPausedI = 'settings_paused_i',
  SettingsPegTokenContractN = 'settings_pegTokenContract_n',
  SettingsPegTokenNameS = 'settings_pegTokenName_s',
  SettingsPegTokenA = 'settings_pegToken_a',
  SettingsPeriodDurationSecI = 'settings_periodDurationSec_i',
  SettingsPeriodDurationSecS = 'settings_periodDurationSec_s',
  SettingsPrimaryColorS = 'settings_primaryColor_s',
  SettingsProposalsBackgroundImageS = 'settings_proposalsBackgroundImage_s',
  SettingsProposalsCreationEnabledI = 'settings_proposalsCreationEnabled_i',
  SettingsProposalsHeaderS = 'settings_proposalsHeader_s',
  SettingsProposalsOverlayColorS = 'settings_proposalsOverlayColor_s',
  SettingsProposalsOverlayOpacityS = 'settings_proposalsOverlayOpacity_s',
  SettingsProposalsParagraphS = 'settings_proposalsParagraph_s',
  SettingsProposalsPatternColorS = 'settings_proposalsPatternColor_s',
  SettingsProposalsPatternOpacityS = 'settings_proposalsPatternOpacity_s',
  SettingsProposalsSubtitleS = 'settings_proposalsSubtitle_s',
  SettingsProposalsTitleS = 'settings_proposalsTitle_s',
  SettingsPublisherContractN = 'settings_publisherContract_n',
  SettingsRedemptionsEnabledI = 'settings_redemptionsEnabled_i',
  SettingsRemovableBannersEnabledI = 'settings_removableBannersEnabled_i',
  SettingsRewardToPegRatioA = 'settings_rewardToPegRatio_a',
  SettingsRewardTokenContractN = 'settings_rewardTokenContract_n',
  SettingsRewardTokenMaxSupplyA = 'settings_rewardTokenMaxSupply_a',
  SettingsRewardTokenNameS = 'settings_rewardTokenName_s',
  SettingsRewardTokenA = 'settings_rewardToken_a',
  SettingsRootNodeS = 'settings_rootNode_s',
  SettingsSaleHyphaUsdValueA = 'settings_saleHyphaUsdValue_a',
  SettingsSecondaryColorS = 'settings_secondaryColor_s',
  SettingsSeedsDeferralFactorX100I = 'settings_seedsDeferralFactorX100_i',
  SettingsSeedsEscrowContractN = 'settings_seedsEscrowContract_n',
  SettingsSeedsTokenContractN = 'settings_seedsTokenContract_n',
  SettingsSettingsPatternBase64SS = 'settings_settingsPatternBase64S_s',
  SettingsSettingsVotingAlignmentX100II = 'settings_settingsVotingAlignmentX100I_i',
  SettingsSettingsVotingQuorumX100II = 'settings_settingsVotingQuorumX100I_i',
  SettingsSocialChatS = 'settings_socialChat_s',
  SettingsSplashBackgroundImageS = 'settings_splashBackgroundImage_s',
  SettingsSplashOverlayColorS = 'settings_splashOverlayColor_s',
  SettingsSplashOverlayOpacityS = 'settings_splashOverlayOpacity_s',
  SettingsSplashPatternColorS = 'settings_splashPatternColor_s',
  SettingsSplashPatternOpacityS = 'settings_splashPatternOpacity_s',
  SettingsTestSetI = 'settings_testSet_i',
  SettingsTestSettingA = 'settings_testSetting_a',
  SettingsTestSettingS = 'settings_testSetting_s',
  SettingsTextColorS = 'settings_textColor_s',
  SettingsThresholdI = 'settings_threshold_i',
  SettingsTitleS = 'settings_title_s',
  SettingsTreasuryAccountN = 'settings_treasuryAccount_n',
  SettingsTreasuryContractN = 'settings_treasuryContract_n',
  SettingsTreasuryTokenMultiplierI = 'settings_treasuryTokenMultiplier_i',
  SettingsUpdatedDateT = 'settings_updatedDate_t',
  SettingsUpvoteCheifDelegateCountI = 'settings_upvoteCheifDelegateCount_i',
  SettingsUpvoteCheifDelegateDurationI = 'settings_upvoteCheifDelegateDuration_i',
  SettingsUpvoteChiefDelegateCountI = 'settings_upvoteChiefDelegateCount_i',
  SettingsUpvoteDurationI = 'settings_upvoteDuration_i',
  SettingsUpvoteHeadDelegateDurationI = 'settings_upvoteHeadDelegateDuration_i',
  SettingsUpvoteHeadDelegateRoundI = 'settings_upvoteHeadDelegateRound_i',
  SettingsUpvoteRoundsS = 'settings_upvoteRounds_s',
  SettingsUpvoteStartDateTimeS = 'settings_upvoteStartDateTime_s',
  SettingsUpvoteStartDateS = 'settings_upvoteStartDate_s',
  SettingsUpvoteStartTimeS = 'settings_upvoteStartTime_s',
  SettingsUrlS = 'settings_url_s',
  SettingsUsesSeedsI = 'settings_usesSeeds_i',
  SettingsUtilityTokenMultiplierI = 'settings_utilityTokenMultiplier_i',
  SettingsVOtingdurationsecI = 'settings_vOTINGDURATIONSEC_i',
  SettingsVoiceTokenDecayPerPeriodX10MI = 'settings_voiceTokenDecayPerPeriodX10M_i',
  SettingsVoiceTokenDecayPeriodI = 'settings_voiceTokenDecayPeriod_i',
  SettingsVoiceTokenDecayPeriodS = 'settings_voiceTokenDecayPeriod_s',
  SettingsVoiceTokenMultiplierI = 'settings_voiceTokenMultiplier_i',
  SettingsVoiceTokenA = 'settings_voiceToken_a',
  SettingsVotingAlignmentPercentX100I = 'settings_votingAlignmentPercentX100_i',
  SettingsVotingAlignmentPercentI = 'settings_votingAlignmentPercent_i',
  SettingsVotingAlignmentPercentS = 'settings_votingAlignmentPercent_s',
  SettingsVotingAlignmentX100I = 'settings_votingAlignmentX100_i',
  SettingsVotingAlignmentX100S = 'settings_votingAlignmentX100_s',
  SettingsVotingDurationSecI = 'settings_votingDurationSec_i',
  SettingsVotingDurationSecS = 'settings_votingDurationSec_s',
  SettingsVotingDurationSecondsI = 'settings_votingDurationSeconds_i',
  SettingsVotingMethodS = 'settings_votingMethod_s',
  SettingsVotingQuorumPercentX100I = 'settings_votingQuorumPercentX100_i',
  SettingsVotingQuorumPercentI = 'settings_votingQuorumPercent_i',
  SettingsVotingQuorumPercentS = 'settings_votingQuorumPercent_s',
  SettingsVotingQuorumX100I = 'settings_votingQuorumX100_i',
  SettingsVotingQuorumX100S = 'settings_votingQuorumX100_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  TestsTestingsettingsI = 'tests_testingsettings_i',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  UrlsUrl1Bk1Yxby2TieS = 'urls_url1Bk1Yxby2Tie_s',
  UrlsUrl1Fmizk1Zuyi2S = 'urls_url1Fmizk1Zuyi2_s',
  UrlsUrl1FvbfectvsxcS = 'urls_url1Fvbfectvsxc_s',
  UrlsUrl1Mmp4PfmrerrS = 'urls_url1Mmp4Pfmrerr_s',
  UrlsUrl1N5Kz3GemsegS = 'urls_url1N5Kz3Gemseg_s',
  UrlsUrl1Ovembm4JczoS = 'urls_url1Ovembm4Jczo_s',
  UrlsUrl1QfetejflaflS = 'urls_url1Qfetejflafl_s',
  UrlsUrl2Q3Pz2Hn43GqS = 'urls_url2Q3Pz2Hn43Gq_s',
  UrlsUrl2T3AybfvqorwS = 'urls_url2T3Aybfvqorw_s',
  UrlsUrl2T4Fdni1StybS = 'urls_url2T4Fdni1Styb_s',
  UrlsUrl2Xegtmj2JdsfS = 'urls_url2Xegtmj2Jdsf_s',
  UrlsUrl2Yfg3Nvby1ZlS = 'urls_url2Yfg3Nvby1Zl_s',
  UrlsUrl3Cen4Uzdy2EsS = 'urls_url3Cen4Uzdy2Es_s',
  UrlsUrl3G2Adxfbf4YtS = 'urls_url3G2Adxfbf4Yt_s',
  UrlsUrl3Lk4NzggpubiS = 'urls_url3Lk4Nzggpubi_s',
  UrlsUrl3O3W1GgvkkaxS = 'urls_url3O3W1Ggvkkax_s',
  UrlsUrl3QgrntosyxizS = 'urls_url3Qgrntosyxiz_s',
  UrlsUrl3Vf2X13LcepdS = 'urls_url3Vf2X13Lcepd_s',
  UrlsUrl4D2V4Xmgbir2S = 'urls_url4D2V4Xmgbir2_s',
  UrlsUrl4Ehml2Vqzp5CS = 'urls_url4Ehml2Vqzp5C_s',
  UrlsUrl4Ezfoukyd4K2S = 'urls_url4Ezfoukyd4K2_s',
  UrlsUrl4Fewyw1QtrekS = 'urls_url4Fewyw1Qtrek_s',
  UrlsUrl4Jaepm23Od5WS = 'urls_url4Jaepm23Od5W_s',
  UrlsUrl4K4GcongezpvS = 'urls_url4K4Gcongezpv_s',
  UrlsUrl4QkkymwtssjjS = 'urls_url4Qkkymwtssjj_s',
  UrlsUrl4U5F1Ppy4XanS = 'urls_url4U5F1Ppy4Xan_s',
  UrlsUrl4Urhwj1Paeo5S = 'urls_url4Urhwj1Paeo5_s',
  UrlsUrl4UvjpanvhvtlS = 'urls_url4Uvjpanvhvtl_s',
  UrlsUrl5Kkb3TpwjihoS = 'urls_url5Kkb3Tpwjiho_s',
  UrlsUrl5Lsfqinc2ZybS = 'urls_url5Lsfqinc2Zyb_s',
  UrlsUrl5QakaspwwetvS = 'urls_url5Qakaspwwetv_s',
  UrlsUrl5Vn4YbbadgjjS = 'urls_url5Vn4Ybbadgjj_s',
  UrlsUrl5Z4QztkwnbkkS = 'urls_url5Z4Qztkwnbkk_s',
  UrlsUrl15Mgh14VkqkeS = 'urls_url15Mgh14Vkqke_s',
  UrlsUrl22Vnqfsm3Q3SS = 'urls_url22Vnqfsm3Q3S_s',
  UrlsUrl25Dkrzm3Pr5RS = 'urls_url25Dkrzm3Pr5R_s',
  UrlsUrl32Xgw4LmfaxhS = 'urls_url32Xgw4Lmfaxh_s',
  UrlsUrl34Vxjg3NpjihS = 'urls_url34Vxjg3Npjih_s',
  UrlsUrl35U3JkcydkurS = 'urls_url35U3Jkcydkur_s',
  UrlsUrl54Eb13KaahtjS = 'urls_url54Eb13Kaahtj_s',
  UrlsUrl55Lqnw53A3V3S = 'urls_url55Lqnw53A3V3_s',
  UrlsUrlA4Tm1Gd5Nb52S = 'urls_urlA4Tm1Gd5Nb52_s',
  UrlsUrlAbh12DbbhrttS = 'urls_urlAbh12Dbbhrtt_s',
  UrlsUrlAdhsdaccieeyS = 'urls_urlAdhsdaccieey_s',
  UrlsUrlAikwmmc5Uf2XS = 'urls_urlAikwmmc5Uf2X_s',
  UrlsUrlAjxblzgtavwlS = 'urls_urlAjxblzgtavwl_s',
  UrlsUrlAn4MagusqjefS = 'urls_urlAn4Magusqjef_s',
  UrlsUrlAo4Cz1Fwtq4VS = 'urls_urlAo4Cz1Fwtq4V_s',
  UrlsUrlAzpexlyerb3NS = 'urls_urlAzpexlyerb3N_s',
  UrlsUrlB1QzplmrrhizS = 'urls_urlB1Qzplmrrhiz_s',
  UrlsUrlB1Z2ZnjsedtrS = 'urls_urlB1Z2Znjsedtr_s',
  UrlsUrlB14MblffsutjS = 'urls_urlB14Mblffsutj_s',
  UrlsUrlBamamapsS = 'urls_urlBamamaps_s',
  UrlsUrlBblegacyS = 'urls_urlBblegacy_s',
  UrlsUrlBbxp5SxonbiaS = 'urls_urlBbxp5Sxonbia_s',
  UrlsUrlBcrdm2XqkdmbS = 'urls_urlBcrdm2Xqkdmb_s',
  UrlsUrlBethenewdaoS = 'urls_urlBethenewdao_s',
  UrlsUrlBjsmt2EsdzibS = 'urls_urlBjsmt2Esdzib_s',
  UrlsUrlBmhh3Zcw5XmrS = 'urls_urlBmhh3Zcw5Xmr_s',
  UrlsUrlBmvy1F4JyxpkS = 'urls_urlBmvy1F4Jyxpk_s',
  UrlsUrlBoevvh44PrqaS = 'urls_urlBoevvh44Prqa_s',
  UrlsUrlBsdkpibjyzkgS = 'urls_urlBsdkpibjyzkg_s',
  UrlsUrlBtchangedS = 'urls_urlBtchanged_s',
  UrlsUrlBtchangedhoS = 'urls_urlBtchangedho_s',
  UrlsUrlBtchangednoS = 'urls_urlBtchangedno_s',
  UrlsUrlBwnmqskbvs5CS = 'urls_urlBwnmqskbvs5C_s',
  UrlsUrlBwr1Upma2YjfS = 'urls_urlBwr1Upma2Yjf_s',
  UrlsUrlC3Jxagqsq4C3S = 'urls_urlC3Jxagqsq4C3_s',
  UrlsUrlCatalyst23S = 'urls_urlCatalyst23_s',
  UrlsUrlCdviq1LtflhfS = 'urls_urlCdviq1Ltflhf_s',
  UrlsUrlCgpvbclbywfgS = 'urls_urlCgpvbclbywfg_s',
  UrlsUrlChildalphadxS = 'urls_urlChildalphadx_s',
  UrlsUrlChildttrxS = 'urls_urlChildttrx_s',
  UrlsUrlCjxpo4YaulrlS = 'urls_urlCjxpo4Yaulrl_s',
  UrlsUrlCloserS = 'urls_urlCloser_s',
  UrlsUrlClubdaouniveS = 'urls_urlClubdaounive_s',
  UrlsUrlCpqveafwtbunS = 'urls_urlCpqveafwtbun_s',
  UrlsUrlCwiab3Vsqw5TS = 'urls_urlCwiab3Vsqw5T_s',
  UrlsUrlCy22K5T4N2TuS = 'urls_urlCy22K5T4N2Tu_s',
  UrlsUrlD4Kdbzvzgrt5S = 'urls_urlD4Kdbzvzgrt5_s',
  UrlsUrlDd3YmiavtdcyS = 'urls_urlDd3Ymiavtdcy_s',
  UrlsUrlDearwisearthS = 'urls_urlDearwisearth_s',
  UrlsUrlDemoeosdaoS = 'urls_urlDemoeosdao_s',
  UrlsUrlDemoxdaox2S = 'urls_urlDemoxdaox2_s',
  UrlsUrlDemoxdaoxS = 'urls_urlDemoxdaox_s',
  UrlsUrlDevatarswrldS = 'urls_urlDevatarswrld_s',
  UrlsUrlDhotellS = 'urls_urlDhotell_s',
  UrlsUrlDht5Wzq2KjykS = 'urls_urlDht5Wzq2Kjyk_s',
  UrlsUrlDjmtdxgjiorcS = 'urls_urlDjmtdxgjiorc_s',
  UrlsUrlDkpke5IdbkvdS = 'urls_urlDkpke5Idbkvd_s',
  UrlsUrlDl51QmvjsegoS = 'urls_urlDl51Qmvjsego_s',
  UrlsUrlDmp5Bw4GzxkrS = 'urls_urlDmp5Bw4Gzxkr_s',
  UrlsUrlDnsz1CbwxpapS = 'urls_urlDnsz1Cbwxpap_s',
  UrlsUrlDoqxuyw5CiemS = 'urls_urlDoqxuyw5Ciem_s',
  UrlsUrlDriuukputcgzS = 'urls_urlDriuukputcgz_s',
  UrlsUrlDtmiyxuodgkpS = 'urls_urlDtmiyxuodgkp_s',
  UrlsUrlDvqpp5SdtrdgS = 'urls_urlDvqpp5Sdtrdg_s',
  UrlsUrlDxyzf1Ukies3S = 'urls_urlDxyzf1Ukies3_s',
  UrlsUrlE1Esoh1KeajsS = 'urls_urlE1Esoh1Keajs_s',
  UrlsUrlEarthwisefutS = 'urls_urlEarthwisefut_s',
  UrlsUrlEdm3Mnsg1HnsS = 'urls_urlEdm3Mnsg1Hns_s',
  UrlsUrlEghlh3ZnzqwrS = 'urls_urlEghlh3Znzqwr_s',
  UrlsUrlEhgegumzynw3S = 'urls_urlEhgegumzynw3_s',
  UrlsUrlEk4Lpxh2Ma4SS = 'urls_urlEk4Lpxh2Ma4S_s',
  UrlsUrlEnn5C2Fkbs3WS = 'urls_urlEnn5C2Fkbs3W_s',
  UrlsUrlEoctlpr3Jd5IS = 'urls_urlEoctlpr3Jd5I_s',
  UrlsUrlEqi5RxrwzjbsS = 'urls_urlEqi5Rxrwzjbs_s',
  UrlsUrlEv4Hb5ObkagxS = 'urls_urlEv4Hb5Obkagx_s',
  UrlsUrlEwk4XoaqeiscS = 'urls_urlEwk4Xoaqeisc_s',
  UrlsUrlEz2Elj1Cje1ZS = 'urls_urlEz2Elj1Cje1Z_s',
  UrlsUrlFastdaoS = 'urls_urlFastdao_s',
  UrlsUrlFbbu5Diqmx5PS = 'urls_urlFbbu5Diqmx5P_s',
  UrlsUrlFc2Fxwh43X1BS = 'urls_urlFc2Fxwh43X1B_s',
  UrlsUrlFczw2Xsw5EatS = 'urls_urlFczw2Xsw5Eat_s',
  UrlsUrlFdd3LbrpwkvjS = 'urls_urlFdd3Lbrpwkvj_s',
  UrlsUrlFew2TxlhcmrgS = 'urls_urlFew2Txlhcmrg_s',
  UrlsUrlFincasagradaS = 'urls_urlFincasagrada_s',
  UrlsUrlFjkqwlfpui2US = 'urls_urlFjkqwlfpui2U_s',
  UrlsUrlFjvqqx2Ztp2CS = 'urls_urlFjvqqx2Ztp2C_s',
  UrlsUrlFkhvavzzorf1S = 'urls_urlFkhvavzzorf1_s',
  UrlsUrlFrontdaoS = 'urls_urlFrontdao_s',
  UrlsUrlFrwzlupynkxhS = 'urls_urlFrwzlupynkxh_s',
  UrlsUrlFzfqmy1Ahz1AS = 'urls_urlFzfqmy1Ahz1A_s',
  UrlsUrlG1Apwwd2TnvaS = 'urls_urlG1Apwwd2Tnva_s',
  UrlsUrlG1Plywuz5OgbS = 'urls_urlG1Plywuz5Ogb_s',
  UrlsUrlGa4PytexiwkwS = 'urls_urlGa4Pytexiwkw_s',
  UrlsUrlGaianetS = 'urls_urlGaianet_s',
  UrlsUrlGaiauniondheS = 'urls_urlGaiauniondhe_s',
  UrlsUrlGdgcrhbar3GnS = 'urls_urlGdgcrhbar3Gn_s',
  UrlsUrlGenesisventuS = 'urls_urlGenesisventu_s',
  UrlsUrlGiffj4YhsuoqS = 'urls_urlGiffj4Yhsuoq_s',
  UrlsUrlGkcxfa51YtmnS = 'urls_urlGkcxfa51Ytmn_s',
  UrlsUrlGpsngzpbx4IxS = 'urls_urlGpsngzpbx4Ix_s',
  UrlsUrlGreeninitfoS = 'urls_urlGreeninitfo_s',
  UrlsUrlGreenwoodS = 'urls_urlGreenwood_s',
  UrlsUrlGrwaymzqcxh4S = 'urls_urlGrwaymzqcxh4_s',
  UrlsUrlGvyzicu3Ctj1S = 'urls_urlGvyzicu3Ctj1_s',
  UrlsUrlH1Zrlvo24TkzS = 'urls_urlH1Zrlvo24Tkz_s',
  UrlsUrlHc3Kr2Twzk1ES = 'urls_urlHc3Kr2Twzk1E_s',
  UrlsUrlHibvjoibbfd2S = 'urls_urlHibvjoibbfd2_s',
  UrlsUrlHmntptjudozgS = 'urls_urlHmntptjudozg_s',
  UrlsUrlHolisticsystS = 'urls_urlHolisticsyst_s',
  UrlsUrlHqooypm5UkctS = 'urls_urlHqooypm5Ukct_s',
  UrlsUrlHrgufaizyp5JS = 'urls_urlHrgufaizyp5J_s',
  UrlsUrlHy1B1BwahvfoS = 'urls_urlHy1B1Bwahvfo_s',
  UrlsUrlHy4OjcxxjynnS = 'urls_urlHy4Ojcxxjynn_s',
  UrlsUrlHyphaS = 'urls_urlHypha_s',
  UrlsUrlHyphademoS = 'urls_urlHyphademo_s',
  UrlsUrlI4WrguhpfslrS = 'urls_urlI4Wrguhpfslr_s',
  UrlsUrlI5Nkntm5XnavS = 'urls_urlI5Nkntm5Xnav_s',
  UrlsUrlI31Ggvxj54JeS = 'urls_urlI31Ggvxj54Je_s',
  UrlsUrlIcinetS = 'urls_urlIcinet_s',
  UrlsUrlIdc3Uaupzw2IS = 'urls_urlIdc3Uaupzw2I_s',
  UrlsUrlIe3ThvphmxbrS = 'urls_urlIe3Thvphmxbr_s',
  UrlsUrlIgm5Ieu43IzxS = 'urls_urlIgm5Ieu43Izx_s',
  UrlsUrlIhy4W4Zrrmr4S = 'urls_urlIhy4W4Zrrmr4_s',
  UrlsUrlIkhhrizzdmktS = 'urls_urlIkhhrizzdmkt_s',
  UrlsUrlIm3Skdhoqrz5S = 'urls_urlIm3Skdhoqrz5_s',
  UrlsUrlImcxnrjr5Te4S = 'urls_urlImcxnrjr5Te4_s',
  UrlsUrlIntegrityS = 'urls_urlIntegrity_s',
  UrlsUrlIpbxmrsdrwsbS = 'urls_urlIpbxmrsdrwsb_s',
  UrlsUrlIunzuazm122MS = 'urls_urlIunzuazm122M_s',
  UrlsUrlJ5Hcurppvbc2S = 'urls_urlJ5Hcurppvbc2_s',
  UrlsUrlJ25Oi2B5J21QS = 'urls_urlJ25Oi2B5J21Q_s',
  UrlsUrlJdjqhjoyhnhyS = 'urls_urlJdjqhjoyhnhy_s',
  UrlsUrlJgp4Eyy4Ike4S = 'urls_urlJgp4Eyy4Ike4_s',
  UrlsUrlJhfybqi5JcdvS = 'urls_urlJhfybqi5Jcdv_s',
  UrlsUrlJii2Elpvl2AiS = 'urls_urlJii2Elpvl2Ai_s',
  UrlsUrlJobth5UqnharS = 'urls_urlJobth5Uqnhar_s',
  UrlsUrlJoznzd5Fskk2S = 'urls_urlJoznzd5Fskk2_s',
  UrlsUrlJupiterS = 'urls_urlJupiter_s',
  UrlsUrlJwok2YcpzgouS = 'urls_urlJwok2Ycpzgou_s',
  UrlsUrlJzoepolpnudoS = 'urls_urlJzoepolpnudo_s',
  UrlsUrlK5Fzn5ZtdchzS = 'urls_urlK5Fzn5Ztdchz_s',
  UrlsUrlK5YhstzkcbrkS = 'urls_urlK5Yhstzkcbrk_s',
  UrlsUrlKd2U1Nqd5ZpmS = 'urls_urlKd2U1Nqd5Zpm_s',
  UrlsUrlKedxcfee4PbkS = 'urls_urlKedxcfee4Pbk_s',
  UrlsUrlKefskfhz3HktS = 'urls_urlKefskfhz3Hkt_s',
  UrlsUrlKiajiljlp4FzS = 'urls_urlKiajiljlp4Fz_s',
  UrlsUrlKitchenS = 'urls_urlKitchen_s',
  UrlsUrlKsjjde4Hbn2US = 'urls_urlKsjjde4Hbn2U_s',
  UrlsUrlKuladaoS = 'urls_urlKuladao_s',
  UrlsUrlKv2EibsrpcafS = 'urls_urlKv2Eibsrpcaf_s',
  UrlsUrlKvqzvpqle2OiS = 'urls_urlKvqzvpqle2Oi_s',
  UrlsUrlL4Hlmodr2Ux2S = 'urls_urlL4Hlmodr2Ux2_s',
  UrlsUrlL54Gm5HzawwgS = 'urls_urlL54Gm5Hzawwg_s',
  UrlsUrlLalagardensS = 'urls_urlLalagardens_s',
  UrlsUrlLgzydegefd2OS = 'urls_urlLgzydegefd2O_s',
  UrlsUrlLightleadersS = 'urls_urlLightleaders_s',
  UrlsUrlLiminalvillS = 'urls_urlLiminalvill_s',
  UrlsUrlLkhwazi4Ggp3S = 'urls_urlLkhwazi4Ggp3_s',
  UrlsUrlLn3Vzjj252HdS = 'urls_urlLn3Vzjj252Hd_s',
  UrlsUrlLndfupfa2H5DS = 'urls_urlLndfupfa2H5D_s',
  UrlsUrlLnfd5Gnly5UiS = 'urls_urlLnfd5Gnly5Ui_s',
  UrlsUrlLnxbx3PixmbfS = 'urls_urlLnxbx3Pixmbf_s',
  UrlsUrlM4Hk2S2Vxs1FS = 'urls_urlM4Hk2S2Vxs1F_s',
  UrlsUrlM53FbwxxgnrhS = 'urls_urlM53Fbwxxgnrh_s',
  UrlsUrlMbaajxm41HfaS = 'urls_urlMbaajxm41Hfa_s',
  UrlsUrlMeczomzsoiuzS = 'urls_urlMeczomzsoiuz_s',
  UrlsUrlMf33Nwhrc2PiS = 'urls_urlMf33Nwhrc2Pi_s',
  UrlsUrlMfdx2SjxjbpfS = 'urls_urlMfdx2Sjxjbpf_s',
  UrlsUrlMjsie3ZvqqrmS = 'urls_urlMjsie3Zvqqrm_s',
  UrlsUrlMksii3R3IfuzS = 'urls_urlMksii3R3Ifuz_s',
  UrlsUrlMomdhoS = 'urls_urlMomdho_s',
  UrlsUrlMoq3Io4GwguvS = 'urls_urlMoq3Io4Gwguv_s',
  UrlsUrlMotlops3FmcyS = 'urls_urlMotlops3Fmcy_s',
  UrlsUrlMq32Dxpku1YwS = 'urls_urlMq32Dxpku1Yw_s',
  UrlsUrlMwm5Qizc3GmiS = 'urls_urlMwm5Qizc3Gmi_s',
  UrlsUrlN1M4Hyjb3PrqS = 'urls_urlN1M4Hyjb3Prq_s',
  UrlsUrlN2Qb4Oq5CemeS = 'urls_urlN2Qb4Oq5Ceme_s',
  UrlsUrlN11Wig1Pds3WS = 'urls_urlN11Wig1Pds3W_s',
  UrlsUrlN32WvxvkqbkbS = 'urls_urlN32Wvxvkqbkb_s',
  UrlsUrlNa1Sonzbvtk5S = 'urls_urlNa1Sonzbvtk5_s',
  UrlsUrlNcv3H5Dm45QgS = 'urls_urlNcv3H5Dm45Qg_s',
  UrlsUrlNduy5BttdrqqS = 'urls_urlNduy5Bttdrqq_s',
  UrlsUrlNestrS = 'urls_urlNestr_s',
  UrlsUrlNewsouthafrS = 'urls_urlNewsouthafr_s',
  UrlsUrlNextgenvillS = 'urls_urlNextgenvill_s',
  UrlsUrlNivtbyuhk3RdS = 'urls_urlNivtbyuhk3Rd_s',
  UrlsUrlNkchcudxo425S = 'urls_urlNkchcudxo425_s',
  UrlsUrlNonnhrtoku1ZS = 'urls_urlNonnhrtoku1Z_s',
  UrlsUrlNoqcp5Afx5E5S = 'urls_urlNoqcp5Afx5E5_s',
  UrlsUrlO3Tzzbjaraj3S = 'urls_urlO3Tzzbjaraj3_s',
  UrlsUrlOctuxbu5KdplS = 'urls_urlOctuxbu5Kdpl_s',
  UrlsUrlOkkhmgkejuupS = 'urls_urlOkkhmgkejuup_s',
  UrlsUrlOpdv42Sk3YunS = 'urls_urlOpdv42Sk3Yun_s',
  UrlsUrlOqeavbgf5H2HS = 'urls_urlOqeavbgf5H2H_s',
  UrlsUrlOqmt53D3NijfS = 'urls_urlOqmt53D3Nijf_s',
  UrlsUrlOriginwisdomS = 'urls_urlOriginwisdom_s',
  UrlsUrlOsthmvtcvqk2S = 'urls_urlOsthmvtcvqk2_s',
  UrlsUrlOsylrx3Zyo3IS = 'urls_urlOsylrx3Zyo3I_s',
  UrlsUrlOvfykbv5N252S = 'urls_urlOvfykbv5N252_s',
  UrlsUrlOzxvgkytgfm5S = 'urls_urlOzxvgkytgfm5_s',
  UrlsUrlP3Xqs1Vy53J4S = 'urls_urlP3Xqs1Vy53J4_s',
  UrlsUrlPachamamarisS = 'urls_urlPachamamaris_s',
  UrlsUrlPcwoiacrdzmlS = 'urls_urlPcwoiacrdzml_s',
  UrlsUrlPgkuvuyd5TkfS = 'urls_urlPgkuvuyd5Tkf_s',
  UrlsUrlPkpcaltfb2AnS = 'urls_urlPkpcaltfb2An_s',
  UrlsUrlPlanetcareS = 'urls_urlPlanetcare_s',
  UrlsUrlPtogan1Cqjp2S = 'urls_urlPtogan1Cqjp2_s',
  UrlsUrlPuwpla2N5Z4AS = 'urls_urlPuwpla2N5Z4A_s',
  UrlsUrlPy5X2CaqgvwrS = 'urls_urlPy5X2Caqgvwr_s',
  UrlsUrlPyzxw1Bos3EsS = 'urls_urlPyzxw1Bos3Es_s',
  UrlsUrlQ4Hexzhmslt3S = 'urls_urlQ4Hexzhmslt3_s',
  UrlsUrlQbcbgv4GpczwS = 'urls_urlQbcbgv4Gpczw_s',
  UrlsUrlQhftw3YknfusS = 'urls_urlQhftw3Yknfus_s',
  UrlsUrlQmakgqzdtki4S = 'urls_urlQmakgqzdtki4_s',
  UrlsUrlQonpkk3LyivxS = 'urls_urlQonpkk3Lyivx_s',
  UrlsUrlQqwe2UtvgisrS = 'urls_urlQqwe2Utvgisr_s',
  UrlsUrlQr2PrxbizjbvS = 'urls_urlQr2Prxbizjbv_s',
  UrlsUrlQr5JcgndgadiS = 'urls_urlQr5Jcgndgadi_s',
  UrlsUrlQs23P4HomwafS = 'urls_urlQs23P4Homwaf_s',
  UrlsUrlQsabrv1ZpcyuS = 'urls_urlQsabrv1Zpcyu_s',
  UrlsUrlR2Ttskh142KvS = 'urls_urlR2Ttskh142Kv_s',
  UrlsUrlR3Dtwhyei41KS = 'urls_urlR3Dtwhyei41K_s',
  UrlsUrlR24Dca2VwnnmS = 'urls_urlR24Dca2Vwnnm_s',
  UrlsUrlR31XdmdluztnS = 'urls_urlR31Xdmdluztn_s',
  UrlsUrlRegencivicsS = 'urls_urlRegencivics_s',
  UrlsUrlRegeneratexS = 'urls_urlRegeneratex_s',
  UrlsUrlRegenlivingS = 'urls_urlRegenliving_s',
  UrlsUrlRipplesdaoS = 'urls_urlRipplesdao_s',
  UrlsUrlRiverS = 'urls_urlRiver_s',
  UrlsUrlRjjzxayy4C5IS = 'urls_urlRjjzxayy4C5I_s',
  UrlsUrlRjlaa4Xyt2FeS = 'urls_urlRjlaa4Xyt2Fe_s',
  UrlsUrlRjnr5Ufv3HizS = 'urls_urlRjnr5Ufv3Hiz_s',
  UrlsUrlRlbajxwjl1UeS = 'urls_urlRlbajxwjl1Ue_s',
  UrlsUrlRrt1IycndxxfS = 'urls_urlRrt1Iycndxxf_s',
  UrlsUrlRtq42LbetbxlS = 'urls_urlRtq42Lbetbxl_s',
  UrlsUrlRtrmcn3Avkf1S = 'urls_urlRtrmcn3Avkf1_s',
  UrlsUrlRtudvevl2CjtS = 'urls_urlRtudvevl2Cjt_s',
  UrlsUrlRysnpti3BdvgS = 'urls_urlRysnpti3Bdvg_s',
  UrlsUrlS2Zwpt2RqxhyS = 'urls_urlS2Zwpt2Rqxhy_s',
  UrlsUrlSaltcrossgarS = 'urls_urlSaltcrossgar_s',
  UrlsUrlSamaratrustS = 'urls_urlSamaratrust_s',
  UrlsUrlSctawkeupsccS = 'urls_urlSctawkeupscc_s',
  UrlsUrlSeedscommonsS = 'urls_urlSeedscommons_s',
  UrlsUrlShepherddaoS = 'urls_urlShepherddao_s',
  UrlsUrlShkwh1Iynyh4S = 'urls_urlShkwh1Iynyh4_s',
  UrlsUrlSi2Jvmzemt31S = 'urls_urlSi2Jvmzemt31_s',
  UrlsUrlSilxhs5C5NarS = 'urls_urlSilxhs5C5Nar_s',
  UrlsUrlSk1OjvjucrfqS = 'urls_urlSk1Ojvjucrfq_s',
  UrlsUrlSmwgavmt5RytS = 'urls_urlSmwgavmt5Ryt_s',
  UrlsUrlSoil1OrwrmpsS = 'urls_urlSoil1Orwrmps_s',
  UrlsUrlSotzumhlphtxS = 'urls_urlSotzumhlphtx_s',
  UrlsUrlSrmiubqdc4RkS = 'urls_urlSrmiubqdc4Rk_s',
  UrlsUrlSs53Hoim4Gt3S = 'urls_urlSs53Hoim4Gt3_s',
  UrlsUrlSxjul33Jf1BvS = 'urls_urlSxjul33Jf1Bv_s',
  UrlsUrlT2Oqxmtjpk3XS = 'urls_urlT2Oqxmtjpk3X_s',
  UrlsUrlT4Ygmfu4OwipS = 'urls_urlT4Ygmfu4Owip_s',
  UrlsUrlTc3Uweyd2A2CS = 'urls_urlTc3Uweyd2A2C_s',
  UrlsUrlTcpswkf2YfsfS = 'urls_urlTcpswkf2Yfsf_s',
  UrlsUrlTcwrv1AqtzxeS = 'urls_urlTcwrv1Aqtzxe_s',
  UrlsUrlTestdaoS = 'urls_urlTestdao_s',
  UrlsUrlTestnewdaocacS = 'urls_urlTestnewdaocac_s',
  UrlsUrlThebestxdapS = 'urls_urlThebestxdap_s',
  UrlsUrlThedokcyip3OS = 'urls_urlThedokcyip3O_s',
  UrlsUrlTheflowS = 'urls_urlTheflow_s',
  UrlsUrlThftmv3D42KbS = 'urls_urlThftmv3D42Kb_s',
  UrlsUrlThinkplaceS = 'urls_urlThinkplace_s',
  UrlsUrlTighnzy4Pgu3S = 'urls_urlTighnzy4Pgu3_s',
  UrlsUrlTqmby2EadaiuS = 'urls_urlTqmby2Eadaiu_s',
  UrlsUrlTqsre5WhjjbyS = 'urls_urlTqsre5Whjjby_s',
  UrlsUrlTrshury4SoliS = 'urls_urlTrshury4Soli_s',
  UrlsUrlTss3WqdjlalpS = 'urls_urlTss3Wqdjlalp_s',
  UrlsUrlU2T3KwgdmrbeS = 'urls_urlU2T3Kwgdmrbe_s',
  UrlsUrlU4Yfk1S4Cv3HS = 'urls_urlU4Yfk1S4Cv3H_s',
  UrlsUrlUbuntuS = 'urls_urlUbuntu_s',
  UrlsUrlUgcwrgniuwisS = 'urls_urlUgcwrgniuwis_s',
  UrlsUrlUij3UygyzyowS = 'urls_urlUij3Uygyzyow_s',
  UrlsUrlUlpyjkthcu2CS = 'urls_urlUlpyjkthcu2C_s',
  UrlsUrlUmac2Lsxcc14S = 'urls_urlUmac2Lsxcc14_s',
  UrlsUrlUnitedplanetS = 'urls_urlUnitedplanet_s',
  UrlsUrlUniversalisS = 'urls_urlUniversalis_s',
  UrlsUrlUniverselandS = 'urls_urlUniverseland_s',
  UrlsUrlUnkailabsS = 'urls_urlUnkailabs_s',
  UrlsUrlUpvotetest1S = 'urls_urlUpvotetest1_s',
  UrlsUrlUtanck3SxazeS = 'urls_urlUtanck3Sxaze_s',
  UrlsUrlUtyeq4Dqk3IuS = 'urls_urlUtyeq4Dqk3Iu_s',
  UrlsUrlUwkshkgwuksxS = 'urls_urlUwkshkgwuksx_s',
  UrlsUrlUwmng5Zgcoa2S = 'urls_urlUwmng5Zgcoa2_s',
  UrlsUrlUwztsw1L3Na5S = 'urls_urlUwztsw1L3Na5_s',
  UrlsUrlUzihb11Q5PpiS = 'urls_urlUzihb11Q5Ppi_s',
  UrlsUrlV2U42HujkzzkS = 'urls_urlV2U42Hujkzzk_s',
  UrlsUrlVf3Rsnpdqx1FS = 'urls_urlVf3Rsnpdqx1F_s',
  UrlsUrlVflqjbatmmf1S = 'urls_urlVflqjbatmmf1_s',
  UrlsUrlVg1Lob4OakdzS = 'urls_urlVg1Lob4Oakdz_s',
  UrlsUrlVgryuxp1Cyt4S = 'urls_urlVgryuxp1Cyt4_s',
  UrlsUrlVh1ImaheqeqyS = 'urls_urlVh1Imaheqeqy_s',
  UrlsUrlVk2P3R3ZpbquS = 'urls_urlVk2P3R3Zpbqu_s',
  UrlsUrlVnyenpufyes2S = 'urls_urlVnyenpufyes2_s',
  UrlsUrlVo3N43V4KhhiS = 'urls_urlVo3N43V4Khhi_s',
  UrlsUrlVokaoj1T5QsrS = 'urls_urlVokaoj1T5Qsr_s',
  UrlsUrlVovv2TengevlS = 'urls_urlVovv2Tengevl_s',
  UrlsUrlVqloh1DpeclvS = 'urls_urlVqloh1Dpeclv_s',
  UrlsUrlVqsgv5Mheq1ZS = 'urls_urlVqsgv5Mheq1Z_s',
  UrlsUrlVse4A2Ttg3OnS = 'urls_urlVse4A2Ttg3On_s',
  UrlsUrlVsmoku34PbnjS = 'urls_urlVsmoku34Pbnj_s',
  UrlsUrlVx35Wgozl15SS = 'urls_urlVx35Wgozl15S_s',
  UrlsUrlWbh1V54UekjyS = 'urls_urlWbh1V54Uekjy_s',
  UrlsUrlWbo53AyfygbhS = 'urls_urlWbo53Ayfygbh_s',
  UrlsUrlWdxuocdyahafS = 'urls_urlWdxuocdyahaf_s',
  UrlsUrlWekqmvasjcqbS = 'urls_urlWekqmvasjcqb_s',
  UrlsUrlWeudzvh3Hd2QS = 'urls_urlWeudzvh3Hd2Q_s',
  UrlsUrlWf2Irhvtu5H5S = 'urls_urlWf2Irhvtu5H5_s',
  UrlsUrlWfzlx3551PggS = 'urls_urlWfzlx3551Pgg_s',
  UrlsUrlWgvxprpxfngoS = 'urls_urlWgvxprpxfngo_s',
  UrlsUrlWhnelpre1XnzS = 'urls_urlWhnelpre1Xnz_s',
  UrlsUrlWildtripsS = 'urls_urlWildtrips_s',
  UrlsUrlWrongdaoS = 'urls_urlWrongdao_s',
  UrlsUrlWtr21OwdodwwS = 'urls_urlWtr21Owdodww_s',
  UrlsUrlWuip5Bx23244S = 'urls_urlWuip5Bx23244_s',
  UrlsUrlWuknmlynj5QbS = 'urls_urlWuknmlynj5Qb_s',
  UrlsUrlWuzjmdodtrfnS = 'urls_urlWuzjmdodtrfn_s',
  UrlsUrlX5Gpg2Kk14RpS = 'urls_urlX5Gpg2Kk14Rp_s',
  UrlsUrlXc1Mpm4R1V3QS = 'urls_urlXc1Mpm4R1V3Q_s',
  UrlsUrlXecj4Cukr1PrS = 'urls_urlXecj4Cukr1Pr_s',
  UrlsUrlXfvd2PyvelymS = 'urls_urlXfvd2Pyvelym_s',
  UrlsUrlXmiereyl52UmS = 'urls_urlXmiereyl52Um_s',
  UrlsUrlXpznyeq1UjcwS = 'urls_urlXpznyeq1Ujcw_s',
  UrlsUrlXrfuttwmsapmS = 'urls_urlXrfuttwmsapm_s',
  UrlsUrlXx4Pyzevrrz3S = 'urls_urlXx4Pyzevrrz3_s',
  UrlsUrlYimw2JwzpfqxS = 'urls_urlYimw2Jwzpfqx_s',
  UrlsUrlYjtij3OxqizoS = 'urls_urlYjtij3Oxqizo_s',
  UrlsUrlYk24Za5BqjeuS = 'urls_urlYk24Za5Bqjeu_s',
  UrlsUrlYlxmkxtb4M4JS = 'urls_urlYlxmkxtb4M4J_s',
  UrlsUrlYoglgtvd2TtfS = 'urls_urlYoglgtvd2Ttf_s',
  UrlsUrlYp13Kd3FzhvmS = 'urls_urlYp13Kd3Fzhvm_s',
  UrlsUrlYtibux4PydniS = 'urls_urlYtibux4Pydni_s',
  UrlsUrlYtowqoe4Jjg2S = 'urls_urlYtowqoe4Jjg2_s',
  UrlsUrlYveif24SwpxoS = 'urls_urlYveif24Swpxo_s',
  UrlsUrlYxypcwoh1PmnS = 'urls_urlYxypcwoh1Pmn_s',
  UrlsUrlZgbrnuisnb3HS = 'urls_urlZgbrnuisnb3H_s',
  UrlsUrlZgepdsxircadS = 'urls_urlZgepdsxircad_s',
  UrlsUrlZhuu21CzfaerS = 'urls_urlZhuu21Czfaer_s',
  UrlsUrlZl5FqkhoztamS = 'urls_urlZl5Fqkhoztam_s',
  UrlsUrlZu5Xtqjzo2SqS = 'urls_urlZu5Xtqjzo2Sq_s',
  UrlsUrlZvstjcdyjcgyS = 'urls_urlZvstjcdyjcgy_s',
  UrlsUrlZzcjstecud2TS = 'urls_urlZzcjstecud2T_s',
  UrlsUrlS = 'urls_url_s'
}

export type SettingsPatch = {
  admins_account_n?: InputMaybe<Scalars['String']['input']>;
  admins_updatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ecosystem_domain_s?: InputMaybe<Scalars['String']['input']>;
  ecosystem_logo_s?: InputMaybe<Scalars['String']['input']>;
  ecosystem_name_s?: InputMaybe<Scalars['String']['input']>;
  ecosystem_purpose_s?: InputMaybe<Scalars['String']['input']>;
  onboarders_account_n?: InputMaybe<Scalars['String']['input']>;
  onboarders_updatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  otherSettings_logo_s?: InputMaybe<Scalars['String']['input']>;
  settings_account_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_addAdminsEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_claimEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_commentsContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_commentsContract_s?: InputMaybe<Scalars['String']['input']>;
  settings_communityVotingAlignmentPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingDurationSec_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingMethod_s?: InputMaybe<Scalars['String']['input']>;
  settings_communityVotingQuorumPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityotingQuorumPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityotingQuorumPercent_s?: InputMaybe<Scalars['String']['input']>;
  settings_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  settings_contractsVersion_s?: InputMaybe<Scalars['String']['input']>;
  settings_daoDescription_s?: InputMaybe<Scalars['String']['input']>;
  settings_daoName_n?: InputMaybe<Scalars['String']['input']>;
  settings_daoSuper_s?: InputMaybe<Scalars['String']['input']>;
  settings_daoTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_daoUrl_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardOverlayColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardOverlayOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardPatternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardPatternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_discordURL_s?: InputMaybe<Scalars['String']['input']>;
  settings_discordUrl_s?: InputMaybe<Scalars['String']['input']>;
  settings_documentationButtonText_s?: InputMaybe<Scalars['String']['input']>;
  settings_documentationURL_s?: InputMaybe<Scalars['String']['input']>;
  settings_documentationUrl_s?: InputMaybe<Scalars['String']['input']>;
  settings_ecosystemChildPriceStaked_a?: InputMaybe<Scalars['String']['input']>;
  settings_ecosystemChildPrice_a?: InputMaybe<Scalars['String']['input']>;
  settings_ecosystemPriceStaked_a?: InputMaybe<Scalars['String']['input']>;
  settings_ecosystemPrice_a?: InputMaybe<Scalars['String']['input']>;
  settings_exploreBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_exploreParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_exploreTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_extendedLogo_s?: InputMaybe<Scalars['String']['input']>;
  settings_governanceTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_headerPattern_s?: InputMaybe<Scalars['String']['input']>;
  settings_homepageHeader_s?: InputMaybe<Scalars['String']['input']>;
  settings_homepageSubtitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_husdTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_hvoiceTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_hyphaCosaleContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_hyphaDeferralFactorX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_hyphaTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_hyphaUsdValue_a?: InputMaybe<Scalars['String']['input']>;
  settings_isHypha_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_logo_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersApplicationEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_membersBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersHeader_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersOverlayColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersOverlayOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersPatternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersPatternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersSubtitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_msigApprovalAmount_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_multisigEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_myOtherOtherSetting_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_myOtherSetting_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_mySetting_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_name_s?: InputMaybe<Scalars['String']['input']>;
  settings_nativeToken_a?: InputMaybe<Scalars['String']['input']>;
  settings_nextCommentSection_n?: InputMaybe<Scalars['String']['input']>;
  settings_nextProposalNameInt_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_nextScheduleId_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_nextScheduledId_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_onboarderAccount_n?: InputMaybe<Scalars['String']['input']>;
  settings_organisationBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationOverlayColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationOverlayOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationPatternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationPatternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_organizationHeader_s?: InputMaybe<Scalars['String']['input']>;
  settings_organizationSubtitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternBase64_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternOpacity_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_patternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_pattern_s?: InputMaybe<Scalars['String']['input']>;
  settings_paused_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_pegTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_pegTokenName_s?: InputMaybe<Scalars['String']['input']>;
  settings_pegToken_a?: InputMaybe<Scalars['String']['input']>;
  settings_periodDurationSec_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_periodDurationSec_s?: InputMaybe<Scalars['String']['input']>;
  settings_primaryColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsCreationEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_proposalsHeader_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsOverlayColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsOverlayOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsPatternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsPatternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsSubtitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_publisherContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_redemptionsEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_removableBannersEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_rewardToPegRatio_a?: InputMaybe<Scalars['String']['input']>;
  settings_rewardTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_rewardTokenMaxSupply_a?: InputMaybe<Scalars['String']['input']>;
  settings_rewardTokenName_s?: InputMaybe<Scalars['String']['input']>;
  settings_rewardToken_a?: InputMaybe<Scalars['String']['input']>;
  settings_rootNode_s?: InputMaybe<Scalars['String']['input']>;
  settings_saleHyphaUsdValue_a?: InputMaybe<Scalars['String']['input']>;
  settings_secondaryColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_seedsDeferralFactorX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_seedsEscrowContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_seedsTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_settingsPatternBase64S_s?: InputMaybe<Scalars['String']['input']>;
  settings_settingsVotingAlignmentX100I_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_settingsVotingQuorumX100I_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_socialChat_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashOverlayColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashOverlayOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashPatternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashPatternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_testSet_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_testSetting_a?: InputMaybe<Scalars['String']['input']>;
  settings_testSetting_s?: InputMaybe<Scalars['String']['input']>;
  settings_textColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_threshold_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_title_s?: InputMaybe<Scalars['String']['input']>;
  settings_treasuryAccount_n?: InputMaybe<Scalars['String']['input']>;
  settings_treasuryContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_treasuryTokenMultiplier_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_updatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  settings_upvoteCheifDelegateCount_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteCheifDelegateDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteChiefDelegateCount_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteHeadDelegateDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteHeadDelegateRound_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteRounds_s?: InputMaybe<Scalars['String']['input']>;
  settings_upvoteStartDateTime_s?: InputMaybe<Scalars['String']['input']>;
  settings_upvoteStartDate_s?: InputMaybe<Scalars['String']['input']>;
  settings_upvoteStartTime_s?: InputMaybe<Scalars['String']['input']>;
  settings_url_s?: InputMaybe<Scalars['String']['input']>;
  settings_usesSeeds_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_utilityTokenMultiplier_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_vOTINGDURATIONSEC_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_voiceTokenDecayPerPeriodX10M_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_voiceTokenDecayPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_voiceTokenDecayPeriod_s?: InputMaybe<Scalars['String']['input']>;
  settings_voiceTokenMultiplier_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_voiceToken_a?: InputMaybe<Scalars['String']['input']>;
  settings_votingAlignmentPercentX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingAlignmentPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingAlignmentPercent_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingAlignmentX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingAlignmentX100_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingDurationSec_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingDurationSec_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingDurationSeconds_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingMethod_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingQuorumPercentX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingQuorumPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingQuorumPercent_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingQuorumX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingQuorumX100_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  tests_testingsettings_i?: InputMaybe<Scalars['Int64']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  urls_url1Bk1Yxby2Tie_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1Fmizk1Zuyi2_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1Fvbfectvsxc_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1Mmp4Pfmrerr_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1N5Kz3Gemseg_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1Ovembm4Jczo_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1Qfetejflafl_s?: InputMaybe<Scalars['String']['input']>;
  urls_url2Q3Pz2Hn43Gq_s?: InputMaybe<Scalars['String']['input']>;
  urls_url2T3Aybfvqorw_s?: InputMaybe<Scalars['String']['input']>;
  urls_url2T4Fdni1Styb_s?: InputMaybe<Scalars['String']['input']>;
  urls_url2Xegtmj2Jdsf_s?: InputMaybe<Scalars['String']['input']>;
  urls_url2Yfg3Nvby1Zl_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3Cen4Uzdy2Es_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3G2Adxfbf4Yt_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3Lk4Nzggpubi_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3O3W1Ggvkkax_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3Qgrntosyxiz_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3Vf2X13Lcepd_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4D2V4Xmgbir2_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Ehml2Vqzp5C_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Ezfoukyd4K2_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Fewyw1Qtrek_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Jaepm23Od5W_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4K4Gcongezpv_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Qkkymwtssjj_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4U5F1Ppy4Xan_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Urhwj1Paeo5_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Uvjpanvhvtl_s?: InputMaybe<Scalars['String']['input']>;
  urls_url5Kkb3Tpwjiho_s?: InputMaybe<Scalars['String']['input']>;
  urls_url5Lsfqinc2Zyb_s?: InputMaybe<Scalars['String']['input']>;
  urls_url5Qakaspwwetv_s?: InputMaybe<Scalars['String']['input']>;
  urls_url5Vn4Ybbadgjj_s?: InputMaybe<Scalars['String']['input']>;
  urls_url5Z4Qztkwnbkk_s?: InputMaybe<Scalars['String']['input']>;
  urls_url15Mgh14Vkqke_s?: InputMaybe<Scalars['String']['input']>;
  urls_url22Vnqfsm3Q3S_s?: InputMaybe<Scalars['String']['input']>;
  urls_url25Dkrzm3Pr5R_s?: InputMaybe<Scalars['String']['input']>;
  urls_url32Xgw4Lmfaxh_s?: InputMaybe<Scalars['String']['input']>;
  urls_url34Vxjg3Npjih_s?: InputMaybe<Scalars['String']['input']>;
  urls_url35U3Jkcydkur_s?: InputMaybe<Scalars['String']['input']>;
  urls_url54Eb13Kaahtj_s?: InputMaybe<Scalars['String']['input']>;
  urls_url55Lqnw53A3V3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlA4Tm1Gd5Nb52_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAbh12Dbbhrtt_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAdhsdaccieey_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAikwmmc5Uf2X_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAjxblzgtavwl_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAn4Magusqjef_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAo4Cz1Fwtq4V_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAzpexlyerb3N_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlB1Qzplmrrhiz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlB1Z2Znjsedtr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlB14Mblffsutj_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBamamaps_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBblegacy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBbxp5Sxonbia_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBcrdm2Xqkdmb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBethenewdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBjsmt2Esdzib_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBmhh3Zcw5Xmr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBmvy1F4Jyxpk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBoevvh44Prqa_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBsdkpibjyzkg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBtchanged_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBtchangedho_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBtchangedno_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBwnmqskbvs5C_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBwr1Upma2Yjf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlC3Jxagqsq4C3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCatalyst23_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCdviq1Ltflhf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCgpvbclbywfg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlChildalphadx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlChildttrx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCjxpo4Yaulrl_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCloser_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlClubdaounive_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCpqveafwtbun_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCwiab3Vsqw5T_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCy22K5T4N2Tu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlD4Kdbzvzgrt5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDd3Ymiavtdcy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDearwisearth_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDemoeosdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDemoxdaox2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDemoxdaox_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDevatarswrld_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDhotell_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDht5Wzq2Kjyk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDjmtdxgjiorc_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDkpke5Idbkvd_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDl51Qmvjsego_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDmp5Bw4Gzxkr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDnsz1Cbwxpap_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDoqxuyw5Ciem_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDriuukputcgz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDtmiyxuodgkp_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDvqpp5Sdtrdg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDxyzf1Ukies3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlE1Esoh1Keajs_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEarthwisefut_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEdm3Mnsg1Hns_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEghlh3Znzqwr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEhgegumzynw3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEk4Lpxh2Ma4S_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEnn5C2Fkbs3W_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEoctlpr3Jd5I_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEqi5Rxrwzjbs_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEv4Hb5Obkagx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEwk4Xoaqeisc_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEz2Elj1Cje1Z_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFastdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFbbu5Diqmx5P_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFc2Fxwh43X1B_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFczw2Xsw5Eat_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFdd3Lbrpwkvj_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFew2Txlhcmrg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFincasagrada_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFjkqwlfpui2U_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFjvqqx2Ztp2C_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFkhvavzzorf1_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFrontdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFrwzlupynkxh_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFzfqmy1Ahz1A_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlG1Apwwd2Tnva_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlG1Plywuz5Ogb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGa4Pytexiwkw_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGaianet_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGaiauniondhe_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGdgcrhbar3Gn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGenesisventu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGiffj4Yhsuoq_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGkcxfa51Ytmn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGpsngzpbx4Ix_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGreeninitfo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGreenwood_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGrwaymzqcxh4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGvyzicu3Ctj1_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlH1Zrlvo24Tkz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHc3Kr2Twzk1E_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHibvjoibbfd2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHmntptjudozg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHolisticsyst_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHqooypm5Ukct_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHrgufaizyp5J_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHy1B1Bwahvfo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHy4Ojcxxjynn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHypha_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHyphademo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlI4Wrguhpfslr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlI5Nkntm5Xnav_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlI31Ggvxj54Je_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIcinet_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIdc3Uaupzw2I_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIe3Thvphmxbr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIgm5Ieu43Izx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIhy4W4Zrrmr4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIkhhrizzdmkt_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIm3Skdhoqrz5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlImcxnrjr5Te4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIntegrity_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIpbxmrsdrwsb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIunzuazm122M_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJ5Hcurppvbc2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJ25Oi2B5J21Q_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJdjqhjoyhnhy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJgp4Eyy4Ike4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJhfybqi5Jcdv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJii2Elpvl2Ai_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJobth5Uqnhar_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJoznzd5Fskk2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJupiter_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJwok2Ycpzgou_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJzoepolpnudo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlK5Fzn5Ztdchz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlK5Yhstzkcbrk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKd2U1Nqd5Zpm_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKedxcfee4Pbk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKefskfhz3Hkt_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKiajiljlp4Fz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKitchen_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKsjjde4Hbn2U_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKuladao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKv2Eibsrpcaf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKvqzvpqle2Oi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlL4Hlmodr2Ux2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlL54Gm5Hzawwg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLalagardens_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLgzydegefd2O_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLightleaders_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLiminalvill_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLkhwazi4Ggp3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLn3Vzjj252Hd_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLndfupfa2H5D_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLnfd5Gnly5Ui_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLnxbx3Pixmbf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlM4Hk2S2Vxs1F_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlM53Fbwxxgnrh_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMbaajxm41Hfa_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMeczomzsoiuz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMf33Nwhrc2Pi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMfdx2Sjxjbpf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMjsie3Zvqqrm_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMksii3R3Ifuz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMomdho_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMoq3Io4Gwguv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMotlops3Fmcy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMq32Dxpku1Yw_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMwm5Qizc3Gmi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlN1M4Hyjb3Prq_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlN2Qb4Oq5Ceme_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlN11Wig1Pds3W_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlN32Wvxvkqbkb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNa1Sonzbvtk5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNcv3H5Dm45Qg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNduy5Bttdrqq_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNestr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNewsouthafr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNextgenvill_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNivtbyuhk3Rd_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNkchcudxo425_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNonnhrtoku1Z_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNoqcp5Afx5E5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlO3Tzzbjaraj3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOctuxbu5Kdpl_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOkkhmgkejuup_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOpdv42Sk3Yun_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOqeavbgf5H2H_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOqmt53D3Nijf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOriginwisdom_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOsthmvtcvqk2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOsylrx3Zyo3I_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOvfykbv5N252_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOzxvgkytgfm5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlP3Xqs1Vy53J4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPachamamaris_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPcwoiacrdzml_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPgkuvuyd5Tkf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPkpcaltfb2An_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPlanetcare_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPtogan1Cqjp2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPuwpla2N5Z4A_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPy5X2Caqgvwr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPyzxw1Bos3Es_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQ4Hexzhmslt3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQbcbgv4Gpczw_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQhftw3Yknfus_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQmakgqzdtki4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQonpkk3Lyivx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQqwe2Utvgisr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQr2Prxbizjbv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQr5Jcgndgadi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQs23P4Homwaf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQsabrv1Zpcyu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlR2Ttskh142Kv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlR3Dtwhyei41K_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlR24Dca2Vwnnm_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlR31Xdmdluztn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRegencivics_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRegeneratex_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRegenliving_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRipplesdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRiver_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRjjzxayy4C5I_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRjlaa4Xyt2Fe_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRjnr5Ufv3Hiz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRlbajxwjl1Ue_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRrt1Iycndxxf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRtq42Lbetbxl_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRtrmcn3Avkf1_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRtudvevl2Cjt_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRysnpti3Bdvg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlS2Zwpt2Rqxhy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSaltcrossgar_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSamaratrust_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSctawkeupscc_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSeedscommons_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlShepherddao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlShkwh1Iynyh4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSi2Jvmzemt31_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSilxhs5C5Nar_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSk1Ojvjucrfq_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSmwgavmt5Ryt_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSoil1Orwrmps_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSotzumhlphtx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSrmiubqdc4Rk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSs53Hoim4Gt3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSxjul33Jf1Bv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlT2Oqxmtjpk3X_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlT4Ygmfu4Owip_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTc3Uweyd2A2C_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTcpswkf2Yfsf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTcwrv1Aqtzxe_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTestdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTestnewdaocac_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlThebestxdap_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlThedokcyip3O_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTheflow_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlThftmv3D42Kb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlThinkplace_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTighnzy4Pgu3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTqmby2Eadaiu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTqsre5Whjjby_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTrshury4Soli_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTss3Wqdjlalp_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlU2T3Kwgdmrbe_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlU4Yfk1S4Cv3H_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUbuntu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUgcwrgniuwis_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUij3Uygyzyow_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUlpyjkthcu2C_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUmac2Lsxcc14_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUnitedplanet_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUniversalis_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUniverseland_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUnkailabs_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUpvotetest1_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUtanck3Sxaze_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUtyeq4Dqk3Iu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUwkshkgwuksx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUwmng5Zgcoa2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUwztsw1L3Na5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUzihb11Q5Ppi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlV2U42Hujkzzk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVf3Rsnpdqx1F_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVflqjbatmmf1_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVg1Lob4Oakdz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVgryuxp1Cyt4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVh1Imaheqeqy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVk2P3R3Zpbqu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVnyenpufyes2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVo3N43V4Khhi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVokaoj1T5Qsr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVovv2Tengevl_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVqloh1Dpeclv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVqsgv5Mheq1Z_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVse4A2Ttg3On_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVsmoku34Pbnj_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVx35Wgozl15S_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWbh1V54Uekjy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWbo53Ayfygbh_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWdxuocdyahaf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWekqmvasjcqb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWeudzvh3Hd2Q_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWf2Irhvtu5H5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWfzlx3551Pgg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWgvxprpxfngo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWhnelpre1Xnz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWildtrips_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWrongdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWtr21Owdodww_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWuip5Bx23244_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWuknmlynj5Qb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWuzjmdodtrfn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlX5Gpg2Kk14Rp_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXc1Mpm4R1V3Q_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXecj4Cukr1Pr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXfvd2Pyvelym_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXmiereyl52Um_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXpznyeq1Ujcw_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXrfuttwmsapm_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXx4Pyzevrrz3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYimw2Jwzpfqx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYjtij3Oxqizo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYk24Za5Bqjeu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYlxmkxtb4M4J_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYoglgtvd2Ttf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYp13Kd3Fzhvm_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYtibux4Pydni_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYtowqoe4Jjg2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYveif24Swpxo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYxypcwoh1Pmn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZgbrnuisnb3H_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZgepdsxircad_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZhuu21Czfaer_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZl5Fqkhoztam_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZu5Xtqjzo2Sq_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZvstjcdyjcgy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZzcjstecud2T_s?: InputMaybe<Scalars['String']['input']>;
  urls_url_s?: InputMaybe<Scalars['String']['input']>;
};

export type SettingsRef = {
  admins_account_n?: InputMaybe<Scalars['String']['input']>;
  admins_updatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ecosystem_domain_s?: InputMaybe<Scalars['String']['input']>;
  ecosystem_logo_s?: InputMaybe<Scalars['String']['input']>;
  ecosystem_name_s?: InputMaybe<Scalars['String']['input']>;
  ecosystem_purpose_s?: InputMaybe<Scalars['String']['input']>;
  onboarders_account_n?: InputMaybe<Scalars['String']['input']>;
  onboarders_updatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  otherSettings_logo_s?: InputMaybe<Scalars['String']['input']>;
  settings_account_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_addAdminsEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_claimEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_commentsContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_commentsContract_s?: InputMaybe<Scalars['String']['input']>;
  settings_communityVotingAlignmentPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingDurationSec_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityVotingMethod_s?: InputMaybe<Scalars['String']['input']>;
  settings_communityVotingQuorumPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityotingQuorumPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_communityotingQuorumPercent_s?: InputMaybe<Scalars['String']['input']>;
  settings_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  settings_contractsVersion_s?: InputMaybe<Scalars['String']['input']>;
  settings_daoDescription_s?: InputMaybe<Scalars['String']['input']>;
  settings_daoName_n?: InputMaybe<Scalars['String']['input']>;
  settings_daoSuper_s?: InputMaybe<Scalars['String']['input']>;
  settings_daoTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_daoUrl_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardOverlayColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardOverlayOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardPatternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardPatternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_dashboardTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_discordURL_s?: InputMaybe<Scalars['String']['input']>;
  settings_discordUrl_s?: InputMaybe<Scalars['String']['input']>;
  settings_documentationButtonText_s?: InputMaybe<Scalars['String']['input']>;
  settings_documentationURL_s?: InputMaybe<Scalars['String']['input']>;
  settings_documentationUrl_s?: InputMaybe<Scalars['String']['input']>;
  settings_ecosystemChildPriceStaked_a?: InputMaybe<Scalars['String']['input']>;
  settings_ecosystemChildPrice_a?: InputMaybe<Scalars['String']['input']>;
  settings_ecosystemPriceStaked_a?: InputMaybe<Scalars['String']['input']>;
  settings_ecosystemPrice_a?: InputMaybe<Scalars['String']['input']>;
  settings_exploreBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_exploreParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_exploreTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_extendedLogo_s?: InputMaybe<Scalars['String']['input']>;
  settings_governanceTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_headerPattern_s?: InputMaybe<Scalars['String']['input']>;
  settings_homepageHeader_s?: InputMaybe<Scalars['String']['input']>;
  settings_homepageSubtitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_husdTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_hvoiceTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_hyphaCosaleContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_hyphaDeferralFactorX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_hyphaTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_hyphaUsdValue_a?: InputMaybe<Scalars['String']['input']>;
  settings_isHypha_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_logo_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersApplicationEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_membersBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersHeader_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersOverlayColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersOverlayOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersPatternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersPatternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersSubtitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_membersTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_msigApprovalAmount_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_multisigEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_myOtherOtherSetting_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_myOtherSetting_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_mySetting_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_name_s?: InputMaybe<Scalars['String']['input']>;
  settings_nativeToken_a?: InputMaybe<Scalars['String']['input']>;
  settings_nextCommentSection_n?: InputMaybe<Scalars['String']['input']>;
  settings_nextProposalNameInt_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_nextScheduleId_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_nextScheduledId_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_onboarderAccount_n?: InputMaybe<Scalars['String']['input']>;
  settings_organisationBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationOverlayColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationOverlayOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationPatternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationPatternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_organisationTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_organizationHeader_s?: InputMaybe<Scalars['String']['input']>;
  settings_organizationSubtitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternBase64_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_patternOpacity_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_patternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_pattern_s?: InputMaybe<Scalars['String']['input']>;
  settings_paused_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_pegTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_pegTokenName_s?: InputMaybe<Scalars['String']['input']>;
  settings_pegToken_a?: InputMaybe<Scalars['String']['input']>;
  settings_periodDurationSec_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_periodDurationSec_s?: InputMaybe<Scalars['String']['input']>;
  settings_primaryColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsCreationEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_proposalsHeader_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsOverlayColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsOverlayOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsParagraph_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsPatternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsPatternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsSubtitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_proposalsTitle_s?: InputMaybe<Scalars['String']['input']>;
  settings_publisherContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_redemptionsEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_removableBannersEnabled_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_rewardToPegRatio_a?: InputMaybe<Scalars['String']['input']>;
  settings_rewardTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_rewardTokenMaxSupply_a?: InputMaybe<Scalars['String']['input']>;
  settings_rewardTokenName_s?: InputMaybe<Scalars['String']['input']>;
  settings_rewardToken_a?: InputMaybe<Scalars['String']['input']>;
  settings_rootNode_s?: InputMaybe<Scalars['String']['input']>;
  settings_saleHyphaUsdValue_a?: InputMaybe<Scalars['String']['input']>;
  settings_secondaryColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_seedsDeferralFactorX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_seedsEscrowContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_seedsTokenContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_settingsPatternBase64S_s?: InputMaybe<Scalars['String']['input']>;
  settings_settingsVotingAlignmentX100I_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_settingsVotingQuorumX100I_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_socialChat_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashBackgroundImage_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashOverlayColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashOverlayOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashPatternColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_splashPatternOpacity_s?: InputMaybe<Scalars['String']['input']>;
  settings_testSet_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_testSetting_a?: InputMaybe<Scalars['String']['input']>;
  settings_testSetting_s?: InputMaybe<Scalars['String']['input']>;
  settings_textColor_s?: InputMaybe<Scalars['String']['input']>;
  settings_threshold_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_title_s?: InputMaybe<Scalars['String']['input']>;
  settings_treasuryAccount_n?: InputMaybe<Scalars['String']['input']>;
  settings_treasuryContract_n?: InputMaybe<Scalars['String']['input']>;
  settings_treasuryTokenMultiplier_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_updatedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  settings_upvoteCheifDelegateCount_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteCheifDelegateDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteChiefDelegateCount_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteHeadDelegateDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteHeadDelegateRound_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_upvoteRounds_s?: InputMaybe<Scalars['String']['input']>;
  settings_upvoteStartDateTime_s?: InputMaybe<Scalars['String']['input']>;
  settings_upvoteStartDate_s?: InputMaybe<Scalars['String']['input']>;
  settings_upvoteStartTime_s?: InputMaybe<Scalars['String']['input']>;
  settings_url_s?: InputMaybe<Scalars['String']['input']>;
  settings_usesSeeds_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_utilityTokenMultiplier_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_vOTINGDURATIONSEC_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_voiceTokenDecayPerPeriodX10M_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_voiceTokenDecayPeriod_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_voiceTokenDecayPeriod_s?: InputMaybe<Scalars['String']['input']>;
  settings_voiceTokenMultiplier_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_voiceToken_a?: InputMaybe<Scalars['String']['input']>;
  settings_votingAlignmentPercentX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingAlignmentPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingAlignmentPercent_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingAlignmentX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingAlignmentX100_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingDurationSec_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingDurationSec_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingDurationSeconds_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingMethod_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingQuorumPercentX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingQuorumPercent_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingQuorumPercent_s?: InputMaybe<Scalars['String']['input']>;
  settings_votingQuorumX100_i?: InputMaybe<Scalars['Int64']['input']>;
  settings_votingQuorumX100_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  tests_testingsettings_i?: InputMaybe<Scalars['Int64']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  urls_url1Bk1Yxby2Tie_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1Fmizk1Zuyi2_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1Fvbfectvsxc_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1Mmp4Pfmrerr_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1N5Kz3Gemseg_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1Ovembm4Jczo_s?: InputMaybe<Scalars['String']['input']>;
  urls_url1Qfetejflafl_s?: InputMaybe<Scalars['String']['input']>;
  urls_url2Q3Pz2Hn43Gq_s?: InputMaybe<Scalars['String']['input']>;
  urls_url2T3Aybfvqorw_s?: InputMaybe<Scalars['String']['input']>;
  urls_url2T4Fdni1Styb_s?: InputMaybe<Scalars['String']['input']>;
  urls_url2Xegtmj2Jdsf_s?: InputMaybe<Scalars['String']['input']>;
  urls_url2Yfg3Nvby1Zl_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3Cen4Uzdy2Es_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3G2Adxfbf4Yt_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3Lk4Nzggpubi_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3O3W1Ggvkkax_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3Qgrntosyxiz_s?: InputMaybe<Scalars['String']['input']>;
  urls_url3Vf2X13Lcepd_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4D2V4Xmgbir2_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Ehml2Vqzp5C_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Ezfoukyd4K2_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Fewyw1Qtrek_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Jaepm23Od5W_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4K4Gcongezpv_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Qkkymwtssjj_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4U5F1Ppy4Xan_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Urhwj1Paeo5_s?: InputMaybe<Scalars['String']['input']>;
  urls_url4Uvjpanvhvtl_s?: InputMaybe<Scalars['String']['input']>;
  urls_url5Kkb3Tpwjiho_s?: InputMaybe<Scalars['String']['input']>;
  urls_url5Lsfqinc2Zyb_s?: InputMaybe<Scalars['String']['input']>;
  urls_url5Qakaspwwetv_s?: InputMaybe<Scalars['String']['input']>;
  urls_url5Vn4Ybbadgjj_s?: InputMaybe<Scalars['String']['input']>;
  urls_url5Z4Qztkwnbkk_s?: InputMaybe<Scalars['String']['input']>;
  urls_url15Mgh14Vkqke_s?: InputMaybe<Scalars['String']['input']>;
  urls_url22Vnqfsm3Q3S_s?: InputMaybe<Scalars['String']['input']>;
  urls_url25Dkrzm3Pr5R_s?: InputMaybe<Scalars['String']['input']>;
  urls_url32Xgw4Lmfaxh_s?: InputMaybe<Scalars['String']['input']>;
  urls_url34Vxjg3Npjih_s?: InputMaybe<Scalars['String']['input']>;
  urls_url35U3Jkcydkur_s?: InputMaybe<Scalars['String']['input']>;
  urls_url54Eb13Kaahtj_s?: InputMaybe<Scalars['String']['input']>;
  urls_url55Lqnw53A3V3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlA4Tm1Gd5Nb52_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAbh12Dbbhrtt_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAdhsdaccieey_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAikwmmc5Uf2X_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAjxblzgtavwl_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAn4Magusqjef_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAo4Cz1Fwtq4V_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlAzpexlyerb3N_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlB1Qzplmrrhiz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlB1Z2Znjsedtr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlB14Mblffsutj_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBamamaps_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBblegacy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBbxp5Sxonbia_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBcrdm2Xqkdmb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBethenewdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBjsmt2Esdzib_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBmhh3Zcw5Xmr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBmvy1F4Jyxpk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBoevvh44Prqa_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBsdkpibjyzkg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBtchanged_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBtchangedho_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBtchangedno_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBwnmqskbvs5C_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlBwr1Upma2Yjf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlC3Jxagqsq4C3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCatalyst23_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCdviq1Ltflhf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCgpvbclbywfg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlChildalphadx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlChildttrx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCjxpo4Yaulrl_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCloser_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlClubdaounive_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCpqveafwtbun_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCwiab3Vsqw5T_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlCy22K5T4N2Tu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlD4Kdbzvzgrt5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDd3Ymiavtdcy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDearwisearth_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDemoeosdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDemoxdaox2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDemoxdaox_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDevatarswrld_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDhotell_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDht5Wzq2Kjyk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDjmtdxgjiorc_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDkpke5Idbkvd_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDl51Qmvjsego_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDmp5Bw4Gzxkr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDnsz1Cbwxpap_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDoqxuyw5Ciem_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDriuukputcgz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDtmiyxuodgkp_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDvqpp5Sdtrdg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlDxyzf1Ukies3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlE1Esoh1Keajs_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEarthwisefut_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEdm3Mnsg1Hns_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEghlh3Znzqwr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEhgegumzynw3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEk4Lpxh2Ma4S_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEnn5C2Fkbs3W_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEoctlpr3Jd5I_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEqi5Rxrwzjbs_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEv4Hb5Obkagx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEwk4Xoaqeisc_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlEz2Elj1Cje1Z_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFastdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFbbu5Diqmx5P_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFc2Fxwh43X1B_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFczw2Xsw5Eat_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFdd3Lbrpwkvj_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFew2Txlhcmrg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFincasagrada_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFjkqwlfpui2U_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFjvqqx2Ztp2C_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFkhvavzzorf1_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFrontdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFrwzlupynkxh_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlFzfqmy1Ahz1A_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlG1Apwwd2Tnva_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlG1Plywuz5Ogb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGa4Pytexiwkw_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGaianet_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGaiauniondhe_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGdgcrhbar3Gn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGenesisventu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGiffj4Yhsuoq_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGkcxfa51Ytmn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGpsngzpbx4Ix_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGreeninitfo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGreenwood_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGrwaymzqcxh4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlGvyzicu3Ctj1_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlH1Zrlvo24Tkz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHc3Kr2Twzk1E_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHibvjoibbfd2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHmntptjudozg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHolisticsyst_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHqooypm5Ukct_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHrgufaizyp5J_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHy1B1Bwahvfo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHy4Ojcxxjynn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHypha_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlHyphademo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlI4Wrguhpfslr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlI5Nkntm5Xnav_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlI31Ggvxj54Je_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIcinet_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIdc3Uaupzw2I_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIe3Thvphmxbr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIgm5Ieu43Izx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIhy4W4Zrrmr4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIkhhrizzdmkt_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIm3Skdhoqrz5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlImcxnrjr5Te4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIntegrity_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIpbxmrsdrwsb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlIunzuazm122M_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJ5Hcurppvbc2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJ25Oi2B5J21Q_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJdjqhjoyhnhy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJgp4Eyy4Ike4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJhfybqi5Jcdv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJii2Elpvl2Ai_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJobth5Uqnhar_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJoznzd5Fskk2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJupiter_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJwok2Ycpzgou_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlJzoepolpnudo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlK5Fzn5Ztdchz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlK5Yhstzkcbrk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKd2U1Nqd5Zpm_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKedxcfee4Pbk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKefskfhz3Hkt_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKiajiljlp4Fz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKitchen_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKsjjde4Hbn2U_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKuladao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKv2Eibsrpcaf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlKvqzvpqle2Oi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlL4Hlmodr2Ux2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlL54Gm5Hzawwg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLalagardens_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLgzydegefd2O_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLightleaders_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLiminalvill_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLkhwazi4Ggp3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLn3Vzjj252Hd_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLndfupfa2H5D_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLnfd5Gnly5Ui_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlLnxbx3Pixmbf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlM4Hk2S2Vxs1F_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlM53Fbwxxgnrh_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMbaajxm41Hfa_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMeczomzsoiuz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMf33Nwhrc2Pi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMfdx2Sjxjbpf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMjsie3Zvqqrm_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMksii3R3Ifuz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMomdho_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMoq3Io4Gwguv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMotlops3Fmcy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMq32Dxpku1Yw_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlMwm5Qizc3Gmi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlN1M4Hyjb3Prq_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlN2Qb4Oq5Ceme_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlN11Wig1Pds3W_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlN32Wvxvkqbkb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNa1Sonzbvtk5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNcv3H5Dm45Qg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNduy5Bttdrqq_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNestr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNewsouthafr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNextgenvill_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNivtbyuhk3Rd_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNkchcudxo425_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNonnhrtoku1Z_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlNoqcp5Afx5E5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlO3Tzzbjaraj3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOctuxbu5Kdpl_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOkkhmgkejuup_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOpdv42Sk3Yun_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOqeavbgf5H2H_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOqmt53D3Nijf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOriginwisdom_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOsthmvtcvqk2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOsylrx3Zyo3I_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOvfykbv5N252_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlOzxvgkytgfm5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlP3Xqs1Vy53J4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPachamamaris_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPcwoiacrdzml_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPgkuvuyd5Tkf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPkpcaltfb2An_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPlanetcare_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPtogan1Cqjp2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPuwpla2N5Z4A_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPy5X2Caqgvwr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlPyzxw1Bos3Es_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQ4Hexzhmslt3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQbcbgv4Gpczw_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQhftw3Yknfus_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQmakgqzdtki4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQonpkk3Lyivx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQqwe2Utvgisr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQr2Prxbizjbv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQr5Jcgndgadi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQs23P4Homwaf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlQsabrv1Zpcyu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlR2Ttskh142Kv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlR3Dtwhyei41K_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlR24Dca2Vwnnm_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlR31Xdmdluztn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRegencivics_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRegeneratex_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRegenliving_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRipplesdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRiver_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRjjzxayy4C5I_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRjlaa4Xyt2Fe_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRjnr5Ufv3Hiz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRlbajxwjl1Ue_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRrt1Iycndxxf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRtq42Lbetbxl_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRtrmcn3Avkf1_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRtudvevl2Cjt_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlRysnpti3Bdvg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlS2Zwpt2Rqxhy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSaltcrossgar_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSamaratrust_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSctawkeupscc_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSeedscommons_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlShepherddao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlShkwh1Iynyh4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSi2Jvmzemt31_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSilxhs5C5Nar_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSk1Ojvjucrfq_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSmwgavmt5Ryt_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSoil1Orwrmps_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSotzumhlphtx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSrmiubqdc4Rk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSs53Hoim4Gt3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlSxjul33Jf1Bv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlT2Oqxmtjpk3X_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlT4Ygmfu4Owip_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTc3Uweyd2A2C_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTcpswkf2Yfsf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTcwrv1Aqtzxe_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTestdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTestnewdaocac_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlThebestxdap_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlThedokcyip3O_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTheflow_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlThftmv3D42Kb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlThinkplace_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTighnzy4Pgu3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTqmby2Eadaiu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTqsre5Whjjby_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTrshury4Soli_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlTss3Wqdjlalp_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlU2T3Kwgdmrbe_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlU4Yfk1S4Cv3H_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUbuntu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUgcwrgniuwis_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUij3Uygyzyow_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUlpyjkthcu2C_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUmac2Lsxcc14_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUnitedplanet_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUniversalis_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUniverseland_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUnkailabs_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUpvotetest1_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUtanck3Sxaze_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUtyeq4Dqk3Iu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUwkshkgwuksx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUwmng5Zgcoa2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUwztsw1L3Na5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlUzihb11Q5Ppi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlV2U42Hujkzzk_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVf3Rsnpdqx1F_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVflqjbatmmf1_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVg1Lob4Oakdz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVgryuxp1Cyt4_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVh1Imaheqeqy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVk2P3R3Zpbqu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVnyenpufyes2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVo3N43V4Khhi_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVokaoj1T5Qsr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVovv2Tengevl_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVqloh1Dpeclv_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVqsgv5Mheq1Z_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVse4A2Ttg3On_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVsmoku34Pbnj_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlVx35Wgozl15S_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWbh1V54Uekjy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWbo53Ayfygbh_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWdxuocdyahaf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWekqmvasjcqb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWeudzvh3Hd2Q_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWf2Irhvtu5H5_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWfzlx3551Pgg_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWgvxprpxfngo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWhnelpre1Xnz_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWildtrips_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWrongdao_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWtr21Owdodww_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWuip5Bx23244_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWuknmlynj5Qb_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlWuzjmdodtrfn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlX5Gpg2Kk14Rp_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXc1Mpm4R1V3Q_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXecj4Cukr1Pr_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXfvd2Pyvelym_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXmiereyl52Um_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXpznyeq1Ujcw_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXrfuttwmsapm_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlXx4Pyzevrrz3_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYimw2Jwzpfqx_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYjtij3Oxqizo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYk24Za5Bqjeu_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYlxmkxtb4M4J_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYoglgtvd2Ttf_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYp13Kd3Fzhvm_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYtibux4Pydni_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYtowqoe4Jjg2_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYveif24Swpxo_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlYxypcwoh1Pmn_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZgbrnuisnb3H_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZgepdsxircad_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZhuu21Czfaer_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZl5Fqkhoztam_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZu5Xtqjzo2Sq_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZvstjcdyjcgy_s?: InputMaybe<Scalars['String']['input']>;
  urls_urlZzcjstecud2T_s?: InputMaybe<Scalars['String']['input']>;
  urls_url_s?: InputMaybe<Scalars['String']['input']>;
};

export type StringExactFilter = {
  between?: InputMaybe<StringRange>;
  eq?: InputMaybe<Scalars['String']['input']>;
  ge?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  le?: InputMaybe<Scalars['String']['input']>;
  lt?: InputMaybe<Scalars['String']['input']>;
};

export type StringExactFilter_StringRegExpFilter = {
  between?: InputMaybe<StringRange>;
  eq?: InputMaybe<Scalars['String']['input']>;
  ge?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  le?: InputMaybe<Scalars['String']['input']>;
  lt?: InputMaybe<Scalars['String']['input']>;
  regexp?: InputMaybe<Scalars['String']['input']>;
};

export type StringExactFilter_StringTermFilter = {
  allofterms?: InputMaybe<Scalars['String']['input']>;
  anyofterms?: InputMaybe<Scalars['String']['input']>;
  between?: InputMaybe<StringRange>;
  eq?: InputMaybe<Scalars['String']['input']>;
  ge?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  le?: InputMaybe<Scalars['String']['input']>;
  lt?: InputMaybe<Scalars['String']['input']>;
};

export type StringFullTextFilter = {
  alloftext?: InputMaybe<Scalars['String']['input']>;
  anyoftext?: InputMaybe<Scalars['String']['input']>;
};

export type StringHashFilter = {
  eq?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type StringRange = {
  max: Scalars['String']['input'];
  min: Scalars['String']['input'];
};

export type StringRegExpFilter = {
  regexp?: InputMaybe<Scalars['String']['input']>;
};

export type StringTermFilter = {
  allofterms?: InputMaybe<Scalars['String']['input']>;
  anyofterms?: InputMaybe<Scalars['String']['input']>;
};

export type StripeAcivePlanAndSubscription = {
  __typename?: 'StripeAcivePlanAndSubscription';
  communityMembersCount?: Maybe<Scalars['Int']['output']>;
  coreMembersCount?: Maybe<Scalars['Int']['output']>;
  currency?: Maybe<Scalars['String']['output']>;
  currentPeriodEnd?: Maybe<Scalars['DateTime']['output']>;
  currentPeriodStart?: Maybe<Scalars['DateTime']['output']>;
  daoUrl?: Maybe<Scalars['String']['output']>;
  interval?: Maybe<Scalars['String']['output']>;
  planId?: Maybe<Scalars['String']['output']>;
  planName?: Maybe<Scalars['String']['output']>;
  planType?: Maybe<Scalars['String']['output']>;
  price?: Maybe<Scalars['Int']['output']>;
  subscriptionId?: Maybe<Scalars['String']['output']>;
  subscriptionItemId?: Maybe<Scalars['String']['output']>;
  subscriptionStatus?: Maybe<Scalars['String']['output']>;
};

export type StripeInvoices = {
  __typename?: 'StripeInvoices';
  accountName?: Maybe<Scalars['String']['output']>;
  amountDue?: Maybe<Scalars['Int']['output']>;
  amountPaid?: Maybe<Scalars['Int']['output']>;
  billingReason?: Maybe<Scalars['String']['output']>;
  created?: Maybe<Scalars['String']['output']>;
  customerEmail?: Maybe<Scalars['String']['output']>;
  customerName?: Maybe<Scalars['String']['output']>;
  effectiveAt?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  invoicePdf?: Maybe<Scalars['String']['output']>;
  invoiceUrl?: Maybe<Scalars['String']['output']>;
  number?: Maybe<Scalars['String']['output']>;
  paid?: Maybe<Scalars['Boolean']['output']>;
  periodEnd?: Maybe<Scalars['Int']['output']>;
  periodStart?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  total?: Maybe<Scalars['Int']['output']>;
};

export type StripePrices = {
  __typename?: 'StripePrices';
  amount?: Maybe<Scalars['Int64']['output']>;
  communityMembersCount?: Maybe<Scalars['String']['output']>;
  coreMembersCount?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  planType?: Maybe<Scalars['String']['output']>;
  productId: Scalars['String']['output'];
  productIsActive?: Maybe<Scalars['Boolean']['output']>;
  productName: Scalars['String']['output'];
  recurringInterval?: Maybe<Scalars['String']['output']>;
  recurringIntervalCount?: Maybe<Scalars['Int']['output']>;
  recurringTrialPeriodDays?: Maybe<Scalars['Int']['output']>;
  recurringUsageType?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type StripeSession = {
  __typename?: 'StripeSession';
  cancelUrl?: Maybe<Scalars['String']['output']>;
  currency?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  paymentStatus?: Maybe<Scalars['String']['output']>;
  successUrl?: Maybe<Scalars['String']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type Subscription = {
  __typename?: 'Subscription';
  aggregateAlert?: Maybe<AlertAggregateResult>;
  aggregateAssignbadge?: Maybe<AssignbadgeAggregateResult>;
  aggregateAssignment?: Maybe<AssignmentAggregateResult>;
  aggregateAttestation?: Maybe<AttestationAggregateResult>;
  aggregateBadge?: Maybe<BadgeAggregateResult>;
  aggregateBalance?: Maybe<BalanceAggregateResult>;
  aggregateBillingInfo?: Maybe<BillingInfoAggregateResult>;
  aggregateBudget?: Maybe<BudgetAggregateResult>;
  aggregateCalendar?: Maybe<CalendarAggregateResult>;
  aggregateCircle?: Maybe<CircleAggregateResult>;
  aggregateCmntSection?: Maybe<CmntSectionAggregateResult>;
  aggregateComment?: Maybe<CommentAggregateResult>;
  aggregateDao?: Maybe<DaoAggregateResult>;
  aggregateDaoDraft?: Maybe<DaoDraftAggregateResult>;
  aggregateDho?: Maybe<DhoAggregateResult>;
  aggregateDocument?: Maybe<DocumentAggregateResult>;
  aggregateEdit?: Maybe<EditAggregateResult>;
  aggregateElectnGroup?: Maybe<ElectnGroupAggregateResult>;
  aggregateElectnRound?: Maybe<ElectnRoundAggregateResult>;
  aggregateEvent?: Maybe<EventAggregateResult>;
  aggregateMember?: Maybe<MemberAggregateResult>;
  aggregateMemo?: Maybe<MemoAggregateResult>;
  aggregateMsigInfo?: Maybe<MsigInfoAggregateResult>;
  aggregateMultisig?: Maybe<MultisigAggregateResult>;
  aggregateNotification?: Maybe<NotificationAggregateResult>;
  aggregatePayment?: Maybe<PaymentAggregateResult>;
  aggregatePayout?: Maybe<PayoutAggregateResult>;
  aggregatePeriod?: Maybe<PeriodAggregateResult>;
  aggregatePlanManager?: Maybe<PlanManagerAggregateResult>;
  aggregatePolicy?: Maybe<PolicyAggregateResult>;
  aggregatePoll?: Maybe<PollAggregateResult>;
  aggregatePriceOffer?: Maybe<PriceOfferAggregateResult>;
  aggregatePricingPlan?: Maybe<PricingPlanAggregateResult>;
  aggregateQuestcomple?: Maybe<QuestcompleAggregateResult>;
  aggregateQuestcomplet?: Maybe<QuestcompletAggregateResult>;
  aggregateQueststart?: Maybe<QueststartAggregateResult>;
  aggregateReaction?: Maybe<ReactionAggregateResult>;
  aggregateRedemption?: Maybe<RedemptionAggregateResult>;
  aggregateRole?: Maybe<RoleAggregateResult>;
  aggregateSalaryband?: Maybe<SalarybandAggregateResult>;
  aggregateSettings?: Maybe<SettingsAggregateResult>;
  aggregateSuspend?: Maybe<SuspendAggregateResult>;
  aggregateTimeshare?: Maybe<TimeshareAggregateResult>;
  aggregateTreasury?: Maybe<TreasuryAggregateResult>;
  aggregateTrsyPayment?: Maybe<TrsyPaymentAggregateResult>;
  aggregateUpvtElectn?: Maybe<UpvtElectnAggregateResult>;
  aggregateUpvtVote?: Maybe<UpvtVoteAggregateResult>;
  aggregateUser?: Maybe<UserAggregateResult>;
  aggregateVotable?: Maybe<VotableAggregateResult>;
  aggregateVote?: Maybe<VoteAggregateResult>;
  aggregateVoteGroup?: Maybe<VoteGroupAggregateResult>;
  aggregateVoteTally?: Maybe<VoteTallyAggregateResult>;
  getAlert?: Maybe<Alert>;
  getAssignbadge?: Maybe<Assignbadge>;
  getAssignment?: Maybe<Assignment>;
  getAttestation?: Maybe<Attestation>;
  getBadge?: Maybe<Badge>;
  getBalance?: Maybe<Balance>;
  getBillingInfo?: Maybe<BillingInfo>;
  getBudget?: Maybe<Budget>;
  getCalendar?: Maybe<Calendar>;
  getCircle?: Maybe<Circle>;
  getCmntSection?: Maybe<CmntSection>;
  getComment?: Maybe<Comment>;
  getDao?: Maybe<Dao>;
  getDaoDraft?: Maybe<DaoDraft>;
  getDho?: Maybe<Dho>;
  /** @deprecated @id argument for get query on interface is being deprecated. Only those @id fields which have interface argument set to true will be available in getQuery argument on interface post v21.11.0, please update your schema accordingly. */
  getDocument?: Maybe<Document>;
  getEdit?: Maybe<Edit>;
  getElectnGroup?: Maybe<ElectnGroup>;
  getElectnRound?: Maybe<ElectnRound>;
  getEvent?: Maybe<Event>;
  getMember?: Maybe<Member>;
  getMemo?: Maybe<Memo>;
  getMsigInfo?: Maybe<MsigInfo>;
  getMultisig?: Maybe<Multisig>;
  getNotification?: Maybe<Notification>;
  getPayment?: Maybe<Payment>;
  getPayout?: Maybe<Payout>;
  getPeriod?: Maybe<Period>;
  getPlanManager?: Maybe<PlanManager>;
  getPolicy?: Maybe<Policy>;
  getPoll?: Maybe<Poll>;
  getPriceOffer?: Maybe<PriceOffer>;
  getPricingPlan?: Maybe<PricingPlan>;
  getQuestcomple?: Maybe<Questcomple>;
  getQuestcomplet?: Maybe<Questcomplet>;
  getQueststart?: Maybe<Queststart>;
  getReaction?: Maybe<Reaction>;
  getRedemption?: Maybe<Redemption>;
  getRole?: Maybe<Role>;
  getSalaryband?: Maybe<Salaryband>;
  getSettings?: Maybe<Settings>;
  getSuspend?: Maybe<Suspend>;
  getTimeshare?: Maybe<Timeshare>;
  getTreasury?: Maybe<Treasury>;
  getTrsyPayment?: Maybe<TrsyPayment>;
  getUpvtElectn?: Maybe<UpvtElectn>;
  getUpvtVote?: Maybe<UpvtVote>;
  getUser?: Maybe<User>;
  getVote?: Maybe<Vote>;
  getVoteGroup?: Maybe<VoteGroup>;
  getVoteTally?: Maybe<VoteTally>;
  queryAlert?: Maybe<Array<Maybe<Alert>>>;
  queryAssignbadge?: Maybe<Array<Maybe<Assignbadge>>>;
  queryAssignment?: Maybe<Array<Maybe<Assignment>>>;
  queryAttestation?: Maybe<Array<Maybe<Attestation>>>;
  queryBadge?: Maybe<Array<Maybe<Badge>>>;
  queryBalance?: Maybe<Array<Maybe<Balance>>>;
  queryBillingInfo?: Maybe<Array<Maybe<BillingInfo>>>;
  queryBudget?: Maybe<Array<Maybe<Budget>>>;
  queryCalendar?: Maybe<Array<Maybe<Calendar>>>;
  queryCircle?: Maybe<Array<Maybe<Circle>>>;
  queryCmntSection?: Maybe<Array<Maybe<CmntSection>>>;
  queryComment?: Maybe<Array<Maybe<Comment>>>;
  queryDao?: Maybe<Array<Maybe<Dao>>>;
  queryDaoDraft?: Maybe<Array<Maybe<DaoDraft>>>;
  queryDho?: Maybe<Array<Maybe<Dho>>>;
  queryDocument?: Maybe<Array<Maybe<Document>>>;
  queryEdit?: Maybe<Array<Maybe<Edit>>>;
  queryElectnGroup?: Maybe<Array<Maybe<ElectnGroup>>>;
  queryElectnRound?: Maybe<Array<Maybe<ElectnRound>>>;
  queryEvent?: Maybe<Array<Maybe<Event>>>;
  queryMember?: Maybe<Array<Maybe<Member>>>;
  queryMemo?: Maybe<Array<Maybe<Memo>>>;
  queryMsigInfo?: Maybe<Array<Maybe<MsigInfo>>>;
  queryMultisig?: Maybe<Array<Maybe<Multisig>>>;
  queryNotification?: Maybe<Array<Maybe<Notification>>>;
  queryPayment?: Maybe<Array<Maybe<Payment>>>;
  queryPayout?: Maybe<Array<Maybe<Payout>>>;
  queryPeriod?: Maybe<Array<Maybe<Period>>>;
  queryPlanManager?: Maybe<Array<Maybe<PlanManager>>>;
  queryPolicy?: Maybe<Array<Maybe<Policy>>>;
  queryPoll?: Maybe<Array<Maybe<Poll>>>;
  queryPriceOffer?: Maybe<Array<Maybe<PriceOffer>>>;
  queryPricingPlan?: Maybe<Array<Maybe<PricingPlan>>>;
  queryQuestcomple?: Maybe<Array<Maybe<Questcomple>>>;
  queryQuestcomplet?: Maybe<Array<Maybe<Questcomplet>>>;
  queryQueststart?: Maybe<Array<Maybe<Queststart>>>;
  queryReaction?: Maybe<Array<Maybe<Reaction>>>;
  queryRedemption?: Maybe<Array<Maybe<Redemption>>>;
  queryRole?: Maybe<Array<Maybe<Role>>>;
  querySalaryband?: Maybe<Array<Maybe<Salaryband>>>;
  querySettings?: Maybe<Array<Maybe<Settings>>>;
  querySuspend?: Maybe<Array<Maybe<Suspend>>>;
  queryTimeshare?: Maybe<Array<Maybe<Timeshare>>>;
  queryTreasury?: Maybe<Array<Maybe<Treasury>>>;
  queryTrsyPayment?: Maybe<Array<Maybe<TrsyPayment>>>;
  queryUpvtElectn?: Maybe<Array<Maybe<UpvtElectn>>>;
  queryUpvtVote?: Maybe<Array<Maybe<UpvtVote>>>;
  queryUser?: Maybe<Array<Maybe<User>>>;
  queryVotable?: Maybe<Array<Maybe<Votable>>>;
  queryVote?: Maybe<Array<Maybe<Vote>>>;
  queryVoteGroup?: Maybe<Array<Maybe<VoteGroup>>>;
  queryVoteTally?: Maybe<Array<Maybe<VoteTally>>>;
};


export type SubscriptionAggregateAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
};


export type SubscriptionAggregateAssignbadgeArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
};


export type SubscriptionAggregateAssignmentArgs = {
  filter?: InputMaybe<AssignmentFilter>;
};


export type SubscriptionAggregateAttestationArgs = {
  filter?: InputMaybe<AttestationFilter>;
};


export type SubscriptionAggregateBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
};


export type SubscriptionAggregateBalanceArgs = {
  filter?: InputMaybe<BalanceFilter>;
};


export type SubscriptionAggregateBillingInfoArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
};


export type SubscriptionAggregateBudgetArgs = {
  filter?: InputMaybe<BudgetFilter>;
};


export type SubscriptionAggregateCalendarArgs = {
  filter?: InputMaybe<CalendarFilter>;
};


export type SubscriptionAggregateCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
};


export type SubscriptionAggregateCmntSectionArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
};


export type SubscriptionAggregateCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
};


export type SubscriptionAggregateDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type SubscriptionAggregateDaoDraftArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
};


export type SubscriptionAggregateDhoArgs = {
  filter?: InputMaybe<DhoFilter>;
};


export type SubscriptionAggregateDocumentArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type SubscriptionAggregateEditArgs = {
  filter?: InputMaybe<EditFilter>;
};


export type SubscriptionAggregateElectnGroupArgs = {
  filter?: InputMaybe<ElectnGroupFilter>;
};


export type SubscriptionAggregateElectnRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type SubscriptionAggregateEventArgs = {
  filter?: InputMaybe<EventFilter>;
};


export type SubscriptionAggregateMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type SubscriptionAggregateMemoArgs = {
  filter?: InputMaybe<MemoFilter>;
};


export type SubscriptionAggregateMsigInfoArgs = {
  filter?: InputMaybe<MsigInfoFilter>;
};


export type SubscriptionAggregateMultisigArgs = {
  filter?: InputMaybe<MultisigFilter>;
};


export type SubscriptionAggregateNotificationArgs = {
  filter?: InputMaybe<NotificationFilter>;
};


export type SubscriptionAggregatePaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
};


export type SubscriptionAggregatePayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
};


export type SubscriptionAggregatePeriodArgs = {
  filter?: InputMaybe<PeriodFilter>;
};


export type SubscriptionAggregatePlanManagerArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
};


export type SubscriptionAggregatePolicyArgs = {
  filter?: InputMaybe<PolicyFilter>;
};


export type SubscriptionAggregatePollArgs = {
  filter?: InputMaybe<PollFilter>;
};


export type SubscriptionAggregatePriceOfferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
};


export type SubscriptionAggregatePricingPlanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
};


export type SubscriptionAggregateQuestcompleArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
};


export type SubscriptionAggregateQuestcompletArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
};


export type SubscriptionAggregateQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
};


export type SubscriptionAggregateReactionArgs = {
  filter?: InputMaybe<ReactionFilter>;
};


export type SubscriptionAggregateRedemptionArgs = {
  filter?: InputMaybe<RedemptionFilter>;
};


export type SubscriptionAggregateRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
};


export type SubscriptionAggregateSalarybandArgs = {
  filter?: InputMaybe<SalarybandFilter>;
};


export type SubscriptionAggregateSettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
};


export type SubscriptionAggregateSuspendArgs = {
  filter?: InputMaybe<SuspendFilter>;
};


export type SubscriptionAggregateTimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
};


export type SubscriptionAggregateTreasuryArgs = {
  filter?: InputMaybe<TreasuryFilter>;
};


export type SubscriptionAggregateTrsyPaymentArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
};


export type SubscriptionAggregateUpvtElectnArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
};


export type SubscriptionAggregateUpvtVoteArgs = {
  filter?: InputMaybe<UpvtVoteFilter>;
};


export type SubscriptionAggregateUserArgs = {
  filter?: InputMaybe<UserFilter>;
};


export type SubscriptionAggregateVotableArgs = {
  filter?: InputMaybe<VotableFilter>;
};


export type SubscriptionAggregateVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type SubscriptionAggregateVoteGroupArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
};


export type SubscriptionAggregateVoteTallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};


export type SubscriptionGetAlertArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetAssignbadgeArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetAssignmentArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetAttestationArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetBadgeArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetBalanceArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetBillingInfoArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetBudgetArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetCalendarArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetCircleArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetCmntSectionArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetCommentArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetDaoArgs = {
  details_daoName_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
};


export type SubscriptionGetDaoDraftArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetDhoArgs = {
  details_rootNode_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
};


export type SubscriptionGetDocumentArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetEditArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetElectnGroupArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetElectnRoundArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetEventArgs = {
  id: Scalars['ID']['input'];
};


export type SubscriptionGetMemberArgs = {
  details_member_n?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
};


export type SubscriptionGetMemoArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetMsigInfoArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetMultisigArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetNotificationArgs = {
  id: Scalars['ID']['input'];
};


export type SubscriptionGetPaymentArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetPayoutArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetPeriodArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetPlanManagerArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetPolicyArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetPollArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetPriceOfferArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetPricingPlanArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetQuestcompleArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetQuestcompletArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetQueststartArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetReactionArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetRedemptionArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetRoleArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetSalarybandArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetSettingsArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetSuspendArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetTimeshareArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetTreasuryArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetTrsyPaymentArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetUpvtElectnArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetUpvtVoteArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetUserArgs = {
  id: Scalars['ID']['input'];
};


export type SubscriptionGetVoteArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetVoteGroupArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionGetVoteTallyArgs = {
  docId: Scalars['String']['input'];
};


export type SubscriptionQueryAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AlertOrder>;
};


export type SubscriptionQueryAssignbadgeArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignbadgeOrder>;
};


export type SubscriptionQueryAssignmentArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignmentOrder>;
};


export type SubscriptionQueryAttestationArgs = {
  filter?: InputMaybe<AttestationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AttestationOrder>;
};


export type SubscriptionQueryBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BadgeOrder>;
};


export type SubscriptionQueryBalanceArgs = {
  filter?: InputMaybe<BalanceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BalanceOrder>;
};


export type SubscriptionQueryBillingInfoArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BillingInfoOrder>;
};


export type SubscriptionQueryBudgetArgs = {
  filter?: InputMaybe<BudgetFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BudgetOrder>;
};


export type SubscriptionQueryCalendarArgs = {
  filter?: InputMaybe<CalendarFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CalendarOrder>;
};


export type SubscriptionQueryCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CircleOrder>;
};


export type SubscriptionQueryCmntSectionArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CmntSectionOrder>;
};


export type SubscriptionQueryCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CommentOrder>;
};


export type SubscriptionQueryDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type SubscriptionQueryDaoDraftArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoDraftOrder>;
};


export type SubscriptionQueryDhoArgs = {
  filter?: InputMaybe<DhoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DhoOrder>;
};


export type SubscriptionQueryDocumentArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type SubscriptionQueryEditArgs = {
  filter?: InputMaybe<EditFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<EditOrder>;
};


export type SubscriptionQueryElectnGroupArgs = {
  filter?: InputMaybe<ElectnGroupFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnGroupOrder>;
};


export type SubscriptionQueryElectnRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type SubscriptionQueryEventArgs = {
  filter?: InputMaybe<EventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<EventOrder>;
};


export type SubscriptionQueryMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type SubscriptionQueryMemoArgs = {
  filter?: InputMaybe<MemoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemoOrder>;
};


export type SubscriptionQueryMsigInfoArgs = {
  filter?: InputMaybe<MsigInfoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MsigInfoOrder>;
};


export type SubscriptionQueryMultisigArgs = {
  filter?: InputMaybe<MultisigFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MultisigOrder>;
};


export type SubscriptionQueryNotificationArgs = {
  filter?: InputMaybe<NotificationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<NotificationOrder>;
};


export type SubscriptionQueryPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PaymentOrder>;
};


export type SubscriptionQueryPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PayoutOrder>;
};


export type SubscriptionQueryPeriodArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};


export type SubscriptionQueryPlanManagerArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PlanManagerOrder>;
};


export type SubscriptionQueryPolicyArgs = {
  filter?: InputMaybe<PolicyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PolicyOrder>;
};


export type SubscriptionQueryPollArgs = {
  filter?: InputMaybe<PollFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PollOrder>;
};


export type SubscriptionQueryPriceOfferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PriceOfferOrder>;
};


export type SubscriptionQueryPricingPlanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PricingPlanOrder>;
};


export type SubscriptionQueryQuestcompleArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QuestcompleOrder>;
};


export type SubscriptionQueryQuestcompletArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QuestcompletOrder>;
};


export type SubscriptionQueryQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QueststartOrder>;
};


export type SubscriptionQueryReactionArgs = {
  filter?: InputMaybe<ReactionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ReactionOrder>;
};


export type SubscriptionQueryRedemptionArgs = {
  filter?: InputMaybe<RedemptionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<RedemptionOrder>;
};


export type SubscriptionQueryRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<RoleOrder>;
};


export type SubscriptionQuerySalarybandArgs = {
  filter?: InputMaybe<SalarybandFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SalarybandOrder>;
};


export type SubscriptionQuerySettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SettingsOrder>;
};


export type SubscriptionQuerySuspendArgs = {
  filter?: InputMaybe<SuspendFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SuspendOrder>;
};


export type SubscriptionQueryTimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TimeshareOrder>;
};


export type SubscriptionQueryTreasuryArgs = {
  filter?: InputMaybe<TreasuryFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TreasuryOrder>;
};


export type SubscriptionQueryTrsyPaymentArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TrsyPaymentOrder>;
};


export type SubscriptionQueryUpvtElectnArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtElectnOrder>;
};


export type SubscriptionQueryUpvtVoteArgs = {
  filter?: InputMaybe<UpvtVoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtVoteOrder>;
};


export type SubscriptionQueryUserArgs = {
  filter?: InputMaybe<UserFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UserOrder>;
};


export type SubscriptionQueryVotableArgs = {
  filter?: InputMaybe<VotableFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VotableOrder>;
};


export type SubscriptionQueryVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type SubscriptionQueryVoteGroupArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteGroupOrder>;
};


export type SubscriptionQueryVoteTallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};

export type Suspend = Document & Votable & {
  __typename?: 'Suspend';
  ballotOptions_abstain_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_n?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_n?: Maybe<Scalars['String']['output']>;
  ballot_expiration_t?: Maybe<Scalars['DateTime']['output']>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_ballotAlignment_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_a?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_i?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_a?: Maybe<Scalars['String']['output']>;
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  details_description_s?: Maybe<Scalars['String']['output']>;
  details_originalDocument_c?: Maybe<Scalars['String']['output']>;
  details_originalDocument_i?: Maybe<Scalars['Int64']['output']>;
  details_state_s?: Maybe<Scalars['String']['output']>;
  details_title_s?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  suspend?: Maybe<Array<Document>>;
  suspendAggregate?: Maybe<DocumentAggregateResult>;
  system_clientVersion_s?: Maybe<Scalars['String']['output']>;
  system_commentName_n?: Maybe<Scalars['String']['output']>;
  system_contractVersion_s?: Maybe<Scalars['String']['output']>;
  system_description_s?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_t?: Maybe<Scalars['DateTime']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type SuspendDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type SuspendDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type SuspendOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type SuspendOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type SuspendSuspendArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type SuspendSuspendAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};


export type SuspendVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type SuspendVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type SuspendVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type SuspendVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type SuspendAggregateResult = {
  __typename?: 'SuspendAggregateResult';
  ballotOptions_abstain_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_abstain_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_fail_nMin?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMax?: Maybe<Scalars['String']['output']>;
  ballotOptions_pass_nMin?: Maybe<Scalars['String']['output']>;
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']['output']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_ballotAlignment_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotAlignment_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotAlignment_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_aMin?: Maybe<Scalars['String']['output']>;
  details_ballotQuorum_iAvg?: Maybe<Scalars['Float']['output']>;
  details_ballotQuorum_iMax?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iMin?: Maybe<Scalars['Int64']['output']>;
  details_ballotQuorum_iSum?: Maybe<Scalars['Int64']['output']>;
  details_ballotSupply_aMax?: Maybe<Scalars['String']['output']>;
  details_ballotSupply_aMin?: Maybe<Scalars['String']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  details_description_sMax?: Maybe<Scalars['String']['output']>;
  details_description_sMin?: Maybe<Scalars['String']['output']>;
  details_originalDocument_cMax?: Maybe<Scalars['String']['output']>;
  details_originalDocument_cMin?: Maybe<Scalars['String']['output']>;
  details_originalDocument_iAvg?: Maybe<Scalars['Float']['output']>;
  details_originalDocument_iMax?: Maybe<Scalars['Int64']['output']>;
  details_originalDocument_iMin?: Maybe<Scalars['Int64']['output']>;
  details_originalDocument_iSum?: Maybe<Scalars['Int64']['output']>;
  details_state_sMax?: Maybe<Scalars['String']['output']>;
  details_state_sMin?: Maybe<Scalars['String']['output']>;
  details_title_sMax?: Maybe<Scalars['String']['output']>;
  details_title_sMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_clientVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_commentName_nMax?: Maybe<Scalars['String']['output']>;
  system_commentName_nMin?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMax?: Maybe<Scalars['String']['output']>;
  system_contractVersion_sMin?: Maybe<Scalars['String']['output']>;
  system_description_sMax?: Maybe<Scalars['String']['output']>;
  system_description_sMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  system_originalApprovedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  system_originalApprovedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type SuspendFilter = {
  and?: InputMaybe<Array<InputMaybe<SuspendFilter>>>;
  ballotOptions_abstain_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_fail_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballotOptions_pass_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_ballotAlignment_i?: InputMaybe<Int64Filter>;
  details_ballotQuorum_a?: InputMaybe<StringTermFilter>;
  details_ballotQuorum_i?: InputMaybe<Int64Filter>;
  details_ballotSupply_a?: InputMaybe<StringTermFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_originalDocument_c?: InputMaybe<StringExactFilter>;
  details_originalDocument_i?: InputMaybe<Int64Filter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<SuspendHasFilter>>>;
  not?: InputMaybe<SuspendFilter>;
  or?: InputMaybe<Array<InputMaybe<SuspendFilter>>>;
  system_clientVersion_s?: InputMaybe<StringRegExpFilter>;
  system_commentName_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  system_contractVersion_s?: InputMaybe<StringRegExpFilter>;
  system_description_s?: InputMaybe<StringRegExpFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  system_originalApprovedDate_t?: InputMaybe<DateTimeFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum SuspendHasFilter {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Dao = 'dao',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsOriginalDocumentC = 'details_originalDocument_c',
  DetailsOriginalDocumentI = 'details_originalDocument_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DocId = 'docId',
  Ownedby = 'ownedby',
  Suspend = 'suspend',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type SuspendOrder = {
  asc?: InputMaybe<SuspendOrderable>;
  desc?: InputMaybe<SuspendOrderable>;
  then?: InputMaybe<SuspendOrder>;
};

export enum SuspendOrderable {
  BallotOptionsAbstainN = 'ballotOptions_abstain_n',
  BallotOptionsFailN = 'ballotOptions_fail_n',
  BallotOptionsPassN = 'ballotOptions_pass_n',
  BallotExpirationT = 'ballot_expiration_t',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsBallotAlignmentI = 'details_ballotAlignment_i',
  DetailsBallotQuorumA = 'details_ballotQuorum_a',
  DetailsBallotQuorumI = 'details_ballotQuorum_i',
  DetailsBallotSupplyA = 'details_ballotSupply_a',
  DetailsDaoI = 'details_dao_i',
  DetailsDescriptionS = 'details_description_s',
  DetailsOriginalDocumentC = 'details_originalDocument_c',
  DetailsOriginalDocumentI = 'details_originalDocument_i',
  DetailsStateS = 'details_state_s',
  DetailsTitleS = 'details_title_s',
  DocId = 'docId',
  SystemClientVersionS = 'system_clientVersion_s',
  SystemCommentNameN = 'system_commentName_n',
  SystemContractVersionS = 'system_contractVersion_s',
  SystemDescriptionS = 'system_description_s',
  SystemNodeLabelS = 'system_nodeLabel_s',
  SystemOriginalApprovedDateT = 'system_originalApprovedDate_t',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type SuspendPatch = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']['input']>;
  details_originalDocument_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  suspend?: InputMaybe<Array<DocumentRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type SuspendRef = {
  ballotOptions_abstain_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_fail_n?: InputMaybe<Scalars['String']['input']>;
  ballotOptions_pass_n?: InputMaybe<Scalars['String']['input']>;
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_ballotAlignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotQuorum_a?: InputMaybe<Scalars['String']['input']>;
  details_ballotQuorum_i?: InputMaybe<Scalars['Int64']['input']>;
  details_ballotSupply_a?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_originalDocument_c?: InputMaybe<Scalars['String']['input']>;
  details_originalDocument_i?: InputMaybe<Scalars['Int64']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  suspend?: InputMaybe<Array<DocumentRef>>;
  system_clientVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_commentName_n?: InputMaybe<Scalars['String']['input']>;
  system_contractVersion_s?: InputMaybe<Scalars['String']['input']>;
  system_description_s?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  system_originalApprovedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type Timeshare = Document & {
  __typename?: 'Timeshare';
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_assignment_c?: Maybe<Scalars['String']['output']>;
  details_assignment_i?: Maybe<Scalars['Int64']['output']>;
  details_startDate_t?: Maybe<Scalars['DateTime']['output']>;
  details_timeShareX100_i?: Maybe<Scalars['Int64']['output']>;
  docId: Scalars['String']['output'];
  nextimeshare?: Maybe<Array<Timeshare>>;
  nextimeshareAggregate?: Maybe<TimeshareAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type TimeshareNextimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TimeshareOrder>;
};


export type TimeshareNextimeshareAggregateArgs = {
  filter?: InputMaybe<TimeshareFilter>;
};

export type TimeshareAggregateResult = {
  __typename?: 'TimeshareAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_assignment_cMax?: Maybe<Scalars['String']['output']>;
  details_assignment_cMin?: Maybe<Scalars['String']['output']>;
  details_assignment_iAvg?: Maybe<Scalars['Float']['output']>;
  details_assignment_iMax?: Maybe<Scalars['Int64']['output']>;
  details_assignment_iMin?: Maybe<Scalars['Int64']['output']>;
  details_assignment_iSum?: Maybe<Scalars['Int64']['output']>;
  details_startDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_startDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  details_timeShareX100_iAvg?: Maybe<Scalars['Float']['output']>;
  details_timeShareX100_iMax?: Maybe<Scalars['Int64']['output']>;
  details_timeShareX100_iMin?: Maybe<Scalars['Int64']['output']>;
  details_timeShareX100_iSum?: Maybe<Scalars['Int64']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type TimeshareFilter = {
  and?: InputMaybe<Array<InputMaybe<TimeshareFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_assignment_c?: InputMaybe<StringExactFilter>;
  details_assignment_i?: InputMaybe<Int64Filter>;
  details_startDate_t?: InputMaybe<DateTimeFilter>;
  details_timeShareX100_i?: InputMaybe<Int64Filter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<TimeshareHasFilter>>>;
  not?: InputMaybe<TimeshareFilter>;
  or?: InputMaybe<Array<InputMaybe<TimeshareFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum TimeshareHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAssignmentC = 'details_assignment_c',
  DetailsAssignmentI = 'details_assignment_i',
  DetailsStartDateT = 'details_startDate_t',
  DetailsTimeShareX100I = 'details_timeShareX100_i',
  DocId = 'docId',
  Nextimeshare = 'nextimeshare',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type TimeshareOrder = {
  asc?: InputMaybe<TimeshareOrderable>;
  desc?: InputMaybe<TimeshareOrderable>;
  then?: InputMaybe<TimeshareOrder>;
};

export enum TimeshareOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAssignmentC = 'details_assignment_c',
  DetailsAssignmentI = 'details_assignment_i',
  DetailsStartDateT = 'details_startDate_t',
  DetailsTimeShareX100I = 'details_timeShareX100_i',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type TimesharePatch = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_assignment_c?: InputMaybe<Scalars['String']['input']>;
  details_assignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  nextimeshare?: InputMaybe<Array<TimeshareRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TimeshareRef = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_assignment_c?: InputMaybe<Scalars['String']['input']>;
  details_assignment_i?: InputMaybe<Scalars['Int64']['input']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_timeShareX100_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  nextimeshare?: InputMaybe<Array<TimeshareRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type Treasury = Document & {
  __typename?: 'Treasury';
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_dao_i?: Maybe<Scalars['Int64']['output']>;
  docId: Scalars['String']['output'];
  payment?: Maybe<Array<TrsyPayment>>;
  paymentAggregate?: Maybe<TrsyPaymentAggregateResult>;
  redemption?: Maybe<Array<Redemption>>;
  redemptionAggregate?: Maybe<RedemptionAggregateResult>;
  settings?: Maybe<Array<Settings>>;
  settingsAggregate?: Maybe<SettingsAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  treasurer?: Maybe<Array<Member>>;
  treasurerAggregate?: Maybe<MemberAggregateResult>;
  treasuryof?: Maybe<Array<Dao>>;
  treasuryofAggregate?: Maybe<DaoAggregateResult>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type TreasuryPaymentArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TrsyPaymentOrder>;
};


export type TreasuryPaymentAggregateArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
};


export type TreasuryRedemptionArgs = {
  filter?: InputMaybe<RedemptionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<RedemptionOrder>;
};


export type TreasuryRedemptionAggregateArgs = {
  filter?: InputMaybe<RedemptionFilter>;
};


export type TreasurySettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SettingsOrder>;
};


export type TreasurySettingsAggregateArgs = {
  filter?: InputMaybe<SettingsFilter>;
};


export type TreasuryTreasurerArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type TreasuryTreasurerAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type TreasuryTreasuryofArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type TreasuryTreasuryofAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};

export type TreasuryAggregateResult = {
  __typename?: 'TreasuryAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_dao_iAvg?: Maybe<Scalars['Float']['output']>;
  details_dao_iMax?: Maybe<Scalars['Int64']['output']>;
  details_dao_iMin?: Maybe<Scalars['Int64']['output']>;
  details_dao_iSum?: Maybe<Scalars['Int64']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type TreasuryFilter = {
  and?: InputMaybe<Array<InputMaybe<TreasuryFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_dao_i?: InputMaybe<Int64Filter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<TreasuryHasFilter>>>;
  not?: InputMaybe<TreasuryFilter>;
  or?: InputMaybe<Array<InputMaybe<TreasuryFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum TreasuryHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoI = 'details_dao_i',
  DocId = 'docId',
  Payment = 'payment',
  Redemption = 'redemption',
  Settings = 'settings',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Treasurer = 'treasurer',
  Treasuryof = 'treasuryof',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type TreasuryOrder = {
  asc?: InputMaybe<TreasuryOrderable>;
  desc?: InputMaybe<TreasuryOrderable>;
  then?: InputMaybe<TreasuryOrder>;
};

export enum TreasuryOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDaoI = 'details_dao_i',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type TreasuryPatch = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  payment?: InputMaybe<Array<TrsyPaymentRef>>;
  redemption?: InputMaybe<Array<RedemptionRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  treasurer?: InputMaybe<Array<MemberRef>>;
  treasuryof?: InputMaybe<Array<DaoRef>>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TreasuryRef = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_dao_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  payment?: InputMaybe<Array<TrsyPaymentRef>>;
  redemption?: InputMaybe<Array<RedemptionRef>>;
  settings?: InputMaybe<Array<SettingsRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  treasurer?: InputMaybe<Array<MemberRef>>;
  treasuryof?: InputMaybe<Array<DaoRef>>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TrsyPayment = Document & {
  __typename?: 'TrsyPayment';
  attestation?: Maybe<Array<Attestation>>;
  attestationAggregate?: Maybe<AttestationAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_amountPaid_a?: Maybe<Scalars['String']['output']>;
  details_confirmedDate_t?: Maybe<Scalars['DateTime']['output']>;
  details_creator_n?: Maybe<Scalars['String']['output']>;
  details_isConfirmed_i?: Maybe<Scalars['Int64']['output']>;
  details_msig_n?: Maybe<Scalars['String']['output']>;
  details_nativeAmountPaid_a?: Maybe<Scalars['String']['output']>;
  details_notes_s?: Maybe<Scalars['String']['output']>;
  details_state_s?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  legacy_id_i?: Maybe<Scalars['Int64']['output']>;
  legacy_redemptionId_i?: Maybe<Scalars['Int64']['output']>;
  msiginfo?: Maybe<Array<MsigInfo>>;
  msiginfoAggregate?: Maybe<MsigInfoAggregateResult>;
  pays?: Maybe<Array<Redemption>>;
  paysAggregate?: Maybe<RedemptionAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};


export type TrsyPaymentAttestationArgs = {
  filter?: InputMaybe<AttestationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AttestationOrder>;
};


export type TrsyPaymentAttestationAggregateArgs = {
  filter?: InputMaybe<AttestationFilter>;
};


export type TrsyPaymentMsiginfoArgs = {
  filter?: InputMaybe<MsigInfoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MsigInfoOrder>;
};


export type TrsyPaymentMsiginfoAggregateArgs = {
  filter?: InputMaybe<MsigInfoFilter>;
};


export type TrsyPaymentPaysArgs = {
  filter?: InputMaybe<RedemptionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<RedemptionOrder>;
};


export type TrsyPaymentPaysAggregateArgs = {
  filter?: InputMaybe<RedemptionFilter>;
};

export type TrsyPaymentAggregateResult = {
  __typename?: 'TrsyPaymentAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_amountPaid_aMax?: Maybe<Scalars['String']['output']>;
  details_amountPaid_aMin?: Maybe<Scalars['String']['output']>;
  details_confirmedDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_confirmedDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  details_creator_nMax?: Maybe<Scalars['String']['output']>;
  details_creator_nMin?: Maybe<Scalars['String']['output']>;
  details_isConfirmed_iAvg?: Maybe<Scalars['Float']['output']>;
  details_isConfirmed_iMax?: Maybe<Scalars['Int64']['output']>;
  details_isConfirmed_iMin?: Maybe<Scalars['Int64']['output']>;
  details_isConfirmed_iSum?: Maybe<Scalars['Int64']['output']>;
  details_msig_nMax?: Maybe<Scalars['String']['output']>;
  details_msig_nMin?: Maybe<Scalars['String']['output']>;
  details_nativeAmountPaid_aMax?: Maybe<Scalars['String']['output']>;
  details_nativeAmountPaid_aMin?: Maybe<Scalars['String']['output']>;
  details_notes_sMax?: Maybe<Scalars['String']['output']>;
  details_notes_sMin?: Maybe<Scalars['String']['output']>;
  details_state_sMax?: Maybe<Scalars['String']['output']>;
  details_state_sMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  legacy_id_iAvg?: Maybe<Scalars['Float']['output']>;
  legacy_id_iMax?: Maybe<Scalars['Int64']['output']>;
  legacy_id_iMin?: Maybe<Scalars['Int64']['output']>;
  legacy_id_iSum?: Maybe<Scalars['Int64']['output']>;
  legacy_redemptionId_iAvg?: Maybe<Scalars['Float']['output']>;
  legacy_redemptionId_iMax?: Maybe<Scalars['Int64']['output']>;
  legacy_redemptionId_iMin?: Maybe<Scalars['Int64']['output']>;
  legacy_redemptionId_iSum?: Maybe<Scalars['Int64']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type TrsyPaymentFilter = {
  and?: InputMaybe<Array<InputMaybe<TrsyPaymentFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_amountPaid_a?: InputMaybe<StringTermFilter>;
  details_confirmedDate_t?: InputMaybe<DateTimeFilter>;
  details_creator_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_isConfirmed_i?: InputMaybe<Int64Filter>;
  details_msig_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_nativeAmountPaid_a?: InputMaybe<StringTermFilter>;
  details_notes_s?: InputMaybe<StringRegExpFilter>;
  details_state_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<TrsyPaymentHasFilter>>>;
  legacy_id_i?: InputMaybe<Int64Filter>;
  legacy_redemptionId_i?: InputMaybe<Int64Filter>;
  not?: InputMaybe<TrsyPaymentFilter>;
  or?: InputMaybe<Array<InputMaybe<TrsyPaymentFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum TrsyPaymentHasFilter {
  Attestation = 'attestation',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAmountPaidA = 'details_amountPaid_a',
  DetailsConfirmedDateT = 'details_confirmedDate_t',
  DetailsCreatorN = 'details_creator_n',
  DetailsIsConfirmedI = 'details_isConfirmed_i',
  DetailsMsigN = 'details_msig_n',
  DetailsNativeAmountPaidA = 'details_nativeAmountPaid_a',
  DetailsNotesS = 'details_notes_s',
  DetailsStateS = 'details_state_s',
  DocId = 'docId',
  LegacyIdI = 'legacy_id_i',
  LegacyRedemptionIdI = 'legacy_redemptionId_i',
  Msiginfo = 'msiginfo',
  Pays = 'pays',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type TrsyPaymentOrder = {
  asc?: InputMaybe<TrsyPaymentOrderable>;
  desc?: InputMaybe<TrsyPaymentOrderable>;
  then?: InputMaybe<TrsyPaymentOrder>;
};

export enum TrsyPaymentOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsAmountPaidA = 'details_amountPaid_a',
  DetailsConfirmedDateT = 'details_confirmedDate_t',
  DetailsCreatorN = 'details_creator_n',
  DetailsIsConfirmedI = 'details_isConfirmed_i',
  DetailsMsigN = 'details_msig_n',
  DetailsNativeAmountPaidA = 'details_nativeAmountPaid_a',
  DetailsNotesS = 'details_notes_s',
  DetailsStateS = 'details_state_s',
  DocId = 'docId',
  LegacyIdI = 'legacy_id_i',
  LegacyRedemptionIdI = 'legacy_redemptionId_i',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type TrsyPaymentPatch = {
  attestation?: InputMaybe<Array<AttestationRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_amountPaid_a?: InputMaybe<Scalars['String']['input']>;
  details_confirmedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_creator_n?: InputMaybe<Scalars['String']['input']>;
  details_isConfirmed_i?: InputMaybe<Scalars['Int64']['input']>;
  details_msig_n?: InputMaybe<Scalars['String']['input']>;
  details_nativeAmountPaid_a?: InputMaybe<Scalars['String']['input']>;
  details_notes_s?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  legacy_id_i?: InputMaybe<Scalars['Int64']['input']>;
  legacy_redemptionId_i?: InputMaybe<Scalars['Int64']['input']>;
  msiginfo?: InputMaybe<Array<MsigInfoRef>>;
  pays?: InputMaybe<Array<RedemptionRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TrsyPaymentRef = {
  attestation?: InputMaybe<Array<AttestationRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_amountPaid_a?: InputMaybe<Scalars['String']['input']>;
  details_confirmedDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_creator_n?: InputMaybe<Scalars['String']['input']>;
  details_isConfirmed_i?: InputMaybe<Scalars['Int64']['input']>;
  details_msig_n?: InputMaybe<Scalars['String']['input']>;
  details_nativeAmountPaid_a?: InputMaybe<Scalars['String']['input']>;
  details_notes_s?: InputMaybe<Scalars['String']['input']>;
  details_state_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  legacy_id_i?: InputMaybe<Scalars['Int64']['input']>;
  legacy_redemptionId_i?: InputMaybe<Scalars['Int64']['input']>;
  msiginfo?: InputMaybe<Array<MsigInfoRef>>;
  pays?: InputMaybe<Array<RedemptionRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TypeVersion = {
  __typename?: 'TypeVersion';
  type: Scalars['String']['output'];
  version?: Maybe<Scalars['String']['output']>;
};

export type TypeVersionAggregateResult = {
  __typename?: 'TypeVersionAggregateResult';
  count?: Maybe<Scalars['Int']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  versionMax?: Maybe<Scalars['String']['output']>;
  versionMin?: Maybe<Scalars['String']['output']>;
};

export type TypeVersionFilter = {
  and?: InputMaybe<Array<InputMaybe<TypeVersionFilter>>>;
  has?: InputMaybe<Array<InputMaybe<TypeVersionHasFilter>>>;
  not?: InputMaybe<TypeVersionFilter>;
  or?: InputMaybe<Array<InputMaybe<TypeVersionFilter>>>;
  type?: InputMaybe<StringExactFilter>;
  version?: InputMaybe<StringExactFilter>;
};

export enum TypeVersionHasFilter {
  Type = 'type',
  Version = 'version'
}

export type TypeVersionOrder = {
  asc?: InputMaybe<TypeVersionOrderable>;
  desc?: InputMaybe<TypeVersionOrderable>;
  then?: InputMaybe<TypeVersionOrder>;
};

export enum TypeVersionOrderable {
  Type = 'type',
  Version = 'version'
}

export type TypeVersionPatch = {
  type?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type TypeVersionRef = {
  type?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateAlertInput = {
  filter: AlertFilter;
  remove?: InputMaybe<AlertPatch>;
  set?: InputMaybe<AlertPatch>;
};

export type UpdateAlertPayload = {
  __typename?: 'UpdateAlertPayload';
  alert?: Maybe<Array<Maybe<Alert>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateAlertPayloadAlertArgs = {
  filter?: InputMaybe<AlertFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AlertOrder>;
};

export type UpdateAssignbadgeInput = {
  filter: AssignbadgeFilter;
  remove?: InputMaybe<AssignbadgePatch>;
  set?: InputMaybe<AssignbadgePatch>;
};

export type UpdateAssignbadgePayload = {
  __typename?: 'UpdateAssignbadgePayload';
  assignbadge?: Maybe<Array<Maybe<Assignbadge>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateAssignbadgePayloadAssignbadgeArgs = {
  filter?: InputMaybe<AssignbadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignbadgeOrder>;
};

export type UpdateAssignmentInput = {
  filter: AssignmentFilter;
  remove?: InputMaybe<AssignmentPatch>;
  set?: InputMaybe<AssignmentPatch>;
};

export type UpdateAssignmentPayload = {
  __typename?: 'UpdateAssignmentPayload';
  assignment?: Maybe<Array<Maybe<Assignment>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateAssignmentPayloadAssignmentArgs = {
  filter?: InputMaybe<AssignmentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AssignmentOrder>;
};

export type UpdateAttestationInput = {
  filter: AttestationFilter;
  remove?: InputMaybe<AttestationPatch>;
  set?: InputMaybe<AttestationPatch>;
};

export type UpdateAttestationPayload = {
  __typename?: 'UpdateAttestationPayload';
  attestation?: Maybe<Array<Maybe<Attestation>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateAttestationPayloadAttestationArgs = {
  filter?: InputMaybe<AttestationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<AttestationOrder>;
};

export type UpdateBadgeInput = {
  filter: BadgeFilter;
  remove?: InputMaybe<BadgePatch>;
  set?: InputMaybe<BadgePatch>;
};

export type UpdateBadgePayload = {
  __typename?: 'UpdateBadgePayload';
  badge?: Maybe<Array<Maybe<Badge>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateBadgePayloadBadgeArgs = {
  filter?: InputMaybe<BadgeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BadgeOrder>;
};

export type UpdateBalanceInput = {
  filter: BalanceFilter;
  remove?: InputMaybe<BalancePatch>;
  set?: InputMaybe<BalancePatch>;
};

export type UpdateBalancePayload = {
  __typename?: 'UpdateBalancePayload';
  balance?: Maybe<Array<Maybe<Balance>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateBalancePayloadBalanceArgs = {
  filter?: InputMaybe<BalanceFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BalanceOrder>;
};

export type UpdateBillingInfoInput = {
  filter: BillingInfoFilter;
  remove?: InputMaybe<BillingInfoPatch>;
  set?: InputMaybe<BillingInfoPatch>;
};

export type UpdateBillingInfoPayload = {
  __typename?: 'UpdateBillingInfoPayload';
  billingInfo?: Maybe<Array<Maybe<BillingInfo>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateBillingInfoPayloadBillingInfoArgs = {
  filter?: InputMaybe<BillingInfoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BillingInfoOrder>;
};

export type UpdateBudgetInput = {
  filter: BudgetFilter;
  remove?: InputMaybe<BudgetPatch>;
  set?: InputMaybe<BudgetPatch>;
};

export type UpdateBudgetPayload = {
  __typename?: 'UpdateBudgetPayload';
  budget?: Maybe<Array<Maybe<Budget>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateBudgetPayloadBudgetArgs = {
  filter?: InputMaybe<BudgetFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<BudgetOrder>;
};

export type UpdateCalendarInput = {
  filter: CalendarFilter;
  remove?: InputMaybe<CalendarPatch>;
  set?: InputMaybe<CalendarPatch>;
};

export type UpdateCalendarPayload = {
  __typename?: 'UpdateCalendarPayload';
  calendar?: Maybe<Array<Maybe<Calendar>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateCalendarPayloadCalendarArgs = {
  filter?: InputMaybe<CalendarFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CalendarOrder>;
};

export type UpdateCircleInput = {
  filter: CircleFilter;
  remove?: InputMaybe<CirclePatch>;
  set?: InputMaybe<CirclePatch>;
};

export type UpdateCirclePayload = {
  __typename?: 'UpdateCirclePayload';
  circle?: Maybe<Array<Maybe<Circle>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateCirclePayloadCircleArgs = {
  filter?: InputMaybe<CircleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CircleOrder>;
};

export type UpdateCmntSectionInput = {
  filter: CmntSectionFilter;
  remove?: InputMaybe<CmntSectionPatch>;
  set?: InputMaybe<CmntSectionPatch>;
};

export type UpdateCmntSectionPayload = {
  __typename?: 'UpdateCmntSectionPayload';
  cmntSection?: Maybe<Array<Maybe<CmntSection>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateCmntSectionPayloadCmntSectionArgs = {
  filter?: InputMaybe<CmntSectionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CmntSectionOrder>;
};

export type UpdateCommentInput = {
  filter: CommentFilter;
  remove?: InputMaybe<CommentPatch>;
  set?: InputMaybe<CommentPatch>;
};

export type UpdateCommentPayload = {
  __typename?: 'UpdateCommentPayload';
  comment?: Maybe<Array<Maybe<Comment>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateCommentPayloadCommentArgs = {
  filter?: InputMaybe<CommentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CommentOrder>;
};

export type UpdateCursorInput = {
  filter: CursorFilter;
  remove?: InputMaybe<CursorPatch>;
  set?: InputMaybe<CursorPatch>;
};

export type UpdateCursorPayload = {
  __typename?: 'UpdateCursorPayload';
  cursor?: Maybe<Array<Maybe<Cursor>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateCursorPayloadCursorArgs = {
  filter?: InputMaybe<CursorFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<CursorOrder>;
};

export type UpdateDaoDraftInput = {
  filter: DaoDraftFilter;
  remove?: InputMaybe<DaoDraftPatch>;
  set?: InputMaybe<DaoDraftPatch>;
};

export type UpdateDaoDraftPayload = {
  __typename?: 'UpdateDaoDraftPayload';
  daoDraft?: Maybe<Array<Maybe<DaoDraft>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateDaoDraftPayloadDaoDraftArgs = {
  filter?: InputMaybe<DaoDraftFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoDraftOrder>;
};

export type UpdateDaoInput = {
  filter: DaoFilter;
  remove?: InputMaybe<DaoPatch>;
  set?: InputMaybe<DaoPatch>;
};

export type UpdateDaoPayload = {
  __typename?: 'UpdateDaoPayload';
  dao?: Maybe<Array<Maybe<Dao>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateDaoPayloadDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};

export type UpdateDhoInput = {
  filter: DhoFilter;
  remove?: InputMaybe<DhoPatch>;
  set?: InputMaybe<DhoPatch>;
};

export type UpdateDhoPayload = {
  __typename?: 'UpdateDhoPayload';
  dho?: Maybe<Array<Maybe<Dho>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateDhoPayloadDhoArgs = {
  filter?: InputMaybe<DhoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DhoOrder>;
};

export type UpdateDoccacheConfigInput = {
  filter: DoccacheConfigFilter;
  remove?: InputMaybe<DoccacheConfigPatch>;
  set?: InputMaybe<DoccacheConfigPatch>;
};

export type UpdateDoccacheConfigPayload = {
  __typename?: 'UpdateDoccacheConfigPayload';
  doccacheConfig?: Maybe<Array<Maybe<DoccacheConfig>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateDoccacheConfigPayloadDoccacheConfigArgs = {
  filter?: InputMaybe<DoccacheConfigFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DoccacheConfigOrder>;
};

export type UpdateDocumentInput = {
  filter: DocumentFilter;
  remove?: InputMaybe<DocumentPatch>;
  set?: InputMaybe<DocumentPatch>;
};

export type UpdateDocumentPayload = {
  __typename?: 'UpdateDocumentPayload';
  document?: Maybe<Array<Maybe<Document>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateDocumentPayloadDocumentArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};

export type UpdateEditInput = {
  filter: EditFilter;
  remove?: InputMaybe<EditPatch>;
  set?: InputMaybe<EditPatch>;
};

export type UpdateEditPayload = {
  __typename?: 'UpdateEditPayload';
  edit?: Maybe<Array<Maybe<Edit>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateEditPayloadEditArgs = {
  filter?: InputMaybe<EditFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<EditOrder>;
};

export type UpdateElectnGroupInput = {
  filter: ElectnGroupFilter;
  remove?: InputMaybe<ElectnGroupPatch>;
  set?: InputMaybe<ElectnGroupPatch>;
};

export type UpdateElectnGroupPayload = {
  __typename?: 'UpdateElectnGroupPayload';
  electnGroup?: Maybe<Array<Maybe<ElectnGroup>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateElectnGroupPayloadElectnGroupArgs = {
  filter?: InputMaybe<ElectnGroupFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnGroupOrder>;
};

export type UpdateElectnRoundInput = {
  filter: ElectnRoundFilter;
  remove?: InputMaybe<ElectnRoundPatch>;
  set?: InputMaybe<ElectnRoundPatch>;
};

export type UpdateElectnRoundPayload = {
  __typename?: 'UpdateElectnRoundPayload';
  electnRound?: Maybe<Array<Maybe<ElectnRound>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateElectnRoundPayloadElectnRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};

export type UpdateEventInput = {
  filter: EventFilter;
  remove?: InputMaybe<EventPatch>;
  set?: InputMaybe<EventPatch>;
};

export type UpdateEventPayload = {
  __typename?: 'UpdateEventPayload';
  event?: Maybe<Array<Maybe<Event>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateEventPayloadEventArgs = {
  filter?: InputMaybe<EventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<EventOrder>;
};

export type UpdateMemberInput = {
  filter: MemberFilter;
  remove?: InputMaybe<MemberPatch>;
  set?: InputMaybe<MemberPatch>;
};

export type UpdateMemberPayload = {
  __typename?: 'UpdateMemberPayload';
  member?: Maybe<Array<Maybe<Member>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateMemberPayloadMemberArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};

export type UpdateMemoInput = {
  filter: MemoFilter;
  remove?: InputMaybe<MemoPatch>;
  set?: InputMaybe<MemoPatch>;
};

export type UpdateMemoPayload = {
  __typename?: 'UpdateMemoPayload';
  memo?: Maybe<Array<Maybe<Memo>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateMemoPayloadMemoArgs = {
  filter?: InputMaybe<MemoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemoOrder>;
};

export type UpdateMsigInfoInput = {
  filter: MsigInfoFilter;
  remove?: InputMaybe<MsigInfoPatch>;
  set?: InputMaybe<MsigInfoPatch>;
};

export type UpdateMsigInfoPayload = {
  __typename?: 'UpdateMsigInfoPayload';
  msigInfo?: Maybe<Array<Maybe<MsigInfo>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateMsigInfoPayloadMsigInfoArgs = {
  filter?: InputMaybe<MsigInfoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MsigInfoOrder>;
};

export type UpdateMultisigInput = {
  filter: MultisigFilter;
  remove?: InputMaybe<MultisigPatch>;
  set?: InputMaybe<MultisigPatch>;
};

export type UpdateMultisigPayload = {
  __typename?: 'UpdateMultisigPayload';
  multisig?: Maybe<Array<Maybe<Multisig>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateMultisigPayloadMultisigArgs = {
  filter?: InputMaybe<MultisigFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MultisigOrder>;
};

export type UpdateNotificationInput = {
  filter: NotificationFilter;
  remove?: InputMaybe<NotificationPatch>;
  set?: InputMaybe<NotificationPatch>;
};

export type UpdateNotificationPayload = {
  __typename?: 'UpdateNotificationPayload';
  notification?: Maybe<Array<Maybe<Notification>>>;
  numUids?: Maybe<Scalars['Int']['output']>;
};


export type UpdateNotificationPayloadNotificationArgs = {
  filter?: InputMaybe<NotificationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<NotificationOrder>;
};

export type UpdatePaymentInput = {
  filter: PaymentFilter;
  remove?: InputMaybe<PaymentPatch>;
  set?: InputMaybe<PaymentPatch>;
};

export type UpdatePaymentPayload = {
  __typename?: 'UpdatePaymentPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  payment?: Maybe<Array<Maybe<Payment>>>;
};


export type UpdatePaymentPayloadPaymentArgs = {
  filter?: InputMaybe<PaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PaymentOrder>;
};

export type UpdatePayoutInput = {
  filter: PayoutFilter;
  remove?: InputMaybe<PayoutPatch>;
  set?: InputMaybe<PayoutPatch>;
};

export type UpdatePayoutPayload = {
  __typename?: 'UpdatePayoutPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  payout?: Maybe<Array<Maybe<Payout>>>;
};


export type UpdatePayoutPayloadPayoutArgs = {
  filter?: InputMaybe<PayoutFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PayoutOrder>;
};

export type UpdatePeriodInput = {
  filter: PeriodFilter;
  remove?: InputMaybe<PeriodPatch>;
  set?: InputMaybe<PeriodPatch>;
};

export type UpdatePeriodPayload = {
  __typename?: 'UpdatePeriodPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  period?: Maybe<Array<Maybe<Period>>>;
};


export type UpdatePeriodPayloadPeriodArgs = {
  filter?: InputMaybe<PeriodFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PeriodOrder>;
};

export type UpdatePlanManagerInput = {
  filter: PlanManagerFilter;
  remove?: InputMaybe<PlanManagerPatch>;
  set?: InputMaybe<PlanManagerPatch>;
};

export type UpdatePlanManagerPayload = {
  __typename?: 'UpdatePlanManagerPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  planManager?: Maybe<Array<Maybe<PlanManager>>>;
};


export type UpdatePlanManagerPayloadPlanManagerArgs = {
  filter?: InputMaybe<PlanManagerFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PlanManagerOrder>;
};

export type UpdatePolicyInput = {
  filter: PolicyFilter;
  remove?: InputMaybe<PolicyPatch>;
  set?: InputMaybe<PolicyPatch>;
};

export type UpdatePolicyPayload = {
  __typename?: 'UpdatePolicyPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  policy?: Maybe<Array<Maybe<Policy>>>;
};


export type UpdatePolicyPayloadPolicyArgs = {
  filter?: InputMaybe<PolicyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PolicyOrder>;
};

export type UpdatePollInput = {
  filter: PollFilter;
  remove?: InputMaybe<PollPatch>;
  set?: InputMaybe<PollPatch>;
};

export type UpdatePollPayload = {
  __typename?: 'UpdatePollPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  poll?: Maybe<Array<Maybe<Poll>>>;
};


export type UpdatePollPayloadPollArgs = {
  filter?: InputMaybe<PollFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PollOrder>;
};

export type UpdatePriceOfferInput = {
  filter: PriceOfferFilter;
  remove?: InputMaybe<PriceOfferPatch>;
  set?: InputMaybe<PriceOfferPatch>;
};

export type UpdatePriceOfferPayload = {
  __typename?: 'UpdatePriceOfferPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  priceOffer?: Maybe<Array<Maybe<PriceOffer>>>;
};


export type UpdatePriceOfferPayloadPriceOfferArgs = {
  filter?: InputMaybe<PriceOfferFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PriceOfferOrder>;
};

export type UpdatePricingPlanInput = {
  filter: PricingPlanFilter;
  remove?: InputMaybe<PricingPlanPatch>;
  set?: InputMaybe<PricingPlanPatch>;
};

export type UpdatePricingPlanPayload = {
  __typename?: 'UpdatePricingPlanPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  pricingPlan?: Maybe<Array<Maybe<PricingPlan>>>;
};


export type UpdatePricingPlanPayloadPricingPlanArgs = {
  filter?: InputMaybe<PricingPlanFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<PricingPlanOrder>;
};

export type UpdateQuestcompleInput = {
  filter: QuestcompleFilter;
  remove?: InputMaybe<QuestcomplePatch>;
  set?: InputMaybe<QuestcomplePatch>;
};

export type UpdateQuestcomplePayload = {
  __typename?: 'UpdateQuestcomplePayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  questcomple?: Maybe<Array<Maybe<Questcomple>>>;
};


export type UpdateQuestcomplePayloadQuestcompleArgs = {
  filter?: InputMaybe<QuestcompleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QuestcompleOrder>;
};

export type UpdateQuestcompletInput = {
  filter: QuestcompletFilter;
  remove?: InputMaybe<QuestcompletPatch>;
  set?: InputMaybe<QuestcompletPatch>;
};

export type UpdateQuestcompletPayload = {
  __typename?: 'UpdateQuestcompletPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  questcomplet?: Maybe<Array<Maybe<Questcomplet>>>;
};


export type UpdateQuestcompletPayloadQuestcompletArgs = {
  filter?: InputMaybe<QuestcompletFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QuestcompletOrder>;
};

export type UpdateQueststartInput = {
  filter: QueststartFilter;
  remove?: InputMaybe<QueststartPatch>;
  set?: InputMaybe<QueststartPatch>;
};

export type UpdateQueststartPayload = {
  __typename?: 'UpdateQueststartPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  queststart?: Maybe<Array<Maybe<Queststart>>>;
};


export type UpdateQueststartPayloadQueststartArgs = {
  filter?: InputMaybe<QueststartFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<QueststartOrder>;
};

export type UpdateReactionInput = {
  filter: ReactionFilter;
  remove?: InputMaybe<ReactionPatch>;
  set?: InputMaybe<ReactionPatch>;
};

export type UpdateReactionPayload = {
  __typename?: 'UpdateReactionPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  reaction?: Maybe<Array<Maybe<Reaction>>>;
};


export type UpdateReactionPayloadReactionArgs = {
  filter?: InputMaybe<ReactionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ReactionOrder>;
};

export type UpdateRedemptionInput = {
  filter: RedemptionFilter;
  remove?: InputMaybe<RedemptionPatch>;
  set?: InputMaybe<RedemptionPatch>;
};

export type UpdateRedemptionPayload = {
  __typename?: 'UpdateRedemptionPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  redemption?: Maybe<Array<Maybe<Redemption>>>;
};


export type UpdateRedemptionPayloadRedemptionArgs = {
  filter?: InputMaybe<RedemptionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<RedemptionOrder>;
};

export type UpdateRoleInput = {
  filter: RoleFilter;
  remove?: InputMaybe<RolePatch>;
  set?: InputMaybe<RolePatch>;
};

export type UpdateRolePayload = {
  __typename?: 'UpdateRolePayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  role?: Maybe<Array<Maybe<Role>>>;
};


export type UpdateRolePayloadRoleArgs = {
  filter?: InputMaybe<RoleFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<RoleOrder>;
};

export type UpdateSalarybandInput = {
  filter: SalarybandFilter;
  remove?: InputMaybe<SalarybandPatch>;
  set?: InputMaybe<SalarybandPatch>;
};

export type UpdateSalarybandPayload = {
  __typename?: 'UpdateSalarybandPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  salaryband?: Maybe<Array<Maybe<Salaryband>>>;
};


export type UpdateSalarybandPayloadSalarybandArgs = {
  filter?: InputMaybe<SalarybandFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SalarybandOrder>;
};

export type UpdateSettingsInput = {
  filter: SettingsFilter;
  remove?: InputMaybe<SettingsPatch>;
  set?: InputMaybe<SettingsPatch>;
};

export type UpdateSettingsPayload = {
  __typename?: 'UpdateSettingsPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  settings?: Maybe<Array<Maybe<Settings>>>;
};


export type UpdateSettingsPayloadSettingsArgs = {
  filter?: InputMaybe<SettingsFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SettingsOrder>;
};

export type UpdateSuspendInput = {
  filter: SuspendFilter;
  remove?: InputMaybe<SuspendPatch>;
  set?: InputMaybe<SuspendPatch>;
};

export type UpdateSuspendPayload = {
  __typename?: 'UpdateSuspendPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  suspend?: Maybe<Array<Maybe<Suspend>>>;
};


export type UpdateSuspendPayloadSuspendArgs = {
  filter?: InputMaybe<SuspendFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<SuspendOrder>;
};

export type UpdateTimeshareInput = {
  filter: TimeshareFilter;
  remove?: InputMaybe<TimesharePatch>;
  set?: InputMaybe<TimesharePatch>;
};

export type UpdateTimesharePayload = {
  __typename?: 'UpdateTimesharePayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  timeshare?: Maybe<Array<Maybe<Timeshare>>>;
};


export type UpdateTimesharePayloadTimeshareArgs = {
  filter?: InputMaybe<TimeshareFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TimeshareOrder>;
};

export type UpdateTreasuryInput = {
  filter: TreasuryFilter;
  remove?: InputMaybe<TreasuryPatch>;
  set?: InputMaybe<TreasuryPatch>;
};

export type UpdateTreasuryPayload = {
  __typename?: 'UpdateTreasuryPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  treasury?: Maybe<Array<Maybe<Treasury>>>;
};


export type UpdateTreasuryPayloadTreasuryArgs = {
  filter?: InputMaybe<TreasuryFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TreasuryOrder>;
};

export type UpdateTrsyPaymentInput = {
  filter: TrsyPaymentFilter;
  remove?: InputMaybe<TrsyPaymentPatch>;
  set?: InputMaybe<TrsyPaymentPatch>;
};

export type UpdateTrsyPaymentPayload = {
  __typename?: 'UpdateTrsyPaymentPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  trsyPayment?: Maybe<Array<Maybe<TrsyPayment>>>;
};


export type UpdateTrsyPaymentPayloadTrsyPaymentArgs = {
  filter?: InputMaybe<TrsyPaymentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TrsyPaymentOrder>;
};

export type UpdateTypeVersionInput = {
  filter: TypeVersionFilter;
  remove?: InputMaybe<TypeVersionPatch>;
  set?: InputMaybe<TypeVersionPatch>;
};

export type UpdateTypeVersionPayload = {
  __typename?: 'UpdateTypeVersionPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  typeVersion?: Maybe<Array<Maybe<TypeVersion>>>;
};


export type UpdateTypeVersionPayloadTypeVersionArgs = {
  filter?: InputMaybe<TypeVersionFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<TypeVersionOrder>;
};

export type UpdateUpvtElectnInput = {
  filter: UpvtElectnFilter;
  remove?: InputMaybe<UpvtElectnPatch>;
  set?: InputMaybe<UpvtElectnPatch>;
};

export type UpdateUpvtElectnPayload = {
  __typename?: 'UpdateUpvtElectnPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  upvtElectn?: Maybe<Array<Maybe<UpvtElectn>>>;
};


export type UpdateUpvtElectnPayloadUpvtElectnArgs = {
  filter?: InputMaybe<UpvtElectnFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtElectnOrder>;
};

export type UpdateUpvtVoteInput = {
  filter: UpvtVoteFilter;
  remove?: InputMaybe<UpvtVotePatch>;
  set?: InputMaybe<UpvtVotePatch>;
};

export type UpdateUpvtVotePayload = {
  __typename?: 'UpdateUpvtVotePayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  upvtVote?: Maybe<Array<Maybe<UpvtVote>>>;
};


export type UpdateUpvtVotePayloadUpvtVoteArgs = {
  filter?: InputMaybe<UpvtVoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UpvtVoteOrder>;
};

export type UpdateUserInput = {
  filter: UserFilter;
  remove?: InputMaybe<UserPatch>;
  set?: InputMaybe<UserPatch>;
};

export type UpdateUserPayload = {
  __typename?: 'UpdateUserPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  user?: Maybe<Array<Maybe<User>>>;
};


export type UpdateUserPayloadUserArgs = {
  filter?: InputMaybe<UserFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<UserOrder>;
};

export type UpdateVotableInput = {
  filter: VotableFilter;
  remove?: InputMaybe<VotablePatch>;
  set?: InputMaybe<VotablePatch>;
};

export type UpdateVotablePayload = {
  __typename?: 'UpdateVotablePayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  votable?: Maybe<Array<Maybe<Votable>>>;
};


export type UpdateVotablePayloadVotableArgs = {
  filter?: InputMaybe<VotableFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VotableOrder>;
};

export type UpdateVoteGroupInput = {
  filter: VoteGroupFilter;
  remove?: InputMaybe<VoteGroupPatch>;
  set?: InputMaybe<VoteGroupPatch>;
};

export type UpdateVoteGroupPayload = {
  __typename?: 'UpdateVoteGroupPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  voteGroup?: Maybe<Array<Maybe<VoteGroup>>>;
};


export type UpdateVoteGroupPayloadVoteGroupArgs = {
  filter?: InputMaybe<VoteGroupFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteGroupOrder>;
};

export type UpdateVoteInput = {
  filter: VoteFilter;
  remove?: InputMaybe<VotePatch>;
  set?: InputMaybe<VotePatch>;
};

export type UpdateVotePayload = {
  __typename?: 'UpdateVotePayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  vote?: Maybe<Array<Maybe<Vote>>>;
};


export type UpdateVotePayloadVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};

export type UpdateVoteTallyInput = {
  filter: VoteTallyFilter;
  remove?: InputMaybe<VoteTallyPatch>;
  set?: InputMaybe<VoteTallyPatch>;
};

export type UpdateVoteTallyPayload = {
  __typename?: 'UpdateVoteTallyPayload';
  numUids?: Maybe<Scalars['Int']['output']>;
  voteTally?: Maybe<Array<Maybe<VoteTally>>>;
};


export type UpdateVoteTallyPayloadVoteTallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};

export type UpvtElectn = Document & {
  __typename?: 'UpvtElectn';
  chiefround?: Maybe<Array<ElectnRound>>;
  chiefroundAggregate?: Maybe<ElectnRoundAggregateResult>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  currentround?: Maybe<Array<ElectnRound>>;
  currentroundAggregate?: Maybe<ElectnRoundAggregateResult>;
  dao?: Maybe<Array<Dao>>;
  daoAggregate?: Maybe<DaoAggregateResult>;
  details_duration_i?: Maybe<Scalars['Int64']['output']>;
  details_endDate_t?: Maybe<Scalars['DateTime']['output']>;
  details_roundDuration_i?: Maybe<Scalars['Int64']['output']>;
  details_runningSeed_i?: Maybe<Scalars['Int64']['output']>;
  details_seed_c?: Maybe<Scalars['String']['output']>;
  details_startDate_t?: Maybe<Scalars['DateTime']['output']>;
  details_status_s?: Maybe<Scalars['String']['output']>;
  docId: Scalars['String']['output'];
  headround?: Maybe<Array<ElectnRound>>;
  headroundAggregate?: Maybe<ElectnRoundAggregateResult>;
  round?: Maybe<Array<ElectnRound>>;
  roundAggregate?: Maybe<ElectnRoundAggregateResult>;
  startround?: Maybe<Array<ElectnRound>>;
  startroundAggregate?: Maybe<ElectnRoundAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  ueCurrnd?: Maybe<Array<ElectnRound>>;
  ueCurrndAggregate?: Maybe<ElectnRoundAggregateResult>;
  ueRound?: Maybe<Array<ElectnRound>>;
  ueRoundAggregate?: Maybe<ElectnRoundAggregateResult>;
  ueStartrnd?: Maybe<Array<ElectnRound>>;
  ueStartrndAggregate?: Maybe<ElectnRoundAggregateResult>;
  updatedDate: Scalars['DateTime']['output'];
};


export type UpvtElectnChiefroundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type UpvtElectnChiefroundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type UpvtElectnCurrentroundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type UpvtElectnCurrentroundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type UpvtElectnDaoArgs = {
  filter?: InputMaybe<DaoFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DaoOrder>;
};


export type UpvtElectnDaoAggregateArgs = {
  filter?: InputMaybe<DaoFilter>;
};


export type UpvtElectnHeadroundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type UpvtElectnHeadroundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type UpvtElectnRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type UpvtElectnRoundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type UpvtElectnStartroundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type UpvtElectnStartroundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type UpvtElectnUeCurrndArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type UpvtElectnUeCurrndAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type UpvtElectnUeRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type UpvtElectnUeRoundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type UpvtElectnUeStartrndArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type UpvtElectnUeStartrndAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};

export type UpvtElectnAggregateResult = {
  __typename?: 'UpvtElectnAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_duration_iAvg?: Maybe<Scalars['Float']['output']>;
  details_duration_iMax?: Maybe<Scalars['Int64']['output']>;
  details_duration_iMin?: Maybe<Scalars['Int64']['output']>;
  details_duration_iSum?: Maybe<Scalars['Int64']['output']>;
  details_endDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_endDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  details_roundDuration_iAvg?: Maybe<Scalars['Float']['output']>;
  details_roundDuration_iMax?: Maybe<Scalars['Int64']['output']>;
  details_roundDuration_iMin?: Maybe<Scalars['Int64']['output']>;
  details_roundDuration_iSum?: Maybe<Scalars['Int64']['output']>;
  details_runningSeed_iAvg?: Maybe<Scalars['Float']['output']>;
  details_runningSeed_iMax?: Maybe<Scalars['Int64']['output']>;
  details_runningSeed_iMin?: Maybe<Scalars['Int64']['output']>;
  details_runningSeed_iSum?: Maybe<Scalars['Int64']['output']>;
  details_seed_cMax?: Maybe<Scalars['String']['output']>;
  details_seed_cMin?: Maybe<Scalars['String']['output']>;
  details_startDate_tMax?: Maybe<Scalars['DateTime']['output']>;
  details_startDate_tMin?: Maybe<Scalars['DateTime']['output']>;
  details_status_sMax?: Maybe<Scalars['String']['output']>;
  details_status_sMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type UpvtElectnFilter = {
  and?: InputMaybe<Array<InputMaybe<UpvtElectnFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_duration_i?: InputMaybe<Int64Filter>;
  details_endDate_t?: InputMaybe<DateTimeFilter>;
  details_roundDuration_i?: InputMaybe<Int64Filter>;
  details_runningSeed_i?: InputMaybe<Int64Filter>;
  details_seed_c?: InputMaybe<StringExactFilter>;
  details_startDate_t?: InputMaybe<DateTimeFilter>;
  details_status_s?: InputMaybe<StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<UpvtElectnHasFilter>>>;
  not?: InputMaybe<UpvtElectnFilter>;
  or?: InputMaybe<Array<InputMaybe<UpvtElectnFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum UpvtElectnHasFilter {
  Chiefround = 'chiefround',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  Currentround = 'currentround',
  Dao = 'dao',
  DetailsDurationI = 'details_duration_i',
  DetailsEndDateT = 'details_endDate_t',
  DetailsRoundDurationI = 'details_roundDuration_i',
  DetailsRunningSeedI = 'details_runningSeed_i',
  DetailsSeedC = 'details_seed_c',
  DetailsStartDateT = 'details_startDate_t',
  DetailsStatusS = 'details_status_s',
  DocId = 'docId',
  Headround = 'headround',
  Round = 'round',
  Startround = 'startround',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UeCurrnd = 'ueCurrnd',
  UeRound = 'ueRound',
  UeStartrnd = 'ueStartrnd',
  UpdatedDate = 'updatedDate'
}

export type UpvtElectnOrder = {
  asc?: InputMaybe<UpvtElectnOrderable>;
  desc?: InputMaybe<UpvtElectnOrderable>;
  then?: InputMaybe<UpvtElectnOrder>;
};

export enum UpvtElectnOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsDurationI = 'details_duration_i',
  DetailsEndDateT = 'details_endDate_t',
  DetailsRoundDurationI = 'details_roundDuration_i',
  DetailsRunningSeedI = 'details_runningSeed_i',
  DetailsSeedC = 'details_seed_c',
  DetailsStartDateT = 'details_startDate_t',
  DetailsStatusS = 'details_status_s',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type UpvtElectnPatch = {
  chiefround?: InputMaybe<Array<ElectnRoundRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  currentround?: InputMaybe<Array<ElectnRoundRef>>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_duration_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_roundDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  details_runningSeed_i?: InputMaybe<Scalars['Int64']['input']>;
  details_seed_c?: InputMaybe<Scalars['String']['input']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_status_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  headround?: InputMaybe<Array<ElectnRoundRef>>;
  round?: InputMaybe<Array<ElectnRoundRef>>;
  startround?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  ueCurrnd?: InputMaybe<Array<ElectnRoundRef>>;
  ueRound?: InputMaybe<Array<ElectnRoundRef>>;
  ueStartrnd?: InputMaybe<Array<ElectnRoundRef>>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type UpvtElectnRef = {
  chiefround?: InputMaybe<Array<ElectnRoundRef>>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  currentround?: InputMaybe<Array<ElectnRoundRef>>;
  dao?: InputMaybe<Array<DaoRef>>;
  details_duration_i?: InputMaybe<Scalars['Int64']['input']>;
  details_endDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_roundDuration_i?: InputMaybe<Scalars['Int64']['input']>;
  details_runningSeed_i?: InputMaybe<Scalars['Int64']['input']>;
  details_seed_c?: InputMaybe<Scalars['String']['input']>;
  details_startDate_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_status_s?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  headround?: InputMaybe<Array<ElectnRoundRef>>;
  round?: InputMaybe<Array<ElectnRoundRef>>;
  startround?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  ueCurrnd?: InputMaybe<Array<ElectnRoundRef>>;
  ueRound?: InputMaybe<Array<ElectnRoundRef>>;
  ueStartrnd?: InputMaybe<Array<ElectnRoundRef>>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type UpvtVote = Document & {
  __typename?: 'UpvtVote';
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_votedId_i?: Maybe<Scalars['Int64']['output']>;
  details_voterId_i?: Maybe<Scalars['Int64']['output']>;
  docId: Scalars['String']['output'];
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};

export type UpvtVoteAggregateResult = {
  __typename?: 'UpvtVoteAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_votedId_iAvg?: Maybe<Scalars['Float']['output']>;
  details_votedId_iMax?: Maybe<Scalars['Int64']['output']>;
  details_votedId_iMin?: Maybe<Scalars['Int64']['output']>;
  details_votedId_iSum?: Maybe<Scalars['Int64']['output']>;
  details_voterId_iAvg?: Maybe<Scalars['Float']['output']>;
  details_voterId_iMax?: Maybe<Scalars['Int64']['output']>;
  details_voterId_iMin?: Maybe<Scalars['Int64']['output']>;
  details_voterId_iSum?: Maybe<Scalars['Int64']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type UpvtVoteFilter = {
  and?: InputMaybe<Array<InputMaybe<UpvtVoteFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_votedId_i?: InputMaybe<Int64Filter>;
  details_voterId_i?: InputMaybe<Int64Filter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<UpvtVoteHasFilter>>>;
  not?: InputMaybe<UpvtVoteFilter>;
  or?: InputMaybe<Array<InputMaybe<UpvtVoteFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum UpvtVoteHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsVotedIdI = 'details_votedId_i',
  DetailsVoterIdI = 'details_voterId_i',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type UpvtVoteOrder = {
  asc?: InputMaybe<UpvtVoteOrderable>;
  desc?: InputMaybe<UpvtVoteOrderable>;
  then?: InputMaybe<UpvtVoteOrder>;
};

export enum UpvtVoteOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsVotedIdI = 'details_votedId_i',
  DetailsVoterIdI = 'details_voterId_i',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type UpvtVotePatch = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_votedId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_voterId_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type UpvtVoteRef = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_votedId_i?: InputMaybe<Scalars['Int64']['input']>;
  details_voterId_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type User = {
  __typename?: 'User';
  email?: Maybe<Scalars['String']['output']>;
  eosAccountName: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  notifications?: Maybe<Array<Notification>>;
  notificationsAggregate?: Maybe<NotificationAggregateResult>;
};


export type UserNotificationsArgs = {
  filter?: InputMaybe<NotificationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<NotificationOrder>;
};


export type UserNotificationsAggregateArgs = {
  filter?: InputMaybe<NotificationFilter>;
};

export type UserAggregateResult = {
  __typename?: 'UserAggregateResult';
  count?: Maybe<Scalars['Int']['output']>;
  emailMax?: Maybe<Scalars['String']['output']>;
  emailMin?: Maybe<Scalars['String']['output']>;
  eosAccountNameMax?: Maybe<Scalars['String']['output']>;
  eosAccountNameMin?: Maybe<Scalars['String']['output']>;
  nameMax?: Maybe<Scalars['String']['output']>;
  nameMin?: Maybe<Scalars['String']['output']>;
};

export type UserFilter = {
  and?: InputMaybe<Array<InputMaybe<UserFilter>>>;
  email?: InputMaybe<StringExactFilter_StringTermFilter>;
  eosAccountName?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<UserHasFilter>>>;
  id?: InputMaybe<Array<Scalars['ID']['input']>>;
  name?: InputMaybe<StringTermFilter>;
  not?: InputMaybe<UserFilter>;
  or?: InputMaybe<Array<InputMaybe<UserFilter>>>;
};

export enum UserHasFilter {
  Email = 'email',
  EosAccountName = 'eosAccountName',
  Name = 'name',
  Notifications = 'notifications'
}

export type UserOrder = {
  asc?: InputMaybe<UserOrderable>;
  desc?: InputMaybe<UserOrderable>;
  then?: InputMaybe<UserOrder>;
};

export enum UserOrderable {
  Email = 'email',
  EosAccountName = 'eosAccountName',
  Name = 'name'
}

export type UserPatch = {
  email?: InputMaybe<Scalars['String']['input']>;
  eosAccountName?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notifications?: InputMaybe<Array<NotificationRef>>;
};

export type UserRef = {
  email?: InputMaybe<Scalars['String']['input']>;
  eosAccountName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  notifications?: InputMaybe<Array<NotificationRef>>;
};

export type Votable = {
  ballot_expiration_t?: Maybe<Scalars['DateTime']['output']>;
  details_description_s?: Maybe<Scalars['String']['output']>;
  details_title_s?: Maybe<Scalars['String']['output']>;
  vote?: Maybe<Array<Vote>>;
  voteAggregate?: Maybe<VoteAggregateResult>;
  votetally?: Maybe<Array<VoteTally>>;
  votetallyAggregate?: Maybe<VoteTallyAggregateResult>;
};


export type VotableVoteArgs = {
  filter?: InputMaybe<VoteFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteOrder>;
};


export type VotableVoteAggregateArgs = {
  filter?: InputMaybe<VoteFilter>;
};


export type VotableVotetallyArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<VoteTallyOrder>;
};


export type VotableVotetallyAggregateArgs = {
  filter?: InputMaybe<VoteTallyFilter>;
};

export type VotableAggregateResult = {
  __typename?: 'VotableAggregateResult';
  ballot_expiration_tMax?: Maybe<Scalars['DateTime']['output']>;
  ballot_expiration_tMin?: Maybe<Scalars['DateTime']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  details_description_sMax?: Maybe<Scalars['String']['output']>;
  details_description_sMin?: Maybe<Scalars['String']['output']>;
  details_title_sMax?: Maybe<Scalars['String']['output']>;
  details_title_sMin?: Maybe<Scalars['String']['output']>;
};

export type VotableFilter = {
  and?: InputMaybe<Array<InputMaybe<VotableFilter>>>;
  ballot_expiration_t?: InputMaybe<DateTimeFilter>;
  details_description_s?: InputMaybe<StringRegExpFilter>;
  details_title_s?: InputMaybe<StringRegExpFilter>;
  has?: InputMaybe<Array<InputMaybe<VotableHasFilter>>>;
  not?: InputMaybe<VotableFilter>;
  or?: InputMaybe<Array<InputMaybe<VotableFilter>>>;
};

export enum VotableHasFilter {
  BallotExpirationT = 'ballot_expiration_t',
  DetailsDescriptionS = 'details_description_s',
  DetailsTitleS = 'details_title_s',
  Vote = 'vote',
  Votetally = 'votetally'
}

export type VotableOrder = {
  asc?: InputMaybe<VotableOrderable>;
  desc?: InputMaybe<VotableOrderable>;
  then?: InputMaybe<VotableOrder>;
};

export enum VotableOrderable {
  BallotExpirationT = 'ballot_expiration_t',
  DetailsDescriptionS = 'details_description_s',
  DetailsTitleS = 'details_title_s'
}

export type VotablePatch = {
  ballot_expiration_t?: InputMaybe<Scalars['DateTime']['input']>;
  details_description_s?: InputMaybe<Scalars['String']['input']>;
  details_title_s?: InputMaybe<Scalars['String']['input']>;
  vote?: InputMaybe<Array<VoteRef>>;
  votetally?: InputMaybe<Array<VoteTallyRef>>;
};

export type Vote = Document & {
  __typename?: 'Vote';
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  docId: Scalars['String']['output'];
  ownedby?: Maybe<Array<Member>>;
  ownedbyAggregate?: Maybe<MemberAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  vote_date_t?: Maybe<Scalars['DateTime']['output']>;
  vote_notes_s?: Maybe<Scalars['String']['output']>;
  vote_votePower_a?: Maybe<Scalars['String']['output']>;
  vote_vote_s?: Maybe<Scalars['String']['output']>;
  vote_voter_n?: Maybe<Scalars['String']['output']>;
  voteon?: Maybe<Array<Document>>;
  voteonAggregate?: Maybe<DocumentAggregateResult>;
};


export type VoteOwnedbyArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type VoteOwnedbyAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};


export type VoteVoteonArgs = {
  filter?: InputMaybe<DocumentFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<DocumentOrder>;
};


export type VoteVoteonAggregateArgs = {
  filter?: InputMaybe<DocumentFilter>;
};

export type VoteAggregateResult = {
  __typename?: 'VoteAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
  vote_date_tMax?: Maybe<Scalars['DateTime']['output']>;
  vote_date_tMin?: Maybe<Scalars['DateTime']['output']>;
  vote_notes_sMax?: Maybe<Scalars['String']['output']>;
  vote_notes_sMin?: Maybe<Scalars['String']['output']>;
  vote_votePower_aMax?: Maybe<Scalars['String']['output']>;
  vote_votePower_aMin?: Maybe<Scalars['String']['output']>;
  vote_vote_sMax?: Maybe<Scalars['String']['output']>;
  vote_vote_sMin?: Maybe<Scalars['String']['output']>;
  vote_voter_nMax?: Maybe<Scalars['String']['output']>;
  vote_voter_nMin?: Maybe<Scalars['String']['output']>;
};

export type VoteFilter = {
  and?: InputMaybe<Array<InputMaybe<VoteFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<VoteHasFilter>>>;
  not?: InputMaybe<VoteFilter>;
  or?: InputMaybe<Array<InputMaybe<VoteFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
  vote_date_t?: InputMaybe<DateTimeFilter>;
  vote_notes_s?: InputMaybe<StringRegExpFilter>;
  vote_votePower_a?: InputMaybe<StringTermFilter>;
  vote_vote_s?: InputMaybe<StringRegExpFilter>;
  vote_voter_n?: InputMaybe<StringExactFilter_StringRegExpFilter>;
};

export type VoteGroup = Document & {
  __typename?: 'VoteGroup';
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  details_roundId_i?: Maybe<Scalars['Int64']['output']>;
  docId: Scalars['String']['output'];
  round?: Maybe<Array<ElectnRound>>;
  roundAggregate?: Maybe<ElectnRoundAggregateResult>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
  vote?: Maybe<Array<Member>>;
  voteAggregate?: Maybe<MemberAggregateResult>;
};


export type VoteGroupRoundArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<ElectnRoundOrder>;
};


export type VoteGroupRoundAggregateArgs = {
  filter?: InputMaybe<ElectnRoundFilter>;
};


export type VoteGroupVoteArgs = {
  filter?: InputMaybe<MemberFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order?: InputMaybe<MemberOrder>;
};


export type VoteGroupVoteAggregateArgs = {
  filter?: InputMaybe<MemberFilter>;
};

export type VoteGroupAggregateResult = {
  __typename?: 'VoteGroupAggregateResult';
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  details_roundId_iAvg?: Maybe<Scalars['Float']['output']>;
  details_roundId_iMax?: Maybe<Scalars['Int64']['output']>;
  details_roundId_iMin?: Maybe<Scalars['Int64']['output']>;
  details_roundId_iSum?: Maybe<Scalars['Int64']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type VoteGroupFilter = {
  and?: InputMaybe<Array<InputMaybe<VoteGroupFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  details_roundId_i?: InputMaybe<Int64Filter>;
  docId?: InputMaybe<StringExactFilter>;
  has?: InputMaybe<Array<InputMaybe<VoteGroupHasFilter>>>;
  not?: InputMaybe<VoteGroupFilter>;
  or?: InputMaybe<Array<InputMaybe<VoteGroupFilter>>>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum VoteGroupHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsRoundIdI = 'details_roundId_i',
  DocId = 'docId',
  Round = 'round',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  Vote = 'vote'
}

export type VoteGroupOrder = {
  asc?: InputMaybe<VoteGroupOrderable>;
  desc?: InputMaybe<VoteGroupOrderable>;
  then?: InputMaybe<VoteGroupOrder>;
};

export enum VoteGroupOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DetailsRoundIdI = 'details_roundId_i',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type VoteGroupPatch = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_roundId_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  round?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<MemberRef>>;
};

export type VoteGroupRef = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  details_roundId_i?: InputMaybe<Scalars['Int64']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  round?: InputMaybe<Array<ElectnRoundRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote?: InputMaybe<Array<MemberRef>>;
};

export enum VoteHasFilter {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  Ownedby = 'ownedby',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  VoteDateT = 'vote_date_t',
  VoteNotesS = 'vote_notes_s',
  VoteVotePowerA = 'vote_votePower_a',
  VoteVoteS = 'vote_vote_s',
  VoteVoterN = 'vote_voter_n',
  Voteon = 'voteon'
}

export type VoteOrder = {
  asc?: InputMaybe<VoteOrderable>;
  desc?: InputMaybe<VoteOrderable>;
  then?: InputMaybe<VoteOrder>;
};

export enum VoteOrderable {
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate',
  VoteDateT = 'vote_date_t',
  VoteNotesS = 'vote_notes_s',
  VoteVotePowerA = 'vote_votePower_a',
  VoteVoteS = 'vote_vote_s',
  VoteVoterN = 'vote_voter_n'
}

export type VotePatch = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote_date_t?: InputMaybe<Scalars['DateTime']['input']>;
  vote_notes_s?: InputMaybe<Scalars['String']['input']>;
  vote_votePower_a?: InputMaybe<Scalars['String']['input']>;
  vote_vote_s?: InputMaybe<Scalars['String']['input']>;
  vote_voter_n?: InputMaybe<Scalars['String']['input']>;
  voteon?: InputMaybe<Array<DocumentRef>>;
};

export type VoteRef = {
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  ownedby?: InputMaybe<Array<MemberRef>>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
  vote_date_t?: InputMaybe<Scalars['DateTime']['input']>;
  vote_notes_s?: InputMaybe<Scalars['String']['input']>;
  vote_votePower_a?: InputMaybe<Scalars['String']['input']>;
  vote_vote_s?: InputMaybe<Scalars['String']['input']>;
  vote_voter_n?: InputMaybe<Scalars['String']['input']>;
  voteon?: InputMaybe<Array<DocumentRef>>;
};

export type VoteTally = Document & {
  __typename?: 'VoteTally';
  abstain_votePower_a?: Maybe<Scalars['String']['output']>;
  contract: Scalars['String']['output'];
  createdDate: Scalars['DateTime']['output'];
  creator: Scalars['String']['output'];
  docId: Scalars['String']['output'];
  fail_votePower_a?: Maybe<Scalars['String']['output']>;
  pass_votePower_a?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_s?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updatedDate: Scalars['DateTime']['output'];
};

export type VoteTallyAggregateResult = {
  __typename?: 'VoteTallyAggregateResult';
  abstain_votePower_aMax?: Maybe<Scalars['String']['output']>;
  abstain_votePower_aMin?: Maybe<Scalars['String']['output']>;
  contractMax?: Maybe<Scalars['String']['output']>;
  contractMin?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['Int']['output']>;
  createdDateMax?: Maybe<Scalars['DateTime']['output']>;
  createdDateMin?: Maybe<Scalars['DateTime']['output']>;
  creatorMax?: Maybe<Scalars['String']['output']>;
  creatorMin?: Maybe<Scalars['String']['output']>;
  docIdMax?: Maybe<Scalars['String']['output']>;
  docIdMin?: Maybe<Scalars['String']['output']>;
  fail_votePower_aMax?: Maybe<Scalars['String']['output']>;
  fail_votePower_aMin?: Maybe<Scalars['String']['output']>;
  pass_votePower_aMax?: Maybe<Scalars['String']['output']>;
  pass_votePower_aMin?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMax?: Maybe<Scalars['String']['output']>;
  system_nodeLabel_sMin?: Maybe<Scalars['String']['output']>;
  typeMax?: Maybe<Scalars['String']['output']>;
  typeMin?: Maybe<Scalars['String']['output']>;
  updatedDateMax?: Maybe<Scalars['DateTime']['output']>;
  updatedDateMin?: Maybe<Scalars['DateTime']['output']>;
};

export type VoteTallyFilter = {
  abstain_votePower_a?: InputMaybe<StringTermFilter>;
  and?: InputMaybe<Array<InputMaybe<VoteTallyFilter>>>;
  contract?: InputMaybe<StringExactFilter>;
  createdDate?: InputMaybe<DateTimeFilter>;
  creator?: InputMaybe<StringExactFilter_StringRegExpFilter>;
  docId?: InputMaybe<StringExactFilter>;
  fail_votePower_a?: InputMaybe<StringTermFilter>;
  has?: InputMaybe<Array<InputMaybe<VoteTallyHasFilter>>>;
  not?: InputMaybe<VoteTallyFilter>;
  or?: InputMaybe<Array<InputMaybe<VoteTallyFilter>>>;
  pass_votePower_a?: InputMaybe<StringTermFilter>;
  system_nodeLabel_s?: InputMaybe<StringRegExpFilter>;
  type?: InputMaybe<StringExactFilter>;
  updatedDate?: InputMaybe<DateTimeFilter>;
};

export enum VoteTallyHasFilter {
  AbstainVotePowerA = 'abstain_votePower_a',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  FailVotePowerA = 'fail_votePower_a',
  PassVotePowerA = 'pass_votePower_a',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type VoteTallyOrder = {
  asc?: InputMaybe<VoteTallyOrderable>;
  desc?: InputMaybe<VoteTallyOrderable>;
  then?: InputMaybe<VoteTallyOrder>;
};

export enum VoteTallyOrderable {
  AbstainVotePowerA = 'abstain_votePower_a',
  Contract = 'contract',
  CreatedDate = 'createdDate',
  Creator = 'creator',
  DocId = 'docId',
  FailVotePowerA = 'fail_votePower_a',
  PassVotePowerA = 'pass_votePower_a',
  SystemNodeLabelS = 'system_nodeLabel_s',
  Type = 'type',
  UpdatedDate = 'updatedDate'
}

export type VoteTallyPatch = {
  abstain_votePower_a?: InputMaybe<Scalars['String']['input']>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  fail_votePower_a?: InputMaybe<Scalars['String']['input']>;
  pass_votePower_a?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type VoteTallyRef = {
  abstain_votePower_a?: InputMaybe<Scalars['String']['input']>;
  contract?: InputMaybe<Scalars['String']['input']>;
  createdDate?: InputMaybe<Scalars['DateTime']['input']>;
  creator?: InputMaybe<Scalars['String']['input']>;
  docId?: InputMaybe<Scalars['String']['input']>;
  fail_votePower_a?: InputMaybe<Scalars['String']['input']>;
  pass_votePower_a?: InputMaybe<Scalars['String']['input']>;
  system_nodeLabel_s?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updatedDate?: InputMaybe<Scalars['DateTime']['input']>;
};

export type WithinFilter = {
  polygon: PolygonRef;
};

export type ActiveDaoQueryVariables = Exact<{
  regexp: Scalars['String']['input'];
}>;


export type ActiveDaoQuery = { __typename?: 'Query', queryDao?: Array<{ __typename?: 'Dao', docId: string, details_daoName_n: string, settings?: Array<{ __typename?: 'Settings', settings_daoDescription_s?: string | null, settings_daoTitle_s?: string | null, settings_daoName_n?: string | null, settings_logo_s?: string | null, settings_primaryColor_s?: string | null, settings_secondaryColor_s?: string | null }> | null } | null> | null };

export type DaoListQueryVariables = Exact<{
  order?: InputMaybe<DaoOrder>;
  filter?: InputMaybe<DaoFilter>;
  first: Scalars['Int']['input'];
  offset: Scalars['Int']['input'];
}>;


export type DaoListQuery = { __typename?: 'Query', queryDao?: Array<{ __typename?: 'Dao', docId: string, details_daoName_n: string, createdDate: any, settings?: Array<{ __typename?: 'Settings', settings_daoDescription_s?: string | null, settings_daoTitle_s?: string | null, settings_daoName_n?: string | null, settings_logo_s?: string | null, settings_primaryColor_s?: string | null, settings_secondaryColor_s?: string | null, settings_daoUrl_s?: string | null }> | null, memberAggregate?: { __typename?: 'MemberAggregateResult', count?: number | null } | null, proposalAggregate?: { __typename?: 'DocumentAggregateResult', count?: number | null } | null } | null> | null };

export class TypedDocumentString<TResult, TVariables>
  extends String
  implements DocumentTypeDecoration<TResult, TVariables>
{
  __apiType?: DocumentTypeDecoration<TResult, TVariables>['__apiType'];

  constructor(private value: string, public __meta__?: Record<string, any>) {
    super(value);
  }

  toString(): string & DocumentTypeDecoration<TResult, TVariables> {
    return this.value;
  }
}

export const ActiveDaoDocument = new TypedDocumentString(`
    query activeDao($regexp: String!) {
  queryDao @cascade(fields: ["settings"]) {
    docId
    details_daoName_n
    settings(filter: {settings_daoUrl_s: {regexp: $regexp}}) {
      settings_daoDescription_s
      settings_daoTitle_s
      settings_daoName_n
      settings_logo_s
      settings_primaryColor_s
      settings_secondaryColor_s
    }
  }
}
    `) as unknown as TypedDocumentString<ActiveDaoQuery, ActiveDaoQueryVariables>;
export const DaoListDocument = new TypedDocumentString(`
    query daoList($order: DaoOrder, $filter: DaoFilter, $first: Int!, $offset: Int!) {
  queryDao(order: $order, filter: $filter, first: $first, offset: $offset) {
    docId
    details_daoName_n
    createdDate
    settings {
      settings_daoDescription_s
      settings_daoTitle_s
      settings_daoName_n
      settings_logo_s
      settings_primaryColor_s
      settings_secondaryColor_s
      settings_daoUrl_s
    }
    memberAggregate {
      count
    }
    proposalAggregate {
      count
    }
  }
}
    `) as unknown as TypedDocumentString<DaoListQuery, DaoListQueryVariables>;
