{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x1BAB6b37B3646d348AF8F3F43B9735Ff6b13cF0f",
      "txHash": "0x83638f28ba64c10011ff354d4dc05b4ad4b3daa5cc20eaaf7daf105c10812fec",
      "kind": "uups"
    },
    {
      "address": "0xBf97ADAcF9d28171cCedBB9189b912f607577B29",
      "txHash": "0x612f1208c92f3ddb436e41873b5eccee1e0c070dcb7c0ae450f4104b8284397c",
      "kind": "uups"
    },
    {
      "address": "0xaa86924F59852f48dD5185469D146BdcF8448D56",
      "txHash": "0x6ab33c8880285ba9e9be5af5e64d9e6cde9b6f7df83573a589f0a4317c8d375f",
      "kind": "uups"
    },
    {
      "address": "0x811F1f2f7e78EB8738eda8Aa90eA33210C0d6f76",
      "txHash": "0x04885d727e71ac254784f703632d30ba28669514d804c84c03e6431ab500d023",
      "kind": "uups"
    },
    {
      "address": "0x830ed2DAcF264dD7Fc9BC11E34674AC937B04A06",
      "txHash": "0xadc9641e4865e1b64dd471148f6e0d98b343b8e364d314a5deccd0e3760a24ff",
      "kind": "uups"
    },
    {
      "address": "0xeA9BD28eBB2e6996c5C84eACC64e661f83905eD0",
      "txHash": "0xba888e39ce1daa68802bb6fdda89d1085cf4effaceca276bb4a2971a947be882",
      "kind": "uups"
    },
    {
      "address": "0xaC840F8A96EC6A6f9FbfdAae8daF8d9D679fd48B",
      "txHash": "0xae99ebc1bf7de4fa4929e0fd6ade44831c1d6506987349fb8357a528fc80b7d9",
      "kind": "uups"
    },
    {
      "address": "0x9780a96B4382bdd0Aa6fC41B6b6A68A04c5C5727",
      "txHash": "0x5aa9d21d36b9aba99015ad538168fd6ddea371b29e29750eb04af6fc53dc8c17",
      "kind": "uups"
    },
    {
      "address": "0x3214DE1Eb858799Db626Bd9699e78c2E6E33D2BE",
      "txHash": "0x8d30ef7c5088b9d21a692bc5a18d1dae23e227f099d2d4f6ab923674c5b47987",
      "kind": "uups"
    },
    {
      "address": "0x41cD69A3a3715B16598415df336a8Cc533CCAF76",
      "txHash": "0x36deed0a712c5b6c6075a76eff8f4c27bc9bc68d12954d74a3839222d94d799f",
      "kind": "uups"
    },
    {
      "address": "0x5577611f915514F0E34b065C11B395Ef008B04F3",
      "txHash": "0xffa6e741d2cc6f291bc9334094c947d32a12d856e1510395f6f9fa84eee77fa7",
      "kind": "uups"
    },
    {
      "address": "0x87537f0B5B8f34D689d484E743e83F82636E14a7",
      "txHash": "0x8e4301cf56cb2bc6e1070d0da84880f95449f7450a87d3ecc4b1a07d9d03b5e6",
      "kind": "uups"
    },
    {
      "address": "0x6dB5E05B21c68550B63a7404a3B68F81c159DAee",
      "txHash": "0x83ac78c4f2f004ebcba6193766a8404d375e952bdfd5a3c60e4724d8b07a06fc",
      "kind": "uups"
    },
    {
      "address": "0xD472c59835f70B4dBf156A0715D01C392a754117",
      "txHash": "0x1c275efb0891b9f6bfe6b83a46b6c1cd31a161e6233237fbf2a90c87c4ffc96a",
      "kind": "uups"
    },
    {
      "address": "0xbb9f405c0313A0393e04aE30e92f5e5b07ca6af1",
      "txHash": "0x213dc98789dfc3bf1ccca668ec94ed2400790b95d927352e7eb29493368a2ecd",
      "kind": "uups"
    },
    {
      "address": "0x83B5d4F555A68126bB302685e67767Bb7a2985F0",
      "txHash": "0xce4c9738d4b35f3e22c8f537cca7519f2f0c518b9f45f6feb7a942e3ac6d597f",
      "kind": "uups"
    },
    {
      "address": "0xF5a7Ca524882124B1CD13dB74C8f56A96044c763",
      "txHash": "0x5d3911f045072099ba4d1be53b0b66db630a5b617ecd466d1f0296df88bb7fe7",
      "kind": "uups"
    },
    {
      "address": "0x255c7b5DaC3696199fEF7A8CC6Cc87190bc36eFd",
      "txHash": "0x3b6bd427d42f0a7f672d4b0f5b72430d48c3634408fa46954020d23ee0556460",
      "kind": "uups"
    },
    {
      "address": "0x4B61250c8F19BA96C473c65022453E95176b0139",
      "txHash": "0x350b0103eebeb1b366cc96b201ae8596bc26195d2fe03ee4e3afa0b48887da75",
      "kind": "uups"
    },
    {
      "address": "0x001bA7a00a259Fb12d7936455e292a60FC2bef14",
      "kind": "uups"
    },
    {
      "address": "0xc8B8454D2F9192FeCAbc2C6F5d88F6434A2a9cd9",
      "kind": "uups"
    },
    {
      "address": "0xc87546357EeFF8653cF058Be2BA850813e39cda0",
      "txHash": "0x2c90d3ad9cf91431be8d29f9713c22c625ef6710aba20f99715eda0d821e065c",
      "kind": "uups"
    },
    {
      "address": "0x299f4D2327933c1f363301dbd2a28379ccD5539b",
      "kind": "uups"
    },
    {
      "address": "0xA1eDf096B72226ae2f7BDEb12E9c9C82152BccB6",
      "kind": "uups"
    },
    {
      "address": "0x95A33EC94de2189893884DaD63eAa19f7390144a",
      "kind": "uups"
    },
    {
      "address": "0x8b93862835C36e9689E9bb1Ab21De3982e266CD3",
      "kind": "uups"
    },
    {
      "address": "0xEd53BFcD7830b94e3C676c6eDaD0472FE4Cd3D89",
      "txHash": "0x80eb1c5fd167c15e423857343f3554448005c3860a5387b51e5e5ef8f980df19",
      "kind": "uups"
    },
    {
      "address": "0x1873F40FA830F91e66321BbD4acB2f2A12c04E2e",
      "txHash": "0xcfe0ca5a26b9b32c8edaab30ab13894c3ad065694dc95b198d086787ecc7e81e",
      "kind": "uups"
    },
    {
      "address": "0xDAdFbF2D33A8aB74f86752f2afF25F6323d73B87",
      "txHash": "0x84c6c9d3b86c2934661002af00aed85295fb516f435a7b04d1a15159d9cf9ce3",
      "kind": "uups"
    },
    {
      "address": "0x9425c91c19066f6CAC6C25bF934F8861914Ccf2e",
      "txHash": "0xa7bb792c7a9f20d7a5e67d3eedf4f625547e1770e251b50c99a0be66df1c5b36",
      "kind": "uups"
    },
    {
      "address": "0x475C1306CB572Af6f22F9ab6F9E9a7403c360ea5",
      "txHash": "0xb8dfc8cc0a0f3221e7bd91fc9917df29d9f6169d8afd8dad0c1bd2c6fa273dd8",
      "kind": "uups"
    },
    {
      "address": "0xd20C8ef38F213D3907B22a2bD128D32869676dad",
      "txHash": "0x54d57c918e241813d61807b9b609aca13f6f786c15ce28fb012fdbd19c5adbdf",
      "kind": "uups"
    },
    {
      "address": "0x9962c152D8F79e0d8E12512457fa12bCd41F8Cba",
      "txHash": "0x937cce756dfa7c436c6ebcec3c113432f47208cc92a60ba8879e568dbd2d33f8",
      "kind": "uups"
    },
    {
      "address": "0xD932f1A250db1b15D943967F3Ae2e07c23AC8E36",
      "txHash": "0xcd3e0bb4e3fc71ff7b4925f52341f5f2c54945bfd4ff245f343c6ed0bb6cd0ea",
      "kind": "uups"
    },
    {
      "address": "0xc69cB3D966e0Eb5306035e9a27979507D1F334Ee",
      "txHash": "0xf75423d941bd692b4e12ae55c130fb2d9262a14e3a155818ce2a6f92b20c2239",
      "kind": "uups"
    },
    {
      "address": "0x66CA84bDa7508fa873fc22954b3144064cc5FF37",
      "txHash": "0x2db155f949c69a7808110966ed052e1e38c5abbd619fa73a7ef631ec5e92f03f",
      "kind": "uups"
    }
  ],
  "impls": {
    "2db1a93fbbbad76e5b84e1d588909593c553bcb42e837c9472c8d0055e8976b3": {
      "address": "0x3E5c0aD86e0fCa6A22e66cd3B819d942cF1d985C",
      "txHash": "0xb8cab5bf8ea22b09730cc25351fcb07aa883a143e55ddaf3fa52c4bcfa68e3f8",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "count",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "Counter",
            "src": "contracts/Counter.sol:10"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "0154a344559291546eed58945cd50dbae3dd429fbf0a59fa72c6d313780813da": {
      "address": "0x3CA53811d774c3634aCc02F5d33bCfF95Ac60874",
      "txHash": "0xb30459d868bbf1a2f58b7d14fdec0a93ca00f95b0994070f7bbee1b3b99a108e",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)10334_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:27"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:28"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)10303",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:29"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:30"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:31"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:32"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)10358_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "8",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDirectory)10303": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)10334_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)10358_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Space)10334_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "imageUrl",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "11"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "12"
              }
            ],
            "numberOfBytes": "416"
          },
          "t_struct(SpaceMembers)10358_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "8a591fac0523c41a385bc6109956f73761aa8283e14296d6486feb7cbade1aa2": {
      "address": "0x30EDe3f4E2cA04547a1e9649e3D96A1Ca6172425",
      "txHash": "0xe2d91590ef9d5d5ba3ba0e7c5b0af292ab82fc4460c95e4adf07843a01235dbb",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)9778_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:28"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:29"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)9753",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:30"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:31"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:32"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)9804_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:40"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDirectory)9753": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)9778_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)9804_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)9778_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)9804_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d4dade9fe8c577ef0e06c7b0395e4c254d6b52a3e23d411f129ba8693a851a8e": {
      "address": "0x79375b2A8dB7699672c7aA0E6F02f3404c51c062",
      "txHash": "0x4d5e8fe5444737868db8f366980be570dc2b4a087dba0ae18de69c23d42fc4df",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)9908",
            "contract": "JoinMethodDirectoryStorage",
            "src": "contracts/storage/JoinMethodDirectoryStorage.sol:17"
          },
          {
            "label": "joinMethods",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_contract(IJoinMethod)9898)",
            "contract": "JoinMethodDirectoryStorage",
            "src": "contracts/storage/JoinMethodDirectoryStorage.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IDAOSpaceFactory)9908": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IJoinMethod)9898": {
            "label": "contract IJoinMethod",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_contract(IJoinMethod)9898)": {
            "label": "mapping(uint256 => contract IJoinMethod)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c10bb1ae0e4471423ad4edf95bf3d39f532220b0779b906289bf7877a7bf8e81": {
      "address": "0x11656C017DA88c328C1816dB877895f46EA96B1e",
      "txHash": "0x3ff6f933c27e16d59fab667174d89037415184e1a28ac62784d05a71f1b3adba",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)9705_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:28"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:29"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)9680",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:30"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:31"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:32"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)9731_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:40"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDirectory)9680": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)9705_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)9731_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)9705_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)9731_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f6179141246ee5da7ea685d53f9c6cdad4a5ca684fa57f1fc5ea89c61653c0e2": {
      "address": "0xF0c72A793b9CF411b495b1A880E118f8412c94F2",
      "txHash": "0xcb023ba953eee9fd05a1b4c06805248b15604d6d326926aaf3ef1ee314bc4f65",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)9639_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:28"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:29"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)9614",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:30"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:31"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:32"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)9665_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:40"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDirectory)9614": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)9639_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)9665_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)9639_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)9665_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4a2d33cc4dbe023e62240928eac425da8e540b5b5047bdd0fb770fda70e29f24": {
      "address": "0x829e72858632d2d02c321fB9dB8a8f2495ccB3D6",
      "txHash": "0xa2a62bc095e6759d1f29c98b1f4f37f4cfa05289501d5908d3dcff2e4552fff8",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)9699_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:28"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:29"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)9674",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:30"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:31"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:32"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)9725_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:40"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDirectory)9674": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)9699_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)9725_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)9699_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)9725_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f57c8fe149516db42dd3becaaaa845e4c7664daf9755902167c607c02cb2938a": {
      "address": "0x9f4a40fB8A278d53A6C6fb1Cb6B0519DeeAE5957",
      "txHash": "0x921086f4239320f275b4563a83c6fbfb5e13745de0b29a9fd8c3497e42f09e26",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)9396_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:28"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:29"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)9371",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:30"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:31"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:32"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)9422_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:40"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:41"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDirectory)9371": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)9396_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)9422_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)9396_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)9422_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c392f416f61a559eec9d13967e5853e1ea7fb2887e5b40e3d6f9c5f2f54c67fe": {
      "address": "0xe3eF99f35B30a021fAb836955939b32cB448f2A7",
      "txHash": "0x068acd6ab421fb763186ec45ae737677c4e0267b3440592aac4e420664667163",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)9435",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:82"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)9443",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:83"
          },
          {
            "label": "spaceExecutors",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:84"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)9505_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:85"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:86"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:95"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:98"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)9435": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)9443": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)9505_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)9505_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "targetContract",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionData",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "9"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "824348c0d9e2b8cde0c477082d57e4fbcb53e5f9764df6b1b62b5ddbe58483a7": {
      "address": "0x7FBc6f532ed076BD1067E3e41bc6543A239ad4F5",
      "txHash": "0x22fe5c0f8719931ef432ebaee23170809cf881d954400a746f493a33249366c3",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)9507_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:28"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:29"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)9482",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:30"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:31"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:32"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)9533_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:40"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:41"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:44"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "10",
            "type": "t_contract(IDAOProposals)8417",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)8417": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)9482": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)9507_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)9533_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)9507_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)9533_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "38c35caf6f438e7818ddaa78afc08a66c37d07101cfbd557acb205a0ae159b02": {
      "address": "0x41c8a721745F9C27ba804A46f85F4db6bd0A5Ee9",
      "txHash": "0x8c02b8051f90e3ead7c1efc895ba575447cf575715c397a9dcddd6669f0f95b8",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)9481",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:82"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)9489",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:83"
          },
          {
            "label": "spaceExecutors",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:84"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)9551_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:85"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:86"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:89"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:95"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:98"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)9481": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)9489": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)9551_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)9551_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "targetContract",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionData",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "9"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b747bfada2687808b7b0b6b501949139cfd691b584c4fabe11effc654abcf026": {
      "address": "0x7DACf8Ca392d74301cc27E2D871e5146Dd7DD78D",
      "txHash": "0xeac7aebcd828a2bd89571cd650c176e176401ce8e2b2682f130c6803fd9ab733",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)9511",
            "contract": "ExitMethodDirectoryStorage",
            "src": "contracts/storage/ExitMethodDirectoryStorage.sol:17"
          },
          {
            "label": "exitMethods",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_contract(IExitMethod)9501)",
            "contract": "ExitMethodDirectoryStorage",
            "src": "contracts/storage/ExitMethodDirectoryStorage.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IDAOSpaceFactory)9511": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IExitMethod)9501": {
            "label": "contract IExitMethod",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_contract(IExitMethod)9501)": {
            "label": "mapping(uint256 => contract IExitMethod)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "672c7b3093ddcf7c35d1c8c8dd4999c44427ee56f22ad36d246c8d64d2bc76c1": {
      "address": "0x657e76719acF1E769c3172B2027eaDF8C35619E9",
      "txHash": "0x79b8e3da3586fefb02b6edad17b1cc3d6f443ba116a76c45a70b7f980926bcd7",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "TokenFactoryStorage",
            "src": "contracts/storage/TokenFactoryStorage.sol:7"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenFactoryStorage",
            "src": "contracts/storage/TokenFactoryStorage.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a820367cba3039ee129cca3bb9cd1a57d8613bc6844eb51142b0fabdccde11fa": {
      "address": "0x59a581d83b9Dd6756b9cd5684F953F06Ca0b23c1",
      "txHash": "0x50b7bd2af5fb72d0428c20ab0985803d4f967858342506662fd8f44e797ad2e7",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "TokenFactoryStorage",
            "src": "contracts/storage/TokenFactoryStorage.sol:7"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TokenFactoryStorage",
            "src": "contracts/storage/TokenFactoryStorage.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "bc879959b58ba3a377c217c905d9fae2fd717cbf727aad5342b8aa03bb9c8253": {
      "address": "0xdF1942a1944f00287bd1348fE71038A80316aA97",
      "txHash": "0x6025f2860538337fcf68da43bb50789b51beb386841986e18b2fe4f87b51d089",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)9617_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:28"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:29"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)9592",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:30"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:31"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:32"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)9643_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:40"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:41"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:44"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "10",
            "type": "t_contract(IDAOProposals)8509",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:46"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)8509": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)9592": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)9617_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)9643_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)9617_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)9643_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "611b4a84068911811a17ec3cc4b2ca1c15b9a51df9485f947ac60ccb1f2e52ba": {
      "address": "0xF01dcB0Ce56c23861a9f800353ad4b8510C0C3AD",
      "txHash": "0x46ed6e8f950baa792dffc61e4cf87032c7747a8152dbca6a5426c348a4ec45f9",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)9612_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:28"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:29"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)9587",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:30"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:31"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:32"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)9638_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:40"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:41"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:44"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "10",
            "type": "t_contract(IDAOProposals)8524",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)8524": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)9587": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)9612_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)9638_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)9612_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)9638_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1f24b6782644c6edb61d81cc7eac650514e426263b92ae7b313a5cf9b6c49d11": {
      "address": "0x34Aa9287fA61918b6a73b440EF01F94BBCA370FB",
      "txHash": "0x9a9a25c4d93e9f5c21e49fba3f408f86033122e4e160609e2b64afb4848195bc",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)9589_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:28"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:29"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)9564",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:30"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:31"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:32"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)9615_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:40"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:41"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:44"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "10",
            "type": "t_contract(IDAOProposals)8499",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)8499": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)9564": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)9589_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)9615_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)9589_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)9615_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "66eb6f2d8ede00e248a0b07b4b2d70dca3a54184eda11c314dc7c3b9e0c15b5d": {
      "address": "0x40cc5B51b21d3e177379263c08c6E4E93b011C34",
      "txHash": "0xd83f92280f39ae066c6464d5b6b86de7bacf56e7255ca82b1860f90e9aace180",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)9461",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:61"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)9469",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:62"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:64"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)9530_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:83"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:85"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:91"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Transaction)8350_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)9461": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)9469": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)9530_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)9530_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)8350_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)8350_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "40458a4114cbfeffe313ea539a9c0926e071b6d65fc0c562ca931ea9ef353493": {
      "address": "0x0c10E2A1b5205D42e53259cEA677F846d51B40a3",
      "txHash": "0x0e4da9e35fca90135c2f1ba10baa03c357af42d89243f247cc6f7f258eca937e",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "votingPowerSources",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "VotingPowerDirectoryStorage",
            "src": "contracts/storage/VotingPowerDirectoryStorage.sol:8"
          },
          {
            "label": "sourceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "VotingPowerDirectoryStorage",
            "src": "contracts/storage/VotingPowerDirectoryStorage.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5add2cc0387dca7e683ebbd778e4868f01652962afce415f8dd6782420f4ca74": {
      "address": "0xdef31Db275bfFA4DD3AD6d4E01420b6085235466",
      "txHash": "0x43b33718d7705f656f924924ca54ba0a51324e824cee52b63e7e1e6f1dfceee3",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "TokenVotingPowerStorage",
            "src": "contracts/storage/TokenVotingPowerStorage.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b6e51c345e063c2cc61ac14b3e5c8f7d1058151fd24895e00155dfb6c1011108": {
      "address": "0x8be34601e393579A2A313f1E16fB84357038e5CD",
      "txHash": "0xc1eaaa53b95104a075c02874f7686fc04927ed4fb8a6f58c994baa632dc9dfdb",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceTokenRequirements",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(TokenRequirement)9967_storage)",
            "contract": "TokenBalanceJoinStorage",
            "src": "contracts/storage/TokenBalanceJoinStorage.sol:21"
          },
          {
            "label": "daoSpaceFactory",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDAOSpaceFactory)9960",
            "contract": "TokenBalanceJoinStorage",
            "src": "contracts/storage/TokenBalanceJoinStorage.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IDAOSpaceFactory)9960": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_struct(TokenRequirement)9967_storage)": {
            "label": "mapping(uint256 => struct TokenBalanceJoinStorage.TokenRequirement)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenRequirement)9967_storage": {
            "label": "struct TokenBalanceJoinStorage.TokenRequirement",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "requiredBalance",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "55fb6af5891b55a34d949de84f7058b6a95e4c1aa1bed776b38c43382baf0855": {
      "address": "0xaBeA2aEE24377fcd3bD13d910916FfaEC1467046",
      "txHash": "0x565172a83032da3093273d339aba83bcec67114b8c0feab389e52267682b34af",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)11779",
            "contract": "SpaceVotingPowerStorage",
            "src": "contracts/storage/SpaceVotingPowerStorage.sol:12"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IDAOSpaceFactory)11779": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6c5698beaffe9e1e26bc171535368fb25a80ce64ed6360caf0c8259cd3e8380a": {
      "address": "0xA7F7e9a3894c77C736b552D3732cB4D5ACF2f0d4",
      "txHash": "0x1571fe06c598a2712d624f42c74ed05c0f1b6b2b9165ace01b967bdb37ba1679",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)9572_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:28"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:29"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)9547",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:30"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:31"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:32"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)9598_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:40"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:41"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:44"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "10",
            "type": "t_contract(IDAOProposals)8490",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)8490": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)9547": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)9572_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)9598_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)9572_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)9598_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "aefe073174a6a441d77b82feaa41772ec185f72344ac6ae3720b47ac46ea01b5": {
      "address": "0x667a753252266eD8E1d804A289E583f5E28691bb",
      "txHash": "0x1d9163c26e848042a49f3fb2b2bfd74c69c136b1ee043eb90c9a439a2c8cf587",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)6705_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:28"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:29"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)6680",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:30"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:31"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:32"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)6731_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:40"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:41"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:44"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "10",
            "type": "t_contract(IDAOProposals)6034",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)6034": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)6680": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)6705_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)6731_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)6705_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)6731_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "05d15873fb64d425c3c4edbca37407383edcb77891120baf1c829aca9929f3a3": {
      "address": "0x0A6bB8d5FE1042146a63f3C36261E97840b6eC00",
      "txHash": "0x5a66ea7955a0a78b397218b49f948e5269b552fa5579d7cd374bff5804d8bf3f",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:7"
          },
          {
            "label": "decayVotingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2b8bdb46b024ca36bdec57b624753116e08f57d2754245a6dea6b49de757b6a7": {
      "address": "0x4A69fA38Ce35F9Fba16457d65760a6624f6E2AF8",
      "txHash": "0xccc324ba8ffc5271ddd4d5a87f3aac15a8df839fb38dd0293517ae993a59d37a",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:9"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "19304d3724065d3e898080721aa3dbbc5f065ec361384fda1c285e57bcad3512": {
      "address": "0x46BB9f068B96a29f1D4E2C379647231587fD6b74",
      "txHash": "0x8041b9546d9d99ac6f44e6a4219a674b981b2462ceb4c8c224c40a72d53ca604",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "TokenVotingPowerStorage",
            "src": "contracts/storage/TokenVotingPowerStorage.sol:13"
          },
          {
            "label": "decayTokenFactory",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "VoteDecayTokenVotingPowerImplementation",
            "src": "contracts/VoteDecayTokenVotingPowerImplementation.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "cdf9154c313cf721e8b83c49b3e153dd66c0aaea48dba435b1aa3a8392ea319d": {
      "address": "0xACd3815Ff67Cb8EbCCAB0fe566A33893CA2ad5EF",
      "txHash": "0xcefba714700580403489fdf467f8b256db25c5d6330e75e444f1824015ada35b",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)8490",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:61"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)8498",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:62"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:64"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)8559_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:83"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:85"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:91"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Transaction)7554_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)8490": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)8498": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)8559_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)8559_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)7554_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)7554_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d578f4602cddf0a5c8e813791c0ea4d4100c57d78b36afb535d6aa6ea41434b8": {
      "address": "0x7A343098cF68b4A21Bf377faD0aa4Fbea17A15Be",
      "txHash": "0x4ecc26b13dd42798d46a2a647f31c48ceb109ac23969086ece0c48349a81cc7a",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)3029_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)2998",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:35"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:36"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:37"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)3055_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:47"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:48"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:51"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "10",
            "type": "t_contract(IDAOProposals)2767",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)2767": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)2998": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)3029_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)3055_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)3029_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)3055_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ed8df474a1b6f96a97a1983a8d3f43aaad2e174c1d911e2aa8c0471e05ddaac2": {
      "address": "0xF0188BE89a23217326C942C70b3813b5B4d47BEC",
      "txHash": "0xa67ec2616491572018df051f149f89b517d6d3fec5df63fa6abce614492ef3d5",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "TokenVotingPowerStorage",
            "src": "contracts/storage/TokenVotingPowerStorage.sol:14"
          },
          {
            "label": "decayTokenFactory",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "DecayTokenVotingPowerStorage",
            "src": "contracts/storage/DecayTokenVotingPowerStorage.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)221_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "aa39fcab57b614b0619d0bc445a6be125816e7fd2cb184b0fa2e5eeb2afa3938": {
      "address": "0x43cfaA3311C5F2baB6F82f5543E3a48F8007E87C",
      "txHash": "0xaa31cdff5cf7b0a6b6bb80b8f911ffa5ef3a00355efd91c642ebd5784c8cef5b",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "TokenVotingPowerStorage",
            "src": "contracts/storage/TokenVotingPowerStorage.sol:14"
          },
          {
            "label": "tokenFactory",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegularTokenVotingPowerStorage",
            "src": "contracts/storage/RegularTokenVotingPowerStorage.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "343c890127b3f844c86609ef7e2eb9e68e13efc88e884cd39577bea6d795f0ec": {
      "address": "0xaBEB8A341871143a87041a0E42Cf11dfd96b9F3f",
      "txHash": "0xfb38153626d262aff49577bf17105478db911eb39bf103e738e2838ca2ec72dd",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceProposals",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "AgreementsStorage",
            "src": "contracts/storage/AgreementsStorage.sol:8"
          },
          {
            "label": "proposalExists",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "contract": "AgreementsStorage",
            "src": "contracts/storage/AgreementsStorage.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)50_storage",
            "contract": "AgreementsStorage",
            "src": "contracts/storage/AgreementsStorage.sol:17"
          },
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "52",
            "type": "t_contract(IDAOSpaceFactory)10788",
            "contract": "AgreementsImplementation",
            "src": "contracts/AgreementsImplementation.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)10788": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "69825ba13167196c9e7bb18b1ccf9525a0fed8dc7d5878457ffced0abd1bbacf": {
      "address": "0x045BD663837254eaA29D07270ad74b760487Bc91",
      "txHash": "0x58881a92e01c50282c7dfb5527080680b1b256c37ee1cfc9ba6ff64e40bdf324",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)11770",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:62"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)11778",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:63"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:65"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)11839_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:84"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:86"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:92"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:95"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:98"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)11489",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:100"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Transaction)10404_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)11770": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)11778": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)11489": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)11839_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)11839_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)10404_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)10404_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "fa95f5ca4e5f3c38631a078516434aca971a2151c0a234ce9dded4d320c7acd1": {
      "address": "0x3a2771C4d4fa0e89c8123438e04Ac4dfAE5b80B3",
      "txHash": "0xb71f15d3d3023673340a3169e6b01873dbecaa8f3905ab4470dfc3db75ce98e0",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)11986",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:62"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)11994",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:63"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:65"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)12055_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:84"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:86"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:92"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:95"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:98"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)11705",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:100"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:103"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Transaction)10597_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)11986": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)11994": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)11705": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)12055_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)12055_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)10597_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)10597_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ccb0b503956f4f48166f101de63b93fbda6b59fb87d9689493bf9cb9085cef11": {
      "address": "0xe0E79d4ABb93c8EbDf31D25724d794C616248bD5",
      "txHash": "0x72b2dfd5dca472ca352b6ee5a6d03db053753077f035436cd38c05f8d5f8cbce",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)12054",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:62"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)12062",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:63"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:65"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)12123_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:84"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:86"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:92"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:95"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:98"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)3999",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:100"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:103"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:106"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Transaction)10655_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)12054": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)12062": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)3999": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)12123_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)12123_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)10655_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)10655_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b221a205fb8da77f03034b263f3cad8d355e279e7670ee94eb2eaf1f8e5185b4": {
      "address": "0x4AB052795BDe8ff4F174Fe5550a232736FdBfCEC",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)14220_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)14189",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:35"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:36"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:37"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)14246_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:47"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:48"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:51"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "10",
            "type": "t_contract(IDAOProposals)12605",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)12605": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)14189": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)14220_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)14246_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)14220_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)14246_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      },
      "allAddresses": [
        "0x4AB052795BDe8ff4F174Fe5550a232736FdBfCEC"
      ]
    },
    "e7b19b5fab02a8e440ebc66d556236b65c6ec7c4b731d813a01670a56f6cf3cd": {
      "address": "0xF0C240B76cfd66F047008D50933e3e0c69220980",
      "txHash": "0xc5bf239a3268d11f7c0e081511c4026d33ddd4074629b75c5e50c0efb9354359",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacePayments",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(SpacePayment)11448_storage)",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:22"
          },
          {
            "label": "hyphaTokenContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:28"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_struct(SpacePayment)11448_storage)": {
            "label": "mapping(uint256 => struct SpacePaymentTracker.SpacePayment)",
            "numberOfBytes": "32"
          },
          "t_struct(SpacePayment)11448_storage": {
            "label": "struct SpacePaymentTracker.SpacePayment",
            "members": [
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "freeTrialUsed",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3667650ffe1acbeacce8313f654d22a7aad9c8c17114275724af8622c4d2265d": {
      "address": "0x221F4f8c1FCa6134Bc697aE026cf783baBBe575f",
      "txHash": "0xa8f32bff09842ee0ae266aa98df3dceede39ebfa53026b8de655991bad5927f2",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:10"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2739",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:13"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(ISpacePaymentTracker)14039",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:14"
          },
          {
            "label": "iexAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:17"
          },
          {
            "label": "mainHyphaAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:18"
          },
          {
            "label": "mintAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:21"
          },
          {
            "label": "HYPHA_PRICE_USD",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:24"
          },
          {
            "label": "USDC_PER_DAY",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:22"
          },
          {
            "label": "HYPHA_PER_DAY",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:26"
          },
          {
            "label": "accumulatedRewardPerToken",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:31"
          },
          {
            "label": "lastUpdateTime",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:32"
          },
          {
            "label": "pendingDistribution",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:33"
          },
          {
            "label": "userRewardDebt",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:37"
          },
          {
            "label": "unclaimedRewards",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2739": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)14039": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9813c772099d0df977e089661c57f27118501e4bff582fbe0a28b404da078959": {
      "address": "0x02A58c397A516eaBb5693ea4dD8d6b1C8F2a0B07",
      "txHash": "0xf7caafc9417bec42132b3f0a80736c34a387e5058d3ebe089d1b0eb3967312d2",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)14103",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:60"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)14111",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:61"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:63"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)14172_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:82"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:90"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:93"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:96"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)13829",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:98"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:101"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:104"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:107"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)1857": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)3999": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Transaction)12456_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)14103": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)14111": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)13829": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)14172_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)14172_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)12456_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)12456_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b2519ff9910b35146930c123a292b55298ec05816dc5d1e4ccc6bfb282f1fe16": {
      "address": "0x6729F0917CF0078954e051ACd63759568Ad97A39",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)14495",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:60"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)14503",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:61"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:63"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)14564_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:82"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:90"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:93"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:96"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)14221",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:98"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:101"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:104"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:107"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:108"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:111"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)12786_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)14495": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)14503": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)14221": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)14564_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)14564_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)12786_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)12786_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9ff193d545e9fdc5200156b0bbb76024348d81c11ea1aada997f339376345598": {
      "address": "0xEBE7B59cBD964c6F14C1D077E5d3b4EAaEcB5ff0",
      "txHash": "0xfce611211205385adf23c075e55efe03f2b25bae46a35dabbb9565423334b7c4",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)14669",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:60"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)14677",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:61"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:63"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)14738_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:82"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:90"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:93"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:96"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)14395",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:98"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:101"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:104"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:107"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:108"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:111"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)12953_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)14669": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)14677": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)14395": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)14738_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)14738_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)12953_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)12953_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "fb320aefaa7baf749b0330a6dedc5a03af8c26d44fc2ab092bb5713bbe981d23": {
      "address": "0x3DFd76B8cb9E0F7a98B53A0A43048D1c32829c09",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)14838_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)14807",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:35"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:36"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:37"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)14864_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:47"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:48"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:51"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "10",
            "type": "t_contract(IDAOProposals)13150",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)13150": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)14807": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)14838_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)14864_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)14838_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)14864_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2000032d908f8dd24f063e02c0f189883ea4a2352d14fc40e9a7c5b3a9181e61": {
      "address": "0xEe7597bBfdca109BFf416fEd8fe15BeE53b5b7C0",
      "txHash": "0xd6f27b034b6734851683edf7a17683963592b603a5c1e23bcb2c9161c4d0fb1d",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)3186_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)3155",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:35"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:36"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:37"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)3212_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:47"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:48"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:51"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "10",
            "type": "t_contract(IDAOProposals)2889",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)2889": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)3155": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)3186_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)3212_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)3186_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)3212_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "24e88ffae50c30fd12ff831c9d2044cb312ea9ee86e0dc721e6e44b40470d5ad": {
      "address": "0x9C9eF6875F8c84E99CC19B0a80Ec02E2e94520ff",
      "txHash": "0x3348825155bba8574382d90869314033265a02968b3ad796c45c33f981033639",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)14757",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:60"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)14765",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:61"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:63"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)14826_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:82"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:90"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:93"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:96"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)14483",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:98"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:101"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:104"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:107"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:108"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:111"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)13041_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)14757": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)14765": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)14483": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)14826_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)14826_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)13041_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)13041_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5a90900dceb81b3347706d2c859a6594c77b0f0ed522dcba26b7511aa90cec4e": {
      "address": "0x27f1F5B0b41cDd10fb729600CDc9AFeC83FCDD2D",
      "txHash": "0xfb1f744297db4d8a07d41034c9d271e6d796971ee21988ef39c3d0ae7d81d4ea",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)15850",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:60"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)15858",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:61"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:63"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)15919_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:82"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:90"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:93"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:96"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)15492",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:98"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:101"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:104"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:107"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:108"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:111"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)14050_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)15850": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)15858": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)15492": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)15919_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)15919_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)14050_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)14050_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6991c9c033a5e02ffcf3cbcad36f76430f959de86b1edaa609bee63edaf4924a": {
      "address": "0x7c8B220217E1718f1d4587bBf9bF1ed14451c979",
      "txHash": "0xdcd3bd8b96390293dbba65d8fe2fc637d437251c172bec799927af54948aa7ad",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)14926_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)14895",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:35"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:36"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:37"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)14952_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:47"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:48"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:51"
          },
          {
            "label": "memberLastInviteTime",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:55"
          },
          {
            "label": "memberActiveInviteProposal",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:58"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "12",
            "type": "t_contract(IDAOProposals)13238",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)13238": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)14895": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)14926_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)14952_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)14926_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)14952_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f244a24875a97ec833a658fb3962f08a6148b967266c9cdcd72b70f6e145d843": {
      "address": "0x643bB33a6362102Dbf0dB7b19Aea8Ac598632096",
      "txHash": "0xf7f1ee596e36bd2ddc5d1463fc6bb36bf0be7b1df26897719d2ff3a54a9d95f3",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)3250_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)3219",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:35"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:36"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:37"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)3276_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:47"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:48"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:51"
          },
          {
            "label": "memberLastInviteTime",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:55"
          },
          {
            "label": "memberActiveInviteProposal",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:58"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "12",
            "type": "t_contract(IDAOProposals)2953",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)2953": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)3219": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)3250_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)3276_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)3250_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)3276_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e1e7120d31b76dc490c4fc0b3a68fb81378f3f2285ae252fc0fcf665876cb1fe": {
      "address": "0x0547673812be7F8419185Da7A365CD4E98bFf50e",
      "txHash": "0x1e20fcb4cba534a77657927406f16366191d6c2c78a84eeea2c09721da798a48",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)14939_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)14908",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:35"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:36"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:37"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)14965_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:47"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:48"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:51"
          },
          {
            "label": "memberLastInviteTime",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:55"
          },
          {
            "label": "memberActiveInviteProposal",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:58"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "12",
            "type": "t_contract(IDAOProposals)13251",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)13251": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)14908": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)14939_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)14965_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)14939_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)14965_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4c8152961aa0bc6d8524b49a7ea191e8cc04ac964c8109945a04777cefce5354": {
      "address": "0x2Ed77D7Df0b2Ea811e0bc2EC3ff70205da4b9702",
      "txHash": "0x0096de0b3e701404565b0a79880846563436a1b324d923c590a6b3b03d3d9c62",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)16135_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)16104",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:35"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:36"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:37"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)16161_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:47"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:48"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:51"
          },
          {
            "label": "memberLastInviteTime",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:55"
          },
          {
            "label": "memberActiveInviteProposal",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:58"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "12",
            "type": "t_contract(IDAOProposals)14363",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)14363": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)16104": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)16135_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)16161_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)16135_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)16161_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "fd67032880da2007691c00df177d9c79db4c671482f99359a7179d876032340f": {
      "address": "0x42714De3e41BA2838e3A86a1a8AA93ADa66DF8BF",
      "txHash": "0xd3f7b880a6216fcf5ca98911afd221c0f006599e4d82eb7c35d117ea4122d7cf",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "userDelegates",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:12"
          },
          {
            "label": "delegateToDelegators",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:15"
          },
          {
            "label": "userHasDelegated",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:18"
          },
          {
            "label": "delegatorIndex",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:21"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)46_storage",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f1c324d6964c371d2d2c3373ee57a8b8df9b235e4c71c5e4069fedafc4d6fa0a": {
      "address": "0x258D6B39b802991e47536Cf152eDc149d05e64df",
      "txHash": "0x51a3bbf978255008c48221d83cc205e1ae985e30fc904afcbadbc6c86892f26e",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "TokenVotingPowerStorage",
            "src": "contracts/storage/TokenVotingPowerStorage.sol:14"
          },
          {
            "label": "tokenFactory",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegularTokenVotingPowerStorage",
            "src": "contracts/storage/RegularTokenVotingPowerStorage.sol:14"
          },
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "RegularTokenVotingPowerStorage",
            "src": "contracts/storage/RegularTokenVotingPowerStorage.sol:17"
          },
          {
            "label": "delegationContract",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IVotingPowerDelegation)15800",
            "contract": "RegularTokenVotingPowerStorage",
            "src": "contracts/storage/RegularTokenVotingPowerStorage.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IVotingPowerDelegation)15800": {
            "label": "contract IVotingPowerDelegation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "eaad1bd954783d69c4e9b0287f4677b7190270dcf80cb3eedbd9bc46e9e8f74d": {
      "address": "0x211da7bC6f9EADd0d73f420EF8a9621195751907",
      "txHash": "0x6fc2c7121572fd571211600745078562f31346cab239d3be140948cb85d1f0cc",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "TokenVotingPowerStorage",
            "src": "contracts/storage/TokenVotingPowerStorage.sol:14"
          },
          {
            "label": "decayTokenFactory",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "DecayTokenVotingPowerStorage",
            "src": "contracts/storage/DecayTokenVotingPowerStorage.sol:14"
          },
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "DecayTokenVotingPowerStorage",
            "src": "contracts/storage/DecayTokenVotingPowerStorage.sol:17"
          },
          {
            "label": "delegationContract",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IVotingPowerDelegation)15690",
            "contract": "DecayTokenVotingPowerStorage",
            "src": "contracts/storage/DecayTokenVotingPowerStorage.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)419_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IVotingPowerDelegation)15690": {
            "label": "contract IVotingPowerDelegation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5364b8d234b949a5aa9b71107bf1f8a8b99d7aa8def8b72dfd817682d103f1c7": {
      "address": "0xb27BE86c022DeA48d859B9dF5C6083c15bE6302a",
      "txHash": "0x0924abbb22a0f92ae7aefce6695ed06fd403f8703ab6767d89fdb8e31a51f7ae",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)16393",
            "contract": "SpaceVotingPowerStorage",
            "src": "contracts/storage/SpaceVotingPowerStorage.sol:19"
          },
          {
            "label": "delegationContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IVotingPowerDelegation)15690",
            "contract": "SpaceVotingPowerStorage",
            "src": "contracts/storage/SpaceVotingPowerStorage.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)48_storage",
            "contract": "SpaceVotingPowerStorage",
            "src": "contracts/storage/SpaceVotingPowerStorage.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_contract(IDAOSpaceFactory)16393": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IVotingPowerDelegation)15690": {
            "label": "contract IVotingPowerDelegation",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1cc5ccf1ed5056ec8164bfd8fa27bb83aeb0ece6f379ca6862ac2f30e039011c": {
      "address": "0x9A7C6e592007427d2bB32e5750BfD8896BA9057b",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:7"
          },
          {
            "label": "decayVotingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c0ea93be21f668608fe684c9fba278063341d29b3d694d594060e6e1687955ad": {
      "address": "0xaeB32088aF1d5c1bb2d19CeAb76a8c22A9e9Bdea",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ab5c150136c40160a403a03b5d7b3a4f2bf511ace0b345152a60b59149f617cc": {
      "address": "0xc0Ea2CD673444D9ED94B15B772483D87830C91Db",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "edd63fa70ed32a902e1470f130233eb03b6d193e34072a7d42a1e2535ed0bebb": {
      "address": "0x14275c91D2388cc08f7dbCD4c8C6D949E400dD6E",
      "txHash": "0x9a1293b5f90a1caabd9fd1530c06168f439fb23bf5a7f15295075b85f8b75895",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)16129_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)16098",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:35"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:36"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:37"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)16155_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:47"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:48"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:51"
          },
          {
            "label": "memberLastInviteTime",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:55"
          },
          {
            "label": "memberActiveInviteProposal",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:58"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "12",
            "type": "t_contract(IDAOProposals)14357",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)14357": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)16098": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)16129_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)16155_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)16129_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)16155_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "81c091d9dfc1245054f52cbe308c61e17472685975b95d655cc0f433e2f2593f": {
      "address": "0xF3aa2aAbfCfC63AD8DcdAfFac5EefcD37E0c1e2D",
      "txHash": "0x19261c776570242b858ec01fac014ea46b21f63ab0b7c9bcaa0985192db81503",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)15960",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:60"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)15968",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:61"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:63"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)16029_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:82"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:84"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:90"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:93"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:96"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)15602",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:98"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:101"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:104"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:107"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:108"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:111"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)14160_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)15960": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)15968": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)15602": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)16029_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)16029_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)14160_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)14160_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "233db129286dfc6696a5fff1ea74df06da6f38b89499cd90f7235413a9e70e34": {
      "address": "0xBa5250A30b3649F092D2e060232EFd711E369921",
      "txHash": "0x431569a7a5fb4f15e48b3569480922256b945e2915c8b5de353fef37260f30ad",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)4863_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)4832",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:35"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:36"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:37"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)4889_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:47"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:48"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:51"
          },
          {
            "label": "memberLastInviteTime",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:55"
          },
          {
            "label": "memberActiveInviteProposal",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:58"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "12",
            "type": "t_contract(IDAOProposals)4282",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)4282": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)4832": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)4863_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)4889_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)4863_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)4889_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b84526f6446ef4c61abff8830406845aa5690e4818d8dd3ea0c69a3e2283bdcb": {
      "address": "0x8D1D40E5d3309cF6Ec5d1A3e1f6d58436ac61eA2",
      "txHash": "0xda2e9542e6fbd425aa4a6d4b8c6b9d474d42eb82802c1b9c363d2feebd81358d",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)16001",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:86"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)16009",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:87"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:89"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)16070_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:115"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:117"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:123"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:126"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:129"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)15643",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:131"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:134"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:137"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:140"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:141"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:144"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:145"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)14207_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)16001": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)16009": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)15643": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)16070_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)16070_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)14207_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)14207_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "65a45884d0f32f66a6e7cda56892bcaac1ebb6587ecbe3e0b9a615ecdf13c090": {
      "address": "0xFCb618952D23fbfd49a1A7643A958d3934CFfA7a",
      "txHash": "0x92b1b4e223c9c8fd9cb4679396de11dd53eb6a65f8e1d5a17c3b068cfda06634",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)16173_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)16142",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:35"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:36"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:37"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)16199_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:47"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:48"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:51"
          },
          {
            "label": "memberLastInviteTime",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:55"
          },
          {
            "label": "memberActiveInviteProposal",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:58"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "12",
            "type": "t_contract(IDAOProposals)14407",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)14407": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)16142": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)16173_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)16199_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)16173_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)16199_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "0b0fac2ea4c4d7c7e1ac9cc61ae813e7dea5a09d40094b56cf6ed5a8e9532625": {
      "address": "0xB1EC920f5cE0F01a31658A2f7A26E052E8Ea899E",
      "txHash": "0xb52e628ff4ecee6b1ce72d833a924aa550b637a7f004a45b44b560ab5847242b",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "TokenVotingPowerStorage",
            "src": "contracts/storage/TokenVotingPowerStorage.sol:14"
          },
          {
            "label": "tokenFactory",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegularTokenVotingPowerStorage",
            "src": "contracts/storage/RegularTokenVotingPowerStorage.sol:14"
          },
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "RegularTokenVotingPowerStorage",
            "src": "contracts/storage/RegularTokenVotingPowerStorage.sol:17"
          },
          {
            "label": "delegationContract",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IVotingPowerDelegation)15822",
            "contract": "RegularTokenVotingPowerStorage",
            "src": "contracts/storage/RegularTokenVotingPowerStorage.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IVotingPowerDelegation)15822": {
            "label": "contract IVotingPowerDelegation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c392ee267394c2152a37ef87393347e6b64a20fc07e98a75b685cb32adfa6ebf": {
      "address": "0x034F31B3e361c653c17899bdb4f92EB1a551CD4A",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:10"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2739",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:13"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(ISpacePaymentTracker)15675",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:14"
          },
          {
            "label": "iexAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:17"
          },
          {
            "label": "mainHyphaAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:18"
          },
          {
            "label": "mintAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:21"
          },
          {
            "label": "HYPHA_PRICE_USD",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:24"
          },
          {
            "label": "USDC_PER_DAY",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:25"
          },
          {
            "label": "HYPHA_PER_DAY",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:26"
          },
          {
            "label": "distributionMultiplier",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:28"
          },
          {
            "label": "accumulatedRewardPerToken",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:31"
          },
          {
            "label": "lastUpdateTime",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:32"
          },
          {
            "label": "pendingDistribution",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:33"
          },
          {
            "label": "userRewardDebt",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:36"
          },
          {
            "label": "unclaimedRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:37"
          },
          {
            "label": "mintTransferWhitelist",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:40"
          },
          {
            "label": "normalTransferWhitelist",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2739": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)15675": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "eb90d360117d99a81d7a99ac505d177853d0064663f5e5ebb6fb2611c9cf802d": {
      "address": "0x5F8C8a317a13CC030E0e43C0b65a40aeC7d6B257",
      "txHash": "0x6d79edc6f0311cf638547b635d37c10767a6f4369774152addeff90b755ad538",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:10"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2739",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:13"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(ISpacePaymentTracker)15646",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:14"
          },
          {
            "label": "iexAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:17"
          },
          {
            "label": "mainHyphaAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:18"
          },
          {
            "label": "mintAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:21"
          },
          {
            "label": "HYPHA_PRICE_USD",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:24"
          },
          {
            "label": "USDC_PER_DAY",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:25"
          },
          {
            "label": "HYPHA_PER_DAY",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:26"
          },
          {
            "label": "distributionMultiplier",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:28"
          },
          {
            "label": "accumulatedRewardPerToken",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:31"
          },
          {
            "label": "lastUpdateTime",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:32"
          },
          {
            "label": "pendingDistribution",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:33"
          },
          {
            "label": "userRewardDebt",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:36"
          },
          {
            "label": "unclaimedRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:37"
          },
          {
            "label": "mintTransferWhitelist",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:40"
          },
          {
            "label": "normalTransferWhitelist",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2739": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)15646": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "584a1b1e4c356bb05eebc102dc84a058e69e82bb2ce540362233593c166c0f3e": {
      "address": "0x9beC94796eA3EB534094E87395C7e006CF8d6c42",
      "txHash": "0x177770fe565662c806aad9630e72b6783de497a26a77dc9f153e2727cf728cb2",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)16004",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:86"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)16012",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:87"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:89"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)16073_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:115"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:117"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:123"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:126"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:129"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)15646",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:131"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:134"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:137"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:140"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:141"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:144"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:145"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)14210_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)16004": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)16012": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)15646": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)16073_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)16073_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)14210_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)14210_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "fc2a13df5cb4ad729f8279a499b2e69c2436161d4f2e016dbe6fe794081002b1": {
      "address": "0xC040d5b2A438f84221e97E7FEf3e4bF974a86309",
      "txHash": "0xabc0744634b4601930cacafd8c0e3887a7f35530626fe19d03fd174a3310e61d",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)3125",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:86"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)3133",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:87"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:89"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)3194_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:115"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:117"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:123"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:126"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:129"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)3067",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:131"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:134"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:137"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:140"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:141"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:144"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:145"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)2748_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)3125": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)3133": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)3067": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)3194_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)3194_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)2748_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)2748_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "654c74abf7e6bc6928bc9dc5cb938f04ff88c52ff50ccedb0b54cf17c4a154f0": {
      "address": "0x1856F384200f765a63804B39Dc902d8633CA0f78",
      "txHash": "0xab97dc6662b0f13a7f6bda15ef9fc6eaf117ac87ccb0af2ef7986888835468e9",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)6189",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:86"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)6197",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:87"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:89"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)6258_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:115"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:117"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:123"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:126"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:129"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)6131",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:131"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:134"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:137"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:140"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:141"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:144"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:145"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)5555_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)6189": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)6197": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)6131": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)6258_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)6258_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)5555_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)5555_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c0ef667b9f9504d25fc9a39a9a8472e5343a47576f7313bdd4f36d8f41f4a8d7": {
      "address": "0x58cdAa6F1492E100d30439029a307dBaFa72C4A1",
      "txHash": "0xd52993f3de4baad36c066ca04dcf28d506c6f83971547ca069fd147ae5a8e9e9",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:10"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)1857",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:13"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(ISpacePaymentTracker)3934",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:14"
          },
          {
            "label": "iexAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:17"
          },
          {
            "label": "mainHyphaAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:18"
          },
          {
            "label": "mintAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:21"
          },
          {
            "label": "HYPHA_PRICE_USD",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:24"
          },
          {
            "label": "USDC_PER_DAY",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:25"
          },
          {
            "label": "HYPHA_PER_DAY",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:26"
          },
          {
            "label": "distributionMultiplier",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:28"
          },
          {
            "label": "accumulatedRewardPerToken",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:31"
          },
          {
            "label": "lastUpdateTime",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:32"
          },
          {
            "label": "pendingDistribution",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:33"
          },
          {
            "label": "userRewardDebt",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:36"
          },
          {
            "label": "unclaimedRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:37"
          },
          {
            "label": "mintTransferWhitelist",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:40"
          },
          {
            "label": "normalTransferWhitelist",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)1857": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)3934": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "09d35f4d94076734da5f97b58a8b4030dcc219feb9ef5a326807d82e50713ec3": {
      "address": "0x0dc9795517588f0060722b30f16066d8D7c7DB8C",
      "txHash": "0xf5c3a66f38994b60d8534da4ebfecb1c428f48f679e22b131fa0f4c10977e38e",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:10"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)1857",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:13"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(ISpacePaymentTracker)3934",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:14"
          },
          {
            "label": "iexAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:17"
          },
          {
            "label": "mainHyphaAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:18"
          },
          {
            "label": "mintAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:21"
          },
          {
            "label": "HYPHA_PRICE_USD",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:24"
          },
          {
            "label": "USDC_PER_DAY",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:25"
          },
          {
            "label": "HYPHA_PER_DAY",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:26"
          },
          {
            "label": "distributionMultiplier",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:28"
          },
          {
            "label": "accumulatedRewardPerToken",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:31"
          },
          {
            "label": "lastUpdateTime",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:32"
          },
          {
            "label": "pendingDistribution",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:33"
          },
          {
            "label": "userRewardDebt",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:36"
          },
          {
            "label": "unclaimedRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:37"
          },
          {
            "label": "mintTransferWhitelist",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:40"
          },
          {
            "label": "normalTransferWhitelist",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)1857": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)3934": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1058a10908ffd6095be592984867bbb88e7273b8bfa57622fea5daaaab98e2cd": {
      "address": "0x44b816aFc02d81229e7646B20F6F01a71c7402fc",
      "txHash": "0x4ba53819b5e50db7c56257db59260c0619d45dc3f57212aea889e3e6a466e929",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:10"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2739",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:13"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(ISpacePaymentTracker)15756",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:14"
          },
          {
            "label": "iexAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:17"
          },
          {
            "label": "mainHyphaAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:18"
          },
          {
            "label": "mintAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:21"
          },
          {
            "label": "HYPHA_PRICE_USD",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:24"
          },
          {
            "label": "USDC_PER_DAY",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:25"
          },
          {
            "label": "HYPHA_PER_DAY",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:26"
          },
          {
            "label": "distributionMultiplier",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:28"
          },
          {
            "label": "accumulatedRewardPerToken",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:31"
          },
          {
            "label": "lastUpdateTime",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:32"
          },
          {
            "label": "pendingDistribution",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:33"
          },
          {
            "label": "userRewardDebt",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:36"
          },
          {
            "label": "unclaimedRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:37"
          },
          {
            "label": "mintTransferWhitelist",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:40"
          },
          {
            "label": "normalTransferWhitelist",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2739": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)15756": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ed66e9f4843b21efe97bc2847b9365b2fd1e6e241f31741f88ab60cefaebb04a": {
      "address": "0xd87867b6b433e0fC6CC56C2e74E7909cb600113c",
      "txHash": "0x6bf03f89fc8ba2b909c100d0f404446e6561bba52ec42f4c8a8685eb9d25f09b",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacePayments",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(SpacePayment)11481_storage)",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:22"
          },
          {
            "label": "hyphaTokenContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:28"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_struct(SpacePayment)11481_storage)": {
            "label": "mapping(uint256 => struct SpacePaymentTracker.SpacePayment)",
            "numberOfBytes": "32"
          },
          "t_struct(SpacePayment)11481_storage": {
            "label": "struct SpacePaymentTracker.SpacePayment",
            "members": [
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "freeTrialUsed",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9d5d3842b2a640396a95df316c0196feb918202a9f63d53778d1bea79016bd37": {
      "address": "0x94C89De39D9e1E32B8dF4956f3600E340D2A61B7",
      "txHash": "0x6291f0405460b2de1854b83dfa5983a18d6abe43dd28b480f549dc9b938f9adc",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)3273_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)3242",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:35"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:36"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:37"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)3299_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:47"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:48"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:51"
          },
          {
            "label": "memberLastInviteTime",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:55"
          },
          {
            "label": "memberActiveInviteProposal",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:58"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "12",
            "type": "t_contract(IDAOProposals)2976",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)2976": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)3242": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)3273_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)3299_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)3273_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)3299_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "dd23d4d797aabae72887bd988ffc2c05901b4cf5c1b10b5097781c8f3ff8522a": {
      "address": "0x8DEAEcA83309DAB34D4DB3B55d6224D5ab8F01cC",
      "txHash": "0xbc3e95a187dd155a43e510f5f1da6248468eb475ecca1b241d678ab67af8409a",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)16283_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)16252",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:35"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:36"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:37"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)16309_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:47"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:48"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:51"
          },
          {
            "label": "memberLastInviteTime",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:55"
          },
          {
            "label": "memberActiveInviteProposal",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:58"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "12",
            "type": "t_contract(IDAOProposals)14510",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)14510": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)16252": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)16283_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)16309_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)16283_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)16309_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d73b5bb5163dc89617c1c547f4a31c4568d4ea3d0ac11ddf255ba4b54a4624e4": {
      "address": "0xd08C71560e3862f799Bb73FD6F5Fa08D001896C3",
      "txHash": "0xa454b96969fde395da7f31c5cb42f8c4d3c312a6ccf112bbe8b41cf8ea63cd68",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)16283_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)16252",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:35"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:36"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:37"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)16309_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:47"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:48"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:51"
          },
          {
            "label": "memberLastInviteTime",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:55"
          },
          {
            "label": "memberActiveInviteProposal",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:58"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "12",
            "type": "t_contract(IDAOProposals)14510",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)14510": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)16252": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)16283_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)16309_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)16283_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)16309_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c4247d12b1482a5bbac4a2c489de0c906be489c6581522f906f891536e99f5f4": {
      "address": "0x19DAab145dea7adf9C4CB5dfD73fe3119E8aF90A",
      "txHash": "0x0b3f85dfaad35bf7c076045168e12416837ba80a84290c34e78800de760c04fc",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:10"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2739",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:13"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(ISpacePaymentTracker)16518",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:14"
          },
          {
            "label": "iexAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:17"
          },
          {
            "label": "mainHyphaAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:18"
          },
          {
            "label": "mintAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:21"
          },
          {
            "label": "HYPHA_PRICE_USD",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:24"
          },
          {
            "label": "USDC_PER_DAY",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:25"
          },
          {
            "label": "HYPHA_PER_DAY",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:26"
          },
          {
            "label": "distributionMultiplier",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:28"
          },
          {
            "label": "accumulatedRewardPerToken",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:31"
          },
          {
            "label": "lastUpdateTime",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:32"
          },
          {
            "label": "pendingDistribution",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:33"
          },
          {
            "label": "userRewardDebt",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:36"
          },
          {
            "label": "unclaimedRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:37"
          },
          {
            "label": "mintTransferWhitelist",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:40"
          },
          {
            "label": "normalTransferWhitelist",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2739": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)16518": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "23cda0dc7f19be77c044deaa0af1786e46f47ea91ccc77d5c8f25d93a6967bec": {
      "address": "0x9BDbFaF555CE50832263Cf598224801B490755C3",
      "txHash": "0xd1f45bc4d45e572d88d864f64da92e3be39fb662f6b7472b364933392573a990",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacePayments",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(SpacePayment)5110_storage)",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:22"
          },
          {
            "label": "hyphaTokenContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:28"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_struct(SpacePayment)5110_storage)": {
            "label": "mapping(uint256 => struct SpacePaymentTracker.SpacePayment)",
            "numberOfBytes": "32"
          },
          "t_struct(SpacePayment)5110_storage": {
            "label": "struct SpacePaymentTracker.SpacePayment",
            "members": [
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "freeTrialUsed",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4b5c3155fbf6460195603055400db180b18c73a78b56be6f5e2250f65f12a688": {
      "address": "0xA2be4745656c1aA086422a4CCB18F79340074440",
      "txHash": "0x80a75c3143f582fb0e09511b140ea93a21d7909776f73c721c7a49451211abed",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacePayments",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(SpacePayment)5110_storage)",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:22"
          },
          {
            "label": "_spaceHasPaid",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:25"
          },
          {
            "label": "hyphaTokenContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:31"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpacePayment)5110_storage)": {
            "label": "mapping(uint256 => struct SpacePaymentTracker.SpacePayment)",
            "numberOfBytes": "32"
          },
          "t_struct(SpacePayment)5110_storage": {
            "label": "struct SpacePaymentTracker.SpacePayment",
            "members": [
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "freeTrialUsed",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ffe3c9e5d4c65e6b9b944f285189fe716fb715b740059b325f8dc0f2639c0ca1": {
      "address": "0xD682AD4d72267561F33d078056873011A88aE585",
      "txHash": "0xd7b45567b2f60a0c24f63fb2938f07da47045ecf75107c86916d7905e2ca8505",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacePayments",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(SpacePayment)1450_storage)",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:22"
          },
          {
            "label": "hyphaTokenContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:28"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:29"
          },
          {
            "label": "_spaceHasPaid",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpacePayment)1450_storage)": {
            "label": "mapping(uint256 => struct SpacePaymentTracker.SpacePayment)",
            "numberOfBytes": "32"
          },
          "t_struct(SpacePayment)1450_storage": {
            "label": "struct SpacePaymentTracker.SpacePayment",
            "members": [
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "freeTrialUsed",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9795abfb7dfa820ca5c0a9bf370b17ced0025c48ec76f13841fe6048281e63e7": {
      "address": "0x64819A31dAf1e5880Da70162A8ab66C29d7c0324",
      "txHash": "0xb4caca257063b2480b5dabca493d06f5615c3d37a377ea10d7040e8a617faa59",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacePayments",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(SpacePayment)1450_storage)",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:22"
          },
          {
            "label": "hyphaTokenContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:28"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "2",
            "type": "t_address",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:29"
          },
          {
            "label": "_spaceHasPaid",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "SpacePaymentTracker",
            "src": "contracts/SpacePaymentTracker.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpacePayment)1450_storage)": {
            "label": "mapping(uint256 => struct SpacePaymentTracker.SpacePayment)",
            "numberOfBytes": "32"
          },
          "t_struct(SpacePayment)1450_storage": {
            "label": "struct SpacePaymentTracker.SpacePayment",
            "members": [
              {
                "label": "expiryTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "freeTrialUsed",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f6d4337bf91b80cf9687d0c58ae368ba1818540367360956aeb58b0bad575119": {
      "address": "0x333D254E9c78cb2d646220c952068C4708c0C315",
      "txHash": "0x9cb613af7c7f8e9ad0f4dff20bee2a4f6a9a944c5568d2411e8cea7f4cc83f3d",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)16613",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:87"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)16621",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:88"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:90"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)16682_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:116"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:118"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:124"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:127"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:130"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)16246",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:132"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:135"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:138"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:141"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:142"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:145"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:146"
          },
          {
            "label": "spaceMinProposalDuration",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:149"
          },
          {
            "label": "delegationContract",
            "offset": 0,
            "slot": "63",
            "type": "t_contract(IVotingPowerDelegation)16452",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:150"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)14778_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)16613": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)16621": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)16246": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_contract(IVotingPowerDelegation)16452": {
            "label": "contract IVotingPowerDelegation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)16682_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)16682_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)14778_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)14778_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "0bb79dfe564d9bbbb02caedec64d34dfe0d6e6d6aaeabfc4940256382587363b": {
      "address": "0x6498f6b02b57Ae1D9d4f7DeC70ad76898c3E4075",
      "txHash": "0xc211e824b5e40a879d51c094690e2d2ae8950349dbfb67d5ca5d9b0d4f0fc9dd",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)16930_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)16899",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:35"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:36"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:37"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)16956_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:47"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:48"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:51"
          },
          {
            "label": "memberLastInviteTime",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:55"
          },
          {
            "label": "memberActiveInviteProposal",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:58"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "12",
            "type": "t_contract(IDAOProposals)15114",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)15114": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)16899": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)16930_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)16956_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)16930_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)16956_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b7f1e0db84cf77765388ad2631dac77a48bc62c8c73e354afc6749975bf65488": {
      "address": "0x59a6Ee5a8428d40B5eD3CC31356f225C575c8a00",
      "txHash": "0x9ab701628c6c27c9e7260a687f3dd20cfa8e856a56ca2c3c5f21e0fb96f0573b",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "userDelegates",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:12"
          },
          {
            "label": "delegateToDelegators",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:15"
          },
          {
            "label": "userHasDelegated",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:18"
          },
          {
            "label": "delegatorIndex",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:21"
          },
          {
            "label": "spaceDelegates",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:25"
          },
          {
            "label": "spaceDelegateIndex",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:28"
          },
          {
            "label": "isDelegateInSpace",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_uint256)43_storage",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "11cce66c03c2f47ab678184d9c3a60cf79ff6fe736c984b4e861b84c1cdb42bc": {
      "address": "0x8f4913d7e279e449E0dF7B5ef0fD1D240d90C9d6",
      "txHash": "0xd4f9cc8e79003f3a078d45b72d442b7de9b0c0cb149f2ceb31031e493bd00ea6",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)3526",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:87"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)3534",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:88"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:90"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)3595_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:116"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:118"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:124"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:127"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:130"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)3375",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:132"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:135"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:138"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:141"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:142"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:145"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:146"
          },
          {
            "label": "spaceMinProposalDuration",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:149"
          },
          {
            "label": "delegationContract",
            "offset": 0,
            "slot": "63",
            "type": "t_contract(IVotingPowerDelegation)3467",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:150"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)3024_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)3526": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)3534": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)3375": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_contract(IVotingPowerDelegation)3467": {
            "label": "contract IVotingPowerDelegation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)3595_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)3595_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)3024_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)3024_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "db2ca3fd12d8b91967f732fe024303da7e8afa60e10ce2c4e566f28513ea2d1b": {
      "address": "0x6Fa12efFc5B6a5Bc1d526e6781E80f8F6FE12919",
      "txHash": "0x6648efca240e6ea50dc86dbb6dec006dd57939d885bc74b12cdc5d0037dbe93f",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)16773",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:87"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)16781",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:88"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:90"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)16842_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:116"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:118"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:124"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:127"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:130"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)16398",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:132"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:135"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:138"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:141"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:142"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:145"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:146"
          },
          {
            "label": "spaceMinProposalDuration",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:149"
          },
          {
            "label": "delegationContract",
            "offset": 0,
            "slot": "63",
            "type": "t_contract(IVotingPowerDelegation)16612",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:150"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)14930_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)16773": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)16781": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)16398": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_contract(IVotingPowerDelegation)16612": {
            "label": "contract IVotingPowerDelegation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)16842_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)16842_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)14930_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)14930_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2eedfa8e9c641755b549a62cc6fc959c9bc955743b161e74907c54b54d99522e": {
      "address": "0xFFc8F704f400F99eC414E470FD64D22C1A601bA8",
      "txHash": "0x225aa2eb907847f24a1417e0aba7714141f246bf98a0059c969e297e27363c38",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "userDelegates",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:12"
          },
          {
            "label": "delegateToDelegators",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:15"
          },
          {
            "label": "userHasDelegated",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:18"
          },
          {
            "label": "delegatorIndex",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:21"
          },
          {
            "label": "spaceDelegates",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:25"
          },
          {
            "label": "spaceDelegateIndex",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:28"
          },
          {
            "label": "isDelegateInSpace",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:31"
          },
          {
            "label": "delegateToSpaces",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:34"
          },
          {
            "label": "delegateToSpaceIndex",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:35"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)43_storage",
            "contract": "VotingPowerDelegationStorage",
            "src": "contracts/storage/VotingPowerDelegationStorage.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]",
            "numberOfBytes": "1376"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(uint256 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "dbdbdb3efea4f2ed1ce5c91945bbfadf7929bc36fb154ac5d41b0e71d368d8ea": {
      "address": "0xaabf3d059C0af40c58aBdCb14024e7E0c9dc7206",
      "txHash": "0x95ca5124670b13db41726afc03a012cce45f06d37c31490452f6aa2b743f1387",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)17522_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)17491",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:35"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:36"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:37"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)17548_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:47"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:48"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:51"
          },
          {
            "label": "memberLastInviteTime",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:55"
          },
          {
            "label": "memberActiveInviteProposal",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:58"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "12",
            "type": "t_contract(IDAOProposals)15706",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)15706": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)17491": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)17522_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)17548_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)17522_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)17548_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "af842296adc540f4193e71497fc6586d59843889f423bf9cbff2182ec183d78b": {
      "address": "0x1532297180E9537b2d754E15234441AA16Dd8F46",
      "txHash": "0x4a95bbfc9a0efc24e2881ec041d29caf770f065f2ce4f879c5a21d078954bb29",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "cd0aa990a988ede54f2a465711f41e376d5c550b2e5fe3850cb172212629373e": {
      "address": "0x6A151Dc0159A05d68658b97d63429B1b6209d56F",
      "txHash": "0x4dad1dec509f82b8cb58fc48d333ca0266333bc1aac386f98c861f98ed312014",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)17346",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:87"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)17354",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:88"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:90"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)17415_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:116"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:118"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:124"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:127"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:130"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)16971",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:132"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:135"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:138"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:141"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:142"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:145"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:146"
          },
          {
            "label": "spaceMinProposalDuration",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:149"
          },
          {
            "label": "delegationContract",
            "offset": 0,
            "slot": "63",
            "type": "t_contract(IVotingPowerDelegation)17185",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:150"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)15503_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)17346": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)17354": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)16971": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_contract(IVotingPowerDelegation)17185": {
            "label": "contract IVotingPowerDelegation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)17415_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)17415_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)15503_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)15503_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c3cc1a251b85a53d18b90b887c7e6fe7649d32fcebe43d6382909f8e2d59f265": {
      "address": "0xFf29579a239bFDdA3b1326288FaC862c933148cF",
      "txHash": "0xff5ecdbf6afadcbb91b04c2a066d520c735e553289440ce7f2c7b28e2f60786a",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)3541",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:87"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)3549",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:88"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:90"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)3610_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:116"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:118"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:124"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:127"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:130"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)3382",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:132"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:135"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:138"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:141"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:142"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:145"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:146"
          },
          {
            "label": "spaceMinProposalDuration",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:149"
          },
          {
            "label": "delegationContract",
            "offset": 0,
            "slot": "63",
            "type": "t_contract(IVotingPowerDelegation)3482",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:150"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)3031_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)3541": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)3549": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)3382": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_contract(IVotingPowerDelegation)3482": {
            "label": "contract IVotingPowerDelegation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)3610_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)3610_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)3031_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)3031_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3df0fc2cfcac3694f6b2ee1919fb0198930056470b320b18a3aef3ae9e2b35c6": {
      "address": "0xEc9a68b9355B5eF9F50E76E849A2323aB660D012",
      "txHash": "0xd12665f57778cafeaa8afad3ee9809d3474546eb9cad848d0ea5a1d9d5d2bba1",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:7"
          },
          {
            "label": "decayVotingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "15170c5cf2786ee6ed2bd1196bdfd73c80c666aa6afd0c4ecf6d282757e9c571": {
      "address": "0xFCBB65408522acc7A4712b985cDc0c6b91F3A9e9",
      "txHash": "0xb33c6e8dc8ac69bd60f5a5f5c6babeb7dbb4a515a93615da56984fa3cfbaf8cd",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "0b81b61793c6ef6a2f813ae6d769dfe0fec6871f364f47a37c20bdce049504b9": {
      "address": "0x8D954f1aaA0D049e34e87DD4e933808470c982A6",
      "txHash": "0x2a834aba2e59831f0a90b84b1bdd9c63ef871e82798c88e8b9d928cd92365d13",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "totalMinted",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:10"
          },
          {
            "label": "usdc",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2739",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:13"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(ISpacePaymentTracker)16513",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:14"
          },
          {
            "label": "iexAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:17"
          },
          {
            "label": "mainHyphaAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:18"
          },
          {
            "label": "mintAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:21"
          },
          {
            "label": "HYPHA_PRICE_USD",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:24"
          },
          {
            "label": "USDC_PER_DAY",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:25"
          },
          {
            "label": "HYPHA_PER_DAY",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:26"
          },
          {
            "label": "distributionMultiplier",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:28"
          },
          {
            "label": "accumulatedRewardPerToken",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:31"
          },
          {
            "label": "lastUpdateTime",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:32"
          },
          {
            "label": "pendingDistribution",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:33"
          },
          {
            "label": "userRewardDebt",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:36"
          },
          {
            "label": "unclaimedRewards",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:37"
          },
          {
            "label": "mintTransferWhitelist",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:40"
          },
          {
            "label": "normalTransferWhitelist",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HyphaTokenStorage",
            "src": "contracts/storage/HyphaTokenStorage.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IERC20)2739": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)16513": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a853e57eaf0f10002c643b33fce1dac66ff11258c8f25cfffa344745dafe712d": {
      "address": "0xFEB70a967912c91c008b8BD2234b3174e237874b",
      "txHash": "0x300aac7b731c7fcb13dc160fce2a83b62f076f2819a3fc007597cd6c203c67b6",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "89d9e231f87aa1d1f9ea53d544499108203c8690e7cb0d7c99d6e7cc8ca4cc04": {
      "address": "0x4e545a574a9C41daa465b8fBEf7c06437ae4C0A3",
      "txHash": "0xed88b4d2ffde4987738251ac6c46f15e1d523adb2c0468ab19839fa68ed98ae3",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d6279ca71b28b02138148e61f13cd42422f2e8278c69ec45a10152c9537be0ff": {
      "address": "0x72b77839a31C99889165d692aFf7Aa500f03fB49",
      "txHash": "0x6d6bda1b6ef3dd43f6c16e9f4d577c6c687a9fc335796e4c80c03e8104531bfb",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a7087eba0ea9bd2448e2638edabf994d652ba07873fa012343abb426275de16b": {
      "address": "0x947df5c0e24f749AB12C192119812611232f38eA",
      "txHash": "0x3e9a2d1b72c3e759c4a7609ebfbd5099a8f0a2939d3f0a57af322f305b0fba59",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "number",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "SimpleStorageStorage",
            "src": "contracts/storage/SimpleStorageStorage.sol:8"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SimpleStorageStorage",
            "src": "contracts/storage/SimpleStorageStorage.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3599c957765be225fa0496a4a1eb62612c9931d83ee2f7ba3924512566d79fe5": {
      "address": "0xBb668f1aF90091f3f0Fd67BE613Aa7d9D43dA49F",
      "txHash": "0xa080859d31e0edb0fd1162181b0cd601aaa2df72932fe912cfc8ddecdd0cbb32",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:15"
          },
          {
            "label": "spaceTokenImplementation",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "RegularTokenFactory",
            "src": "contracts/RegularTokenFactory.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "24d8360b725a4537cfcb97a89c28e7fd6d409c018569e90e1319a72ad9e45ca7": {
      "address": "0x00DD8928c37E969b234d96Ce296747396861C869",
      "txHash": "0x0a8a9c3e15dde1663b4b1729883fcc57dbd108dee6d2d58007e178b0c9e0a82f",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "SpaceToken",
            "src": "contracts/RegularSpaceToken.sol:17"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "SpaceToken",
            "src": "contracts/RegularSpaceToken.sol:18"
          },
          {
            "label": "transferable",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "SpaceToken",
            "src": "contracts/RegularSpaceToken.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a38e279a7cbc2166ce5d04ed8baebc59516262e79e840cd31f8ba6ba5b554ede": {
      "address": "0x6a01104B8ba896adF7f9e0a633088C7ca9f4a5de",
      "txHash": "0x6cb99e5582e8d58f4ec53a174912e9bde793be204f4ce299402712bd03e02427",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:15"
          },
          {
            "label": "spaceTokenImplementation",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "RegularTokenFactory",
            "src": "contracts/RegularTokenFactory.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7d6ae9744a695695d8a23f21d2ced0dcc3a9e9c39db76517490383fa8af57f5e": {
      "address": "0xc6491A9ec1E8e8Ed9b3A8A6DeBc9e0979EcE7427",
      "txHash": "0x4f49a42ba14d17ac77c2d1e02ac2e39be15e24a4235531441a822801406167bf",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:15"
          },
          {
            "label": "spaceTokenImplementation",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "RegularTokenFactory",
            "src": "contracts/RegularTokenFactory.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "b1d4f7b60aa747ebaced39910d036cd96e23fc9665a53fc4ca33a8d736ea2964": {
      "address": "0x944F7Df62D8a4CCe2bbbdf7a7Da7Dc7Cd3141775",
      "txHash": "0x396ef71b1fdef890e9110564b2b9ed6ab177aaa0ebe1ec5308eade88e54ff7cc",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:15"
          },
          {
            "label": "spaceTokenImplementation",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "RegularTokenFactory",
            "src": "contracts/RegularTokenFactory.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "224a162fe0eb1e6ff768fcfcb667109c78635786fd3c209a51c17ce1c3804aec": {
      "address": "0xD0C8678658FCa3D5c23e0699cB099A16844950e4",
      "txHash": "0x5bec643a2f40e83396333c6ac41846e1f2fb21964da4e9f57442ca3198b0c155",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:15"
          },
          {
            "label": "spaceTokenImplementation",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "RegularTokenFactory",
            "src": "contracts/RegularTokenFactory.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "59876f76f8dd405e54ec73f6038727fc3ed2d6767c0ce602438f61234bc3ce87": {
      "address": "0xc5CBBDC43CE126fB6602280B44A1AEeA0593C5eF",
      "txHash": "0x79ad57c196a121ba837d8e1a3e6ad5816e2eed789c1337592232bf268cfe38ec",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:15"
          },
          {
            "label": "spaceTokenImplementation",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "RegularTokenFactory",
            "src": "contracts/RegularTokenFactory.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e18ccbb75a551b6e42898730cad66fa0792f08239a9b99ae59d7f242deb549cd": {
      "address": "0xAed3c1a4664afF901f48B71D9e21DE01C668bED6",
      "txHash": "0x33abe5df6a0603df3d3ea70c3b1b9669a1be64e833cfd8ec1f288546d26a6a77",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:15"
          },
          {
            "label": "spaceTokenImplementation",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "RegularTokenFactory",
            "src": "contracts/RegularTokenFactory.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "37f3e7690b7466e18fd3befc1c1ea6db43d6804b34bb888d9cc9c29cfb0ef649": {
      "address": "0xfafD7AF9f8c682D1cE7AeaaAb4Ba726b68B7cfE7",
      "txHash": "0xeb785516b81f72bb4bdc981aeb6745d095639d25114c3f976d03c1474a4dce1c",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaces",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(Space)8519_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:33"
          },
          {
            "label": "spaceCounter",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:34"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDirectory)8488",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:35"
          },
          {
            "label": "tokenFactoryAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:36"
          },
          {
            "label": "joinMethodDirectoryAddress",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:37"
          },
          {
            "label": "proposalManagerAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:38"
          },
          {
            "label": "exitMethodDirectoryAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:39"
          },
          {
            "label": "spaceMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_uint256,t_struct(SpaceMembers)8545_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:47"
          },
          {
            "label": "executorToSpaceId",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:48"
          },
          {
            "label": "memberSpaces",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:51"
          },
          {
            "label": "memberLastInviteTime",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:55"
          },
          {
            "label": "memberActiveInviteProposal",
            "offset": 0,
            "slot": "11",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "DAOSpaceFactoryStorage",
            "src": "contracts/storage/DAOSpaceFactoryStorage.sol:58"
          },
          {
            "label": "proposalsContract",
            "offset": 0,
            "slot": "12",
            "type": "t_contract(IDAOProposals)7644",
            "contract": "DAOSpaceFactoryImplementation",
            "src": "contracts/DAOSpaceFactoryImplementation.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOProposals)7644": {
            "label": "contract IDAOProposals",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)8488": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Space)8519_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.Space)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(SpaceMembers)8545_storage)": {
            "label": "mapping(uint256 => struct DAOSpaceFactoryStorage.SpaceMembers)",
            "numberOfBytes": "32"
          },
          "t_struct(Space)8519_storage": {
            "label": "struct DAOSpaceFactoryStorage.Space",
            "members": [
              {
                "label": "unity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quorum",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPowerSource",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "tokenAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "members",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "exitMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "joinMethod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "createdAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "executor",
                "type": "t_address",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(SpaceMembers)8545_storage": {
            "label": "struct DAOSpaceFactoryStorage.SpaceMembers",
            "members": [
              {
                "label": "spaceMemberAddresses",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isSpaceMember",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2f4413854e17df7549bb4f7b4f4cecd0f6601b951b11958901b93a99ef50841a": {
      "address": "0x1B67801615608Cac5a687005411a145Ec9BCB1AF",
      "txHash": "0x35a2091a3cc29def14edc711146f66a867aae35789abadeeec30c5c227090cd4",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:15"
          },
          {
            "label": "spaceTokenImplementation",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "RegularTokenFactory",
            "src": "contracts/RegularTokenFactory.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5bafe785fcfb9dd0c0e7b37e0c6b92978809c565c1e3eec3b869127be18d636e": {
      "address": "0xca091d9A93630b377B6aE032cF5d1Fd760A8C1Eb",
      "txHash": "0xa354664f64a62190fd9d8b8f99524db4f441863fdf8c885573bb701a06605477",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:17"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:18"
          },
          {
            "label": "transferable",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "572ed4eb155753fc452b51dd3256f26b7995614aafc90f1fcb8e6a8234770f0a": {
      "address": "0xFAE191BB9A229c514051C9C3d62B9eAd74bc26fD",
      "txHash": "0xc3e759577761e4c3e496c941f08e05647c56f417456fe5e60cc4b51b254e3e8b",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:19"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:20"
          },
          {
            "label": "transferable",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "89c0371631d79b0753773a93b0fcdeaf1d7f7cff7b1021585d4e0da89c2be8c0": {
      "address": "0xB34d9f4d29fBB453858d5Fb0C02B94b0f31bB889",
      "txHash": "0x043e04aff7c20a69ad1051c57bceba0ba42e5e643abb64678ebde958450bb0c1",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:17"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:18"
          },
          {
            "label": "transferable",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e14b4851877475e95c4405b8a3720ede20250c8c95f13ace528bcab53b67792c": {
      "address": "0x9BBb5D77454abCAA8bd4160D8beE0Ec22A7A1590",
      "txHash": "0x70890e21997e97dc14154c90677d2af3ad1c6039c57dd7d93149348c8c8ceeda",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:17"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:18"
          },
          {
            "label": "transferable",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6bdb7d5e0ad513d1c47b6ac8d0cd92058c35dd7090e88be3701b062b1bf633a7": {
      "address": "0x4E42D5BfB2D6221C473E4aeF5790FFf2b26B9f5F",
      "txHash": "0x7b059d015cb12d39d2326b11736e948d0ed0aa79896422f2ba0b7fa25926c6f2",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:17"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:18"
          },
          {
            "label": "transferable",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ae059a880b11abc0333b60ea2efea88b34d5f35c052e874a2af2fa09055c3e9d": {
      "address": "0x8329eBdf66a72df242351E5B39E86F03a2C19611",
      "txHash": "0x980d3629b46a36f2e72e2831ed2f42058aa01ca41ad1a57298e4d71027a7eaa8",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:17"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:18"
          },
          {
            "label": "transferable",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4e5b5482cc29237c1c17d8e5083b7dff398173435dd374b4e999adfd479b23fc": {
      "address": "0xe04F6ce97437d6a7eC35160Ba227faB505017E14",
      "txHash": "0x6b9b5d1ff27d2b8f04dce42f95ac7b28c02d9fa356cfab79e30957eb13de80fd",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:17"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:18"
          },
          {
            "label": "transferable",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2c7de1991635e525f86cf83c06d59a4775b163a0d3c9202dd0c50a153d4499f4": {
      "address": "0xF47129F5ffA4D1CE40C4E9C4fc08Cb6d071d8Cd6",
      "txHash": "0x7704f387a04b80e0511bb2357ab3bff76b7d61340f44e9edbd06510768615529",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:17"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:18"
          },
          {
            "label": "transferable",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "0159c629c5bc35522783450e5b83ca43cc11c7386f2b71c8d382f71a724c46da": {
      "address": "0x3c66C42079b848EBCBC2D2978619cE5d2E78451f",
      "txHash": "0x216aabdf74effa47df2a1a791cc419dd0131a99d63d8b7cc8f936c5d13be14fc",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "OwnershipTokenFactoryStorage",
            "src": "contracts/storage/OwnershipTokenFactoryStorage.sol:15"
          },
          {
            "label": "ownershipTokenImplementation",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "OwnershipTokenFactory",
            "src": "contracts/OwnershipTokenFactory.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d25e280e5566c3a16224a374fce391ad73c428ac76b44bc57b2f70ecbc31b98e": {
      "address": "0x5BE10FdAce191216236668d9cDb12772f73CB698",
      "txHash": "0x1f3c9535afff352125d72bb8504ddb646a0f5796f90c3da1d6600cf2610a9271",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:17"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:18"
          },
          {
            "label": "transferable",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:19"
          },
          {
            "label": "decayRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DecayingSpaceToken",
            "src": "contracts/DecayingSpaceToken.sol:13"
          },
          {
            "label": "lastApplied",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DecayingSpaceToken",
            "src": "contracts/DecayingSpaceToken.sol:14"
          },
          {
            "label": "_tokenHolders",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DecayingSpaceToken",
            "src": "contracts/DecayingSpaceToken.sol:17"
          },
          {
            "label": "_isTokenHolder",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DecayingSpaceToken",
            "src": "contracts/DecayingSpaceToken.sol:18"
          },
          {
            "label": "totalBurnedFromDecay",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "DecayingSpaceToken",
            "src": "contracts/DecayingSpaceToken.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7d312a07409a5cd19535eba05d35ce65b7aae55bf9393e65f74981cd4581e060": {
      "address": "0xd62D3442C5a79Fc09Fe662D11F440c7F9ca51107",
      "txHash": "0x2a1005344f586ebb9a8d4f1276cbeabf7180b06e4d0538830e970f577fb89b16",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)3589",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:87"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)3597",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:88"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:90"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)3658_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:116"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:118"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:124"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:127"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:130"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)3430",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:132"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:135"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:138"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:141"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:142"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:145"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:146"
          },
          {
            "label": "spaceMinProposalDuration",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:149"
          },
          {
            "label": "delegationContract",
            "offset": 0,
            "slot": "63",
            "type": "t_contract(IVotingPowerDelegation)3530",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:150"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)3079_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)3589": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)3597": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)3430": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_contract(IVotingPowerDelegation)3530": {
            "label": "contract IVotingPowerDelegation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)3658_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)3658_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)3079_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)3079_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3291b7e9db0761e46d9e4092ffb5513d3b91642e172fbf329b2ee83ab4db2b15": {
      "address": "0x1378B7883D95AaF1a2A7B87813753e598C710EFb",
      "txHash": "0x8a0d0ff50a182d48b0ba5030f39cce1da2949891dd76e1076fdeaa19ee8a63ef",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:7"
          },
          {
            "label": "decayVotingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DecayingTokenFactoryStorage",
            "src": "contracts/storage/DecayingTokenFactoryStorage.sol:15"
          },
          {
            "label": "decayingTokenImplementation",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "DecayingTokenFactory",
            "src": "contracts/DecayingTokenFactory.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "91ff2fc8759a462b61bb3e6c0446de095cf05610bf5f56337ab7bcb36127afe4": {
      "address": "0xB06f27e16648F36C529839413f307a87b80d6ca1",
      "txHash": "0x0b0490fd152afb2492bf43daf571672b37325a0ee6fa106c6d5f4dd963d8cb44",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:17"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:18"
          },
          {
            "label": "transferable",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:19"
          },
          {
            "label": "spacesContract",
            "offset": 1,
            "slot": "2",
            "type": "t_address",
            "contract": "OwnershipSpaceToken",
            "src": "contracts/OwnershipSpaceToken.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "48eb6e22800fe38fa281efecc4b09fc9d9473fee4fb3e5874834e8cdc39f7faa": {
      "address": "0x6A45AA717D1c7F7c58811Cf663130fd47D179dA8",
      "txHash": "0xf1d5dc6fc03a5980575ee6d69dbb1e8977cca5488beb38f3ddde1af5681f9659",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:15"
          },
          {
            "label": "spaceTokenImplementation",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "RegularTokenFactory",
            "src": "contracts/RegularTokenFactory.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f042481a9b1f1cd6c1f1da205ebda90171ce5cb77ec40dff7e237950d17bf90e": {
      "address": "0x5A41C1564FCA0F7dEf9fC4E5e1E396FCfD3Fa9a3",
      "txHash": "0x27089aadd8599c19c778413a772ba0e630381b1ded4512e06ac88347d900d04d",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:7"
          },
          {
            "label": "votingPowerContract",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:8"
          },
          {
            "label": "isTokenDeployedByFactory",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:9"
          },
          {
            "label": "spaceTokens",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:12"
          },
          {
            "label": "allSpaceTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "RegularTokenFactoryStorage",
            "src": "contracts/storage/RegularTokenFactoryStorage.sol:15"
          },
          {
            "label": "spaceTokenImplementation",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "RegularTokenFactory",
            "src": "contracts/RegularTokenFactory.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9467dc2de48730797894dfd2eeede0f5375373aa36a2178912aed5fdb44b376e": {
      "address": "0x8C105Debd4B222FFb2c438f7034158c6BA29aDB5",
      "txHash": "0x467f7b28e4407d56e620826c5b6f84c665608513267a383a133f8408ca7a415f",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:17"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:18"
          },
          {
            "label": "transferable",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:19"
          },
          {
            "label": "executor",
            "offset": 1,
            "slot": "2",
            "type": "t_address",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "422001d99b138785c69fada634a816d315730875d53230a38472685fbf9a0b3f": {
      "address": "0x97661C189c4Abfb3763cFF9AB41d871FC856A19D",
      "txHash": "0xcbfa2f9c4d3167411192cb5fd139747b24bee2a4315c1e565cce3a9671a64269",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:17"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:18"
          },
          {
            "label": "transferable",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:19"
          },
          {
            "label": "executor",
            "offset": 1,
            "slot": "2",
            "type": "t_address",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:20"
          },
          {
            "label": "decayRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DecayingSpaceToken",
            "src": "contracts/DecayingSpaceToken.sol:13"
          },
          {
            "label": "lastApplied",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "DecayingSpaceToken",
            "src": "contracts/DecayingSpaceToken.sol:14"
          },
          {
            "label": "_tokenHolders",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage",
            "contract": "DecayingSpaceToken",
            "src": "contracts/DecayingSpaceToken.sol:17"
          },
          {
            "label": "_isTokenHolder",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "DecayingSpaceToken",
            "src": "contracts/DecayingSpaceToken.sol:18"
          },
          {
            "label": "totalBurnedFromDecay",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "DecayingSpaceToken",
            "src": "contracts/DecayingSpaceToken.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "38fd853dcaff2c74a51ba60b58140ab7786bb797e8cd73946673adf1c63cb20f": {
      "address": "0x3252909FF5a0e2015648ad2E00fb4dA1A2FFc416",
      "txHash": "0x062ff1fbfc42e02e45d7d0ab450ef1fdce3e78ee888325bbbc000aaf3cd1fb95",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:17"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:18"
          },
          {
            "label": "transferable",
            "offset": 0,
            "slot": "2",
            "type": "t_bool",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:19"
          },
          {
            "label": "executor",
            "offset": 1,
            "slot": "2",
            "type": "t_address",
            "contract": "RegularSpaceToken",
            "src": "contracts/RegularSpaceToken.sol:20"
          },
          {
            "label": "spacesContract",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "OwnershipSpaceToken",
            "src": "contracts/OwnershipSpaceToken.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)222_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f83a17e5d4e751c9ba1b5c84812761a001f9421eeded7c10c1ef114a7721d171": {
      "address": "0x8Bd28c6C5E29AD7BbEDEdd297a355BD569364f1a",
      "txHash": "0x9b432c83e726d7295c0f9f18b6174ad618c2632c48b1689badf739b742f6eefc",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)17031",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:87"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)17039",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:88"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:90"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)17100_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:116"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:118"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:124"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:127"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:130"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)16656",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:132"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:135"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:138"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:141"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:142"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:145"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:146"
          },
          {
            "label": "spaceMinProposalDuration",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:149"
          },
          {
            "label": "delegationContract",
            "offset": 0,
            "slot": "63",
            "type": "t_contract(IVotingPowerDelegation)16870",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:150"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)15186_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)17031": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)17039": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)16656": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_contract(IVotingPowerDelegation)16870": {
            "label": "contract IVotingPowerDelegation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)17100_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)17100_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)15186_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)15186_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "28dff940af416c85f897a8b7b32146f9937cfa17ebaa296556e0f91300b064e9": {
      "address": "0xc7eAA3b42e2D5213d41dd5377998012316C3950A",
      "txHash": "0x7c702ef966f3e226ebb852bd3a487d2750b901c05c5bbf7b332d1f76c8640e06",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)17047",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:87"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)17055",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:88"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:90"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)17116_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:116"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:118"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:124"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:127"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:130"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)16672",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:132"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:135"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:138"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:141"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:142"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:145"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:146"
          },
          {
            "label": "spaceMinProposalDuration",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:149"
          },
          {
            "label": "delegationContract",
            "offset": 0,
            "slot": "63",
            "type": "t_contract(IVotingPowerDelegation)16886",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:150"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)15202_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)17047": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)17055": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)16672": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_contract(IVotingPowerDelegation)16886": {
            "label": "contract IVotingPowerDelegation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)17116_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)17116_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)15202_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)15202_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "cdc573dfb2e6083ff9e7adc79868f9e301a59d9b4491dd31ef540c1108147c40": {
      "address": "0xC1553B1B8aA4e0dB61b930C5D8d92788DA73641E",
      "txHash": "0x81f1352f7219c50633e2b732953683a80e7271a4d3496db778458df8edd65ded",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)5223",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:87"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)5231",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:88"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:90"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)5292_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:116"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:118"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:124"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:127"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:130"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)5064",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:132"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:135"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:138"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:141"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:142"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:145"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:146"
          },
          {
            "label": "spaceMinProposalDuration",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:149"
          },
          {
            "label": "delegationContract",
            "offset": 0,
            "slot": "63",
            "type": "t_contract(IVotingPowerDelegation)5164",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:150"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)4479_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)5223": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)5231": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)5064": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_contract(IVotingPowerDelegation)5164": {
            "label": "contract IVotingPowerDelegation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)5292_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)5292_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)4479_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)4479_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "63153afcb468444375d80a5536581c7a6c67cc8938c0240953b3400c1136932d": {
      "address": "0x107dE5653bEd398b62125Ae0e5B7527aFF683eB7",
      "txHash": "0xac50a284d77d18a8475be0317e51eb2a5460b200921e651a1def172b744cb27d",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "spaceFactory",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IDAOSpaceFactory)3627",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:87"
          },
          {
            "label": "directoryContract",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IDirectory)3635",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:88"
          },
          {
            "label": "proposalCounter",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:90"
          },
          {
            "label": "proposalsCoreData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)3696_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:116"
          },
          {
            "label": "proposalValues",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:118"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)48_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:124"
          },
          {
            "label": "spaceAddresses",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:127"
          },
          {
            "label": "spaceTrialActivated",
            "offset": 0,
            "slot": "54",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:130"
          },
          {
            "label": "paymentTracker",
            "offset": 0,
            "slot": "55",
            "type": "t_contract(ISpacePaymentTracker)3468",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:132"
          },
          {
            "label": "spaceExecutedProposals",
            "offset": 0,
            "slot": "56",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:135"
          },
          {
            "label": "allExecutedProposals",
            "offset": 0,
            "slot": "57",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:138"
          },
          {
            "label": "spaceAcceptedProposals",
            "offset": 0,
            "slot": "58",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:141"
          },
          {
            "label": "spaceRejectedProposals",
            "offset": 0,
            "slot": "59",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:142"
          },
          {
            "label": "proposalYesVoters",
            "offset": 0,
            "slot": "60",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:145"
          },
          {
            "label": "proposalNoVoters",
            "offset": 0,
            "slot": "61",
            "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:146"
          },
          {
            "label": "spaceMinProposalDuration",
            "offset": 0,
            "slot": "62",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:149"
          },
          {
            "label": "delegationContract",
            "offset": 0,
            "slot": "63",
            "type": "t_contract(IVotingPowerDelegation)3568",
            "contract": "DAOProposalsStorage",
            "src": "contracts/storage/DAOProposalsStorage.sol:150"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Transaction)3117_storage)dyn_storage": {
            "label": "struct IDAOProposals.Transaction[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDAOSpaceFactory)3627": {
            "label": "contract IDAOSpaceFactory",
            "numberOfBytes": "20"
          },
          "t_contract(IDirectory)3635": {
            "label": "contract IDirectory",
            "numberOfBytes": "20"
          },
          "t_contract(ISpacePaymentTracker)3468": {
            "label": "contract ISpacePaymentTracker",
            "numberOfBytes": "20"
          },
          "t_contract(IVotingPowerDelegation)3568": {
            "label": "contract IVotingPowerDelegation",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
            "label": "mapping(uint256 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)3696_storage)": {
            "label": "mapping(uint256 => struct DAOProposalsStorage.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)3696_storage": {
            "label": "struct DAOProposalsStorage.ProposalCore",
            "members": [
              {
                "label": "spaceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "expired",
                "type": "t_bool",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "yesVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "noVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalVotingPowerAtSnapshot",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "votingPowerAtSnapshot",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "transactions",
                "type": "t_array(t_struct(Transaction)3117_storage)dyn_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Transaction)3117_storage": {
            "label": "struct IDAOProposals.Transaction",
            "members": [
              {
                "label": "target",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
