name: Deploy Preview

on: [pull_request]

env:
  NEON_DATABASE_USERNAME: ${{ secrets.DB_USER_NAME }} # change this to your database username
  NEON_DATABASE_NAME: ${{ secrets.DB_NAME }} # change this to your database name
  NEON_API_KEY: ${{ secrets.NEON_API_KEY }} # You can generate a an API key in your account settings
  NEON_PROJECT_ID: ${{ secrets.NEON_PROJECT_ID }} # You can find this in your project settings
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  DEFAULT_DB_URL: ${{ secrets.POSTGRES_URL }}
  NX_VERCEL_REMOTE_CACHE_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  NX_VERCEL_REMOTE_CACHE_TEAM: ${{ secrets.VERCEL_TEAM_ID }}

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      has_migrations: ${{ steps.detect.outputs.has_migrations }}
    steps:
      - uses: actions/checkout@v4
      - name: Detect Changes
        id: detect
        uses: ./.github/actions/detect-changes

  deploy-preview:
    needs: detect-changes
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Debug step
      - name: Debug Workflow
        run: echo "Running Deploy Preview workflow for PR ${{ github.event.pull_request.number }}"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: 18.19.1
          cache: 'pnpm'

      - run: pnpm i
      - uses: nrwl/nx-set-shas@v4

      - name: Get branch name
        if: needs.detect-changes.outputs.has_migrations == 'true'
        id: branch-name
        uses: tj-actions/branch-names@v8

      - name: Create Neon Branch
        if: needs.detect-changes.outputs.has_migrations == 'true'
        id: create-branch
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ env.NEON_PROJECT_ID }}
          parent: main
          branch_name: preview/pr-${{ github.event.number }}-${{ steps.branch-name.outputs.current_branch }}
          username: ${{ env.NEON_DATABASE_USERNAME }}
          database: ${{ env.NEON_DATABASE_NAME }}
          api_key: ${{ env.NEON_API_KEY }}

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ env.VERCEL_TOKEN }}

      - name: Run Migrations
        if: needs.detect-changes.outputs.has_migrations == 'true'
        run: |
          echo "BRANCH_DB_URL: ${{ steps.create-branch.outputs.db_url_with_pooler }}" >> .env
          npx nx run storage-postgres:migrate:production

      - name: Run Seeds
        if: needs.detect-changes.outputs.has_migrations == 'true'
        run: |
          echo "BRANCH_DB_URL: ${{ steps.create-branch.outputs.db_url_with_pooler }}" >> .env
          npx nx run storage-postgres:seed:production

      - name: Post Schema Diff Comment to PR
        if: needs.detect-changes.outputs.has_migrations == 'true'
        uses: neondatabase/schema-diff-action@v1
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          compare_branch: preview/pr-${{ github.event.number }}-${{ steps.branch-name.outputs.current_branch }}
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ env.VERCEL_TOKEN }}

      - name: Deploy Preview to Vercel
        id: deploy
        run: echo preview_url=$(vercel deploy --prebuilt --token=${{ env.VERCEL_TOKEN }}) >> $GITHUB_OUTPUT

  main:
    needs: [deploy-preview, detect-changes]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: 18.19.1
          cache: 'pnpm'

      - run: pnpm install
      - uses: nrwl/nx-set-shas@v4

      - run: pnpm run format:check

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v8

      - name: Create Neon Branch
        id: create-branch
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: ${{ env.NEON_PROJECT_ID }}
          parent: main
          branch_name: test/pr-${{ github.event.number }}-${{ steps.branch-name.outputs.current_branch }}
          username: ${{ env.NEON_DATABASE_USERNAME }}
          database: ${{ env.NEON_DATABASE_NAME }}
          api_key: ${{ env.NEON_API_KEY }}

      - name: Run Migrations
        if: needs.detect-changes.outputs.has_migrations == 'true'
        run: |
          echo "BRANCH_DB_URL: ${{ steps.create-branch.outputs.db_url_with_pooler }}" >> .env.production
          npx nx run storage-postgres:migrate:production

      - run: npx nx affected -t lint test build
        env:
          BRANCH_DB_URL: ${{ steps.create-branch.outputs.db_url_with_pooler }}

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Seeds
        if: needs.detect-changes.outputs.has_migrations == 'true'
        run: |
          echo "BRANCH_DB_URL: ${{ steps.create-branch.outputs.db_url_with_pooler }}" >> .env
          npx nx run storage-postgres:seed:production

      - run: npx nx affected --parallel 1 -t e2e

      - name: Delete Neon Branch
        if: always()
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ secrets.NEON_PROJECT_ID }}
          branch: test/pr-${{ github.event.number }}-${{ github.event.pull_request.head.ref }}
          api_key: ${{ secrets.NEON_API_KEY }}
